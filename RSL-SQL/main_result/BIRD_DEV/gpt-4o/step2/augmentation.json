[
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`percent (%) eligible free (k-12)`",
            "frpm.`enrollment (k-12)`",
            "frpm.`free meal count (k-12)`",
            "frpm.`cdscode`",
            "frpm.`county name`",
            "schools.`cdscode`",
            "schools.`county`",
            "schools.`school`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "K-12 students",
            "schools in Alameda County"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`soctype`",
            "frpm.`percent (%) eligible free (ages 5-17)`",
            "frpm.`enrollment (ages 5-17)`",
            "frpm.`free meal count (ages 5-17)`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": [
            "lowest three eligible free rates",
            "students aged 5-17",
            "continuation schools"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`zip`",
            "schools.`cdscode`",
            "schools.`county`",
            "frpm.`charter school (y/n)`",
            "frpm.`cdscode`",
            "frpm.`county name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "charter schools",
            "located in Fresno County",
            "under Fresno County Office of Education"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`frpm count (k-12)`",
            "frpm.`cdscode`",
            "schools.`mailstreet`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "unabbreviated mailing street address",
            "school with the highest FRPM count",
            "K-12 students"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`phone`",
            "schools.`opendate`",
            "frpm.`charter school (y/n)`",
            "frpm.`charter funding type`",
            "schools.`cdscode`",
            "frpm.`cdscode`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "charter-funded schools",
            "opened after 2000/1/1"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`virtual`",
            "schools.`cdscode`",
            "satscores.`avgscrmath`",
            "satscores.`cds`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "average score in Math greater than 400 in the SAT test",
            "schools are exclusively virtual"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`magnet`",
            "schools.`cdscode`",
            "schools.`school`",
            "satscores.`cds`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "SAT test takers over 500",
            "schools that are magnet schools",
            "schools that offer a magnet program"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`phone`",
            "satscores.`numge1500`",
            "satscores.`cds`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "school with the highest number of test takers",
            "SAT score over 1500"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools",
            "satscores"
        ],
        "columns": [
            "frpm.`frpm count (k-12)`",
            "frpm.`cdscode`",
            "schools.`cdscode`",
            "satscores.`cds`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "schools with the highest FRPM count for K-12 students"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores",
            "frpm"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "satscores.`cds`",
            "schools.`cdscode`",
            "schools.`fundingtype`",
            "frpm.`cdscode`",
            "frpm.`charter funding type`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "average score in Math over 560 in the SAT test",
            "schools are directly charter-funded"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools",
            "frpm"
        ],
        "columns": [
            "satscores.`avgscrread`",
            "satscores.`cds`",
            "schools.`cdscode`",
            "frpm.`cdscode`",
            "frpm.`frpm count (ages 5-17)`"
        ],
        "sql_keywords": [
            "JOIN",
            "MAX",
            "="
        ],
        "conditions": [
            "highest average score in Reading in the SAT test",
            "FRPM count for students aged 5-17"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`cdscode`",
            "frpm.`enrollment (k-12)`",
            "frpm.`enrollment (ages 5-17)`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "total enrollment over 500"
        ]
    },
    {
        "tables": [
            "frpm",
            "satscores",
            "schools"
        ],
        "columns": [
            "frpm.`percent (%) eligible free (ages 5-17)`",
            "frpm.`cdscode`",
            "frpm.`free meal count (ages 5-17)`",
            "frpm.`enrollment (ages 5-17)`",
            "satscores.`cds`",
            "satscores.`numge1500`",
            "satscores.`numtsttakr`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "JOIN",
            ">",
            "MAX",
            "WHERE",
            "="
        ],
        "conditions": [
            "SAT excellence rate over 0.3",
            "students aged 5-17"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`phone`",
            "satscores.`numge1500`",
            "satscores.`numtsttakr`",
            "satscores.`cds`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "schools with the top 3 SAT excellence rate"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`ncesschool`",
            "schools.`cdscode`",
            "frpm.`enrollment (ages 5-17)`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "Top five schools",
            "Descending order",
            "Highest to lowest",
            "Most number of Enrollment (Ages 5-17)",
            "NCES school identification number"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`district`",
            "schools.`statustype`",
            "satscores.`avgscrread`",
            "satscores.`dname`"
        ],
        "sql_keywords": [
            "JOIN",
            "MAX",
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "district is active",
            "highest average score in Reading"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`county`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "<",
            "JOIN",
            "COUNT"
        ],
        "conditions": [
            "location: merged Alameda",
            "number of test takers less than 100"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`charternum`",
            "schools.`school`",
            "satscores.`avgscrwrite`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "ORDER BY"
        ],
        "conditions": [
            "average score in Writing greater than 499",
            "showing charter numbers"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`county`",
            "schools.`fundingtype`",
            "satscores.`cds`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "=",
            "<=",
            "JOIN"
        ],
        "conditions": [
            "location: Fresno",
            "directly funded",
            "number of test takers not more than 250"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "satscores.`cds`",
            "schools.`cdscode`",
            "schools.`phone`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "school with the highest average score in Math"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`county`",
            "frpm.`low grade`",
            "frpm.`high grade`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Location is Amador",
            "Low Grade is 9",
            "High Grade is 12"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`free meal count (k-12)`",
            "frpm.`frpm count (k-12)`",
            "frpm.`cdscode`",
            "schools.`cdscode`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            ">=",
            "<="
        ],
        "conditions": [
            "Location: Los Angeles",
            "More than 500 free meals",
            "Less than 700 free or reduced price meals",
            "Grade level: K-12"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`school`",
            "schools.`county`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "MAX"
        ],
        "conditions": [
            "school in Contra Costa",
            "highest number of test takers"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "frpm.`school name`",
            "frpm.`enrollment (k-12)`",
            "frpm.`enrollment (ages 5-17)`",
            "schools.`street`",
            "schools.`cdscode`",
            "frpm.`cdscode`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "difference in enrollments between K-12 and ages 5-17 greater than 30"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools",
            "satscores"
        ],
        "columns": [
            "frpm.`percent (%) eligible free (k-12)`",
            "frpm.`cdscode`",
            "schools.`school`",
            "satscores.`numge1500`",
            "satscores.`cds`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "percent eligible for free meals in K-12 is more than 0.1",
            "test score is greater than or equal to 1500"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "schools.`cdscode`",
            "schools.`school`",
            "schools.`fundingtype`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "schools in Riverside",
            "average math score for SAT greater than 400"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`school`",
            "schools.`street`",
            "schools.`city`",
            "schools.`state`",
            "schools.`zip`",
            "frpm.`school name`",
            "frpm.`school type`",
            "frpm.`frpm count (ages 5-17)`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "high schools in Monterey",
            "more than 800 free or reduced price meals",
            "ages 15-17"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`school`",
            "schools.`phone`",
            "schools.`opendate`",
            "schools.`closeddate`",
            "satscores.`avgscrwrite`"
        ],
        "sql_keywords": [
            "=",
            "OR",
            "JOIN"
        ],
        "conditions": [
            "schools opened after 1991",
            "schools closed before 2000"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "frpm.`enrollment (k-12)`",
            "frpm.`enrollment (ages 5-17)`",
            "frpm.`charter funding type`",
            "frpm.`cdscode`",
            "schools.`school`",
            "schools.`doctype`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "K-12 enrollment",
            "15-17 enrollment",
            "schools that are locally funded",
            "difference above average difference"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`enrollment (k-12)`",
            "schools.`cdscode`",
            "schools.`opendate`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "first-through-twelfth-grade school",
            "largest enrollment"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`city`",
            "frpm.`enrollment (k-12)`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "cities",
            "top 5 lowest enrollment number",
            "students in grades 1 through 12"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`enrollment (k-12)`",
            "frpm.`free meal count (k-12)`",
            "frpm.`cdscode`",
            "schools.`cdscode`",
            "schools.`school`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "OFFSET"
        ],
        "conditions": [
            "10th and 11th schools with the highest enrolment",
            "students in grades 1 through 12"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`frpm count (k-12)`",
            "frpm.`enrollment (k-12)`",
            "frpm.`cdscode`",
            "frpm.`school name`",
            "schools.`soc`",
            "schools.`cdscode`",
            "schools.`school`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "grades 1-12",
            "top 5 schools with highest free or reduced price meal count",
            "ownership code 66"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`website`",
            "schools.`school`",
            "frpm.`free meal count (ages 5-17)`"
        ],
        "sql_keywords": [
            "LIKE",
            "BETWEEN"
        ],
        "conditions": [
            "free meal count between 1,900 and 2,000",
            "students aged 5-17"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`admfname1`",
            "schools.`admlname1`",
            "schools.`cdscode`",
            "frpm.`cdscode`",
            "frpm.`enrollment (ages 5-17)`",
            "frpm.`free meal count (ages 5-17)`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "students between the ages of 5 and 17",
            "school run by Kacey Gibson"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`admemail1`",
            "frpm.`enrollment (k-12)`",
            "frpm.`charter school (y/n)`",
            "frpm.`cdscode`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "chartered school",
            "fewest students enrolled",
            "grades 1 through 12"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "satscores.`numge1500`",
            "satscores.`cds`",
            "schools.`cdscode`",
            "schools.`admfname1`",
            "schools.`admlname1`",
            "schools.`admfname2`",
            "schools.`admlname2`",
            "schools.`admfname3`",
            "schools.`admlname3`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "school with the highest number of students scoring 1500 or more on the SAT"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`street`",
            "schools.`city`",
            "schools.`zip`",
            "schools.`state`",
            "satscores.`numge1500`",
            "satscores.`numtsttakr`",
            "satscores.`cds`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "school with the lowest excellence rate"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`website`",
            "schools.`county`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "Location: Los Angeles County",
            "Number of test takers between 2,000 and 3,000"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`opendate`",
            "schools.`county`",
            "satscores.`cds`",
            "satscores.`numtsttakr`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "AVG"
        ],
        "conditions": [
            "schools located in Fresno",
            "schools opened between 1/1/1980 and 12/31/1980"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrread`",
            "satscores.`dname`",
            "satscores.`cds`",
            "schools.`phone`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "school with the lowest average score in reading",
            "located in Fresno Unified"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`school`",
            "schools.`virtual`",
            "schools.`county`",
            "satscores.`avgscrread`",
            "satscores.`cds`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "PARTITION BY",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "virtual schools",
            "top 5 in their respective counties",
            "based on average reading scores"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "satscores.`sname`",
            "satscores.`cds`",
            "schools.`cdscode`",
            "schools.`edopsname`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "school scored the highest average in Math"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "satscores.`avgscrread`",
            "satscores.`avgscrwrite`",
            "satscores.`cds`",
            "schools.`cdscode`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "lowest average score for all subjects",
            "average math score of the school with the lowest average score",
            "location of the school in a county"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "satscores.`avgscrwrite`",
            "satscores.`numge1500`",
            "schools.`city`",
            "schools.`cdscode`",
            "satscores.`cds`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "MAX"
        ],
        "conditions": [
            "highest number of test takers",
            "total SAT scores greater or equal to 1500"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`school`",
            "satscores.`avgscrwrite`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "schools managed by Ricci Ulrich",
            "average writing score of each school"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`enrollment (k-12)`",
            "frpm.`cdscode`",
            "schools.`cdscode`",
            "schools.`school`",
            "schools.`doc`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "state special schools",
            "highest number of enrollees",
            "grades 1 through 12"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`opendate`",
            "schools.`county`",
            "schools.`doc`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "monthly average number of schools",
            "opened in Alameda County",
            "under the jurisdiction of the Elementary School District",
            "in 1980"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`doc`",
            "schools.`county`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "UNION",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "merged Unified School District schools in Orange County",
            "merged Elementary School District schools"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`county`",
            "schools.`school`",
            "schools.`closeddate`",
            "schools.`statustype`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT 1"
        ],
        "conditions": [
            "different county",
            "most number of closed schools"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "satscores.`sname`",
            "satscores.`cds`",
            "schools.`street`",
            "schools.`school`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "7th highest Math average"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrread`",
            "satscores.`cds`",
            "schools.`mailstreet`",
            "schools.`school`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "school with the lowest average score in reading"
        ]
    },
    {
        "tables": [
            "satscores",
            "schools"
        ],
        "columns": [
            "satscores.`avgscrmath`",
            "satscores.`avgscrread`",
            "satscores.`avgscrwrite`",
            "schools.`cdscode`",
            "schools.`mailcity`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "SUM",
            "WHERE"
        ],
        "conditions": [
            "total SAT scores greater or equal to 1500",
            "mailing city is Lakeport"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`mailcity`",
            "satscores.`numtsttakr`",
            "schools.`cdscode`",
            "satscores.`cds`"
        ],
        "sql_keywords": [
            "fuzzy matching LIKE"
        ],
        "conditions": [
            "mailing city address is in Fresno"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`school`",
            "schools.`mailzip`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "schools under Avetik Atoian's administration",
            "related mailing zip codes"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`mailstate`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            "COUNT"
        ],
        "conditions": [
            "mailing state address in California",
            "schools located in the county of Colusa",
            "schools located in the county of Humboldt"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`mailstate`",
            "schools.`statustype`",
            "schools.`city`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "mailing state address in California",
            "active",
            "located in San Joaquin city"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`phone`",
            "schools.`ext`",
            "satscores.`avgscrwrite`",
            "satscores.`cds`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "school with the 333rd highest average writing score"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`phone`",
            "schools.`ext`",
            "schools.`school`",
            "schools.`zip`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "zip code 95203-3704"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`website`",
            "schools.`admlname1`",
            "schools.`admfname1`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "AND"
        ],
        "conditions": [
            "schools under the administrations of Mike Larson",
            "schools under the administrations of Dante Alvarez"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`website`",
            "schools.`virtual`",
            "schools.`charter`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "partially virtual chartered schools",
            "located in San Joaquin"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`charter`",
            "schools.`city`",
            "schools.`doc`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "chartered schools",
            "located in the city of Hickman",
            "owned by the Elementary School District"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`percent (%) eligible free (k-12)`",
            "frpm.`cdscode`",
            "schools.`charter`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "non-chartered schools",
            "county of Los Angeles",
            "percent of eligible free meals for grades 1 through 12 less than 0.18%"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`charter`",
            "schools.`charternum`",
            "schools.`admfname1`",
            "schools.`admlname1`",
            "schools.`admfname2`",
            "schools.`admlname2`",
            "schools.`admfname3`",
            "schools.`admlname3`",
            "schools.`school`",
            "schools.`city`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "chartered schools with charter number 00D2"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`mailcity`",
            "schools.`charternum`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "mailing city in Hickman",
            "charter number 00D4"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`county`",
            "schools.`fundingtype`"
        ],
        "sql_keywords": [
            "=",
            "COUNT"
        ],
        "conditions": [
            "Santa Clara County schools",
            "locally funded",
            "all other types of charter school funding"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`opendate`",
            "schools.`fundingtype`",
            "schools.`county`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "date between 1/1/2000 and 12/31/2005",
            "directly funded schools",
            "opened",
            "county of Stanislaus"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`city`",
            "schools.`statustype`",
            "schools.`closeddate`",
            "schools.`district`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "Community College District closure",
            "year 1989",
            "city of San Francisco"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`county`",
            "schools.`closeddate`",
            "schools.`soc`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "county with the most number of school closures",
            "in the 1980s",
            "school ownership code belonging to Youth Authority Facilities (CEA)"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`ncesdist`",
            "schools.`soc`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "School Ownership Code",
            "part of the State Special Schools"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`statustype`",
            "schools.`county`",
            "schools.`doctype`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "active District Community Day Schools in the county of Alpine",
            "closed District Community Day Schools in the county of Alpine"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`district`",
            "schools.`magnet`",
            "schools.`city`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "School does not offer a magnet program",
            "School is in the city of Fresno"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`edopscode`",
            "schools.`city`",
            "frpm.`enrollment (ages 5-17)`",
            "frpm.`academic year`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "ages of 5 to 17",
            "enrolled at the State Special School",
            "located in Fremont",
            "for the 2014-2015 academic year"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`mailstreet`",
            "schools.`cdscode`",
            "frpm.`cdscode`",
            "frpm.`frpm count (ages 5-17)`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "ages 5 to 17",
            "Youth Authority School",
            "mailing street address of PO Box 1040"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`ncesdist`",
            "schools.`edopscode`",
            "frpm.`low grade`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "District Special Education Consortia School",
            "National Center for Educational Statistics school district identification number 0613360"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`nslp provision status`",
            "frpm.`county code`",
            "frpm.`cdscode`",
            "schools.`cdscode`",
            "schools.`eilname`",
            "schools.`school`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Breakfast Provision 2",
            "county code 37"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`city`",
            "schools.`eilcode`",
            "schools.`cdscode`",
            "schools.`county`",
            "frpm.`nslp provision status`",
            "frpm.`low grade`",
            "frpm.`high grade`",
            "frpm.`cdscode`",
            "frpm.`county name`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "high school level",
            "Lunch Provision 2",
            "lowest grade is 9",
            "highest grade is 12",
            "county of Merced"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`cdscode`",
            "schools.`gsserved`",
            "schools.`county`",
            "schools.`school`",
            "frpm.`cdscode`",
            "frpm.`low grade`",
            "frpm.`high grade`",
            "frpm.`percent (%) eligible frpm (ages 5-17)`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "grade span of Kindergarten to 9th grade",
            "located in the county of Los Angeles",
            "Percent (%) Eligible FRPM (Ages 5-17)"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`city`",
            "schools.`gsserved`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type of grade span",
            "served in the city of Adelanto"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`county`",
            "schools.`virtual`"
        ],
        "sql_keywords": [
            "=",
            "COUNT",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "Location between San Diego and Santa Barbara",
            "Schools that do not offer physical building"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "schools.`school`",
            "schools.`latitude`",
            "frpm.`school type`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "school with the highest latitude"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`city`",
            "schools.`school`",
            "schools.`latitude`",
            "frpm.`low grade`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "school in the state of California",
            "lowest latitude coordinates",
            "lowest grade of the school"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`gsoffered`",
            "schools.`longitude`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "DESC"
        ],
        "conditions": [
            "school with the highest longitude"
        ]
    },
    {
        "tables": [
            "schools",
            "frpm"
        ],
        "columns": [
            "schools.`gsoffered`",
            "schools.`magnet`",
            "schools.`cdscode`",
            "schools.`city`",
            "frpm.`nslp provision status`",
            "frpm.`cdscode`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "schools offering a magnet program",
            "grade span of Kindergarten to 8th grade",
            "schools offering Multiple Provision Types",
            "number of cities offering Kindergarten to 8th grade span",
            "number of schools serving Kindergarten to 8th grade span for each city"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`admfname1`",
            "schools.`district`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "COUNT",
            "DESC"
        ],
        "conditions": [
            "two most common first names among the school administrators",
            "district to which they administer"
        ]
    },
    {
        "tables": [
            "frpm",
            "schools"
        ],
        "columns": [
            "frpm.`percent (%) eligible free (k-12)`",
            "frpm.`district code`",
            "schools.`admfname1`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "Percent (%) Eligible Free (K-12)",
            "school administered by an administrator whose first name is Alusine",
            "list the district code of the school"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`admlname1`",
            "schools.`charternum`",
            "schools.`district`",
            "schools.`county`",
            "schools.`school`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "administrator's last name",
            "oversees the school with Charter number 40",
            "indicate the district",
            "indicate the county where the school is situated",
            "indicate the name of the school"
        ]
    },
    {
        "tables": [
            "schools"
        ],
        "columns": [
            "schools.`admemail1`",
            "schools.`admemail2`",
            "schools.`admemail3`",
            "schools.`county`",
            "schools.`city`",
            "schools.`opendate`",
            "schools.`soc`",
            "schools.`doc`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "AND",
            "BETWEEN"
        ],
        "conditions": [
            "administrator of the school",
            "located in San Bernardino county",
            "City of San Bernardino City Unified",
            "opened between 1/1/2009 to 12/31/2010",
            "school types are public Intermediate/Middle Schools",
            "school types are Unified Schools"
        ]
    },
    {
        "tables": [
            "schools",
            "satscores"
        ],
        "columns": [
            "schools.`admemail1`",
            "schools.`school`",
            "satscores.`numge1500`",
            "satscores.`numtsttakr`",
            "satscores.`cds`",
            "schools.`cdscode`"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "school with the highest number of test takers",
            "SAT scores of at least 1500"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`frequency`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "accounts who choose issuance after transaction",
            "staying in East Bohemia region"
        ]
    },
    {
        "tables": [
            "account",
            "district",
            "loan"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`",
            "loan.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "region in Prague"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.`a12`",
            "district.`a13`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average unemployment ratio of 1995",
            "average unemployment ratio of 1996"
        ]
    },
    {
        "tables": [
            "client",
            "district"
        ],
        "columns": [
            "client.`gender`",
            "client.`district_id`",
            "district.`a11`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "<",
            "JOIN"
        ],
        "conditions": [
            "female average salary more than 6000",
            "female average salary less than 10000"
        ]
    },
    {
        "tables": [
            "client",
            "district"
        ],
        "columns": [
            "client.`gender`",
            "client.`district_id`",
            "district.`a3`",
            "district.`a11`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "gender is male",
            "location is North Bohemia",
            "average salary greater than 8000"
        ]
    },
    {
        "tables": [
            "client",
            "disp",
            "account",
            "district"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "client.`birth_date`",
            "client.`district_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a11`"
        ],
        "sql_keywords": [
            "=",
            "MIN",
            "MAX",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "gender is female",
            "oldest clients",
            "lowest average salary",
            "calculate gap between lowest average salary and highest average salary"
        ]
    },
    {
        "tables": [
            "client",
            "district",
            "account",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`birth_date`",
            "client.`district_id`",
            "district.`a11`",
            "district.`district_id`",
            "account.`account_id`",
            "account.`district_id`",
            "disp.`account_id`",
            "disp.`client_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "youngest clients",
            "highest average salary"
        ]
    },
    {
        "tables": [
            "account",
            "disp",
            "client"
        ],
        "columns": [
            "account.`frequency`",
            "disp.`type`",
            "disp.`client_id`",
            "disp.`account_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "customers choose statement of weekly issuance",
            "customers are Owner"
        ]
    },
    {
        "tables": [
            "account",
            "disp",
            "client"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "disp.`client_id`",
            "disp.`account_id`",
            "disp.`type`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "client who choose statement of issuance",
            "transaction are Disponent"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "loan.`date`",
            "loan.`amount`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "MIN",
            "JOIN"
        ],
        "conditions": [
            "approved loan date in 1997",
            "lowest approved amount",
            "weekly issuance statement"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "loan.`duration`",
            "loan.`amount`",
            "account.`date`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "loan validity more than 12 months",
            "highest approved amount",
            "account opening date in 1993"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`gender`",
            "client.`birth_date`",
            "client.`district_id`",
            "district.`a2`",
            "account.`account_id`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "<",
            "AND",
            "JOIN"
        ],
        "conditions": [
            "female customers",
            "born before 1950",
            "stayed in Sokolov"
        ]
    },
    {
        "tables": [
            "account",
            "trans"
        ],
        "columns": [
            "account.`account_id`",
            "trans.`date`"
        ],
        "sql_keywords": [
            "=",
            "MIN"
        ],
        "conditions": [
            "earliest trading date in 1995"
        ]
    },
    {
        "tables": [
            "account",
            "order"
        ],
        "columns": [
            "account.`account_id`",
            "account.`date`",
            "order.`amount`"
        ],
        "sql_keywords": [
            "DISTINCT",
            ">",
            "<"
        ],
        "conditions": [
            "account opening date before 1997",
            "amount of money greater than 3000USD"
        ]
    },
    {
        "tables": [
            "client",
            "card",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "card.`issued`",
            "disp.`client_id`",
            "card.`disp_id`",
            "disp.`disp_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "card issued on 1994/3/3"
        ]
    },
    {
        "tables": [
            "trans",
            "account"
        ],
        "columns": [
            "trans.`amount`",
            "trans.`date`",
            "trans.`account_id`",
            "account.`account_id`",
            "account.`date`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "transaction amount is 840 USD",
            "transaction date is 1998/10/14"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`date`",
            "loan.`account_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "loan approved on 1994/8/25"
        ]
    },
    {
        "tables": [
            "trans",
            "card",
            "disp",
            "client"
        ],
        "columns": [
            "trans.`amount`",
            "card.`issued`",
            "disp.`disp_id`",
            "disp.`client_id`",
            "trans.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "transaction amount",
            "client's card opened on 1996/10/21"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`gender`",
            "client.`birth_date`",
            "account.`district_id`",
            "district.`a11`",
            "disp.`client_id`",
            "disp.`account_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "MAX"
        ],
        "conditions": [
            "oldest client",
            "opened account",
            "highest average salary branch"
        ]
    },
    {
        "tables": [
            "loan",
            "trans",
            "account",
            "disp",
            "client"
        ],
        "columns": [
            "loan.`account_id`",
            "loan.`amount`",
            "trans.`amount`",
            "trans.`date`",
            "account.`account_id`",
            "account.`date`",
            "disp.`client_id`",
            "disp.`account_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "client applied the biggest loan",
            "first amount of transaction after account opened"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "client.`district_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`a2`",
            "district.`district_id`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "clients opened their accounts in Jesenik branch",
            "clients were women"
        ]
    },
    {
        "tables": [
            "trans",
            "disp"
        ],
        "columns": [
            "trans.`amount`",
            "trans.`date`",
            "disp.`disp_id`",
            "disp.`account_id`",
            "trans.`account_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "transaction amount is 5100 USD",
            "transaction date is 1998/9/2"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`date`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "location is Litomerice",
            "year is 1996"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`birth_date`",
            "client.`gender`",
            "client.`district_id`",
            "account.`account_id`",
            "account.`district_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "gender is female",
            "birthdate is 1976/1/29"
        ]
    },
    {
        "tables": [
            "client",
            "loan",
            "disp",
            "account"
        ],
        "columns": [
            "loan.`amount`",
            "loan.`date`",
            "loan.`account_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "client.`birth_date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "loan amount 98832 USD",
            "loan application date 1996/1/3"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "first client",
            "opened account in Prague"
        ]
    },
    {
        "tables": [
            "client",
            "district"
        ],
        "columns": [
            "client.`gender`",
            "district.`a3`",
            "district.`a4`",
            "district.`district_id`",
            "client.`district_id`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "JOIN"
        ],
        "conditions": [
            "branch located in south Bohemia",
            "biggest number of inhabitants"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "disp",
            "client",
            "trans"
        ],
        "columns": [
            "loan.`account_id`",
            "loan.`date`",
            "account.`account_id`",
            "disp.`account_id`",
            "disp.`client_id`",
            "client.`client_id`",
            "trans.`account_id`",
            "trans.`date`",
            "trans.`balance`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "loan approved first on 1993/7/5",
            "account balance from 1993/3/22",
            "account balance to 1998/12/27"
        ]
    },
    {
        "tables": [
            "loan"
        ],
        "columns": [
            "loan.`amount`",
            "loan.`status`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "loan amount fully paid",
            "no issue"
        ]
    },
    {
        "tables": [
            "loan",
            "account"
        ],
        "columns": [
            "loan.`amount`",
            "loan.`status`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "<",
            "=",
            "AND"
        ],
        "conditions": [
            "loan amount less than USD100,000",
            "accounts still running with no issue"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "district.`a2`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "accounts in 1993",
            "statement issued after transaction"
        ]
    },
    {
        "tables": [
            "account",
            "client",
            "district",
            "disp"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "account.`date`",
            "client.`client_id`",
            "client.`district_id`",
            "district.`district_id`",
            "district.`a3`",
            "disp.`account_id`",
            "disp.`client_id`",
            "disp.`type`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "Year between 1995 and 2000",
            "Account holders from 'east Bohemia'"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`date`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "JOIN",
            "=",
            "DISTINCT"
        ],
        "conditions": [
            "accounts from 'Prachatice'"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`loan_id`",
            "loan.`account_id`",
            "account.`district_id`",
            "district.`a2`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "loan ID is '4990'"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`account_id`",
            "loan.`amount`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            ">"
        ],
        "conditions": [
            "account ID",
            "district",
            "region",
            "loan amount greater than USD300,000"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`loan_id`",
            "district.`district_id`",
            "district.`a11`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "loan duration of 60 months"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`status`",
            "loan.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a12`",
            "district.`a13`",
            "district.`a2`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "loans contracts which are still running",
            "clients are in debt",
            "district of the client",
            "state of the client",
            "percentage unemployment rate increment from year 1995 to 1996"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "account.`date`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "account from 'Decin' district",
            "accounts opened in 1993"
        ]
    },
    {
        "tables": [
            "account"
        ],
        "columns": [
            "account.`account_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "monthly issuance of statements"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "disp",
            "district"
        ],
        "columns": [
            "client.`gender`",
            "client.`client_id`",
            "account.`district_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "district.`a2`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "WHERE",
            "="
        ],
        "conditions": [
            "top nine districts",
            "descending order",
            "highest to lowest",
            "number of female account holders"
        ]
    },
    {
        "tables": [
            "trans",
            "account",
            "district"
        ],
        "columns": [
            "trans.`amount`",
            "trans.`date`",
            "trans.`type`",
            "account.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "withdrawals",
            "non-credit card",
            "top ten",
            "by district names",
            "for the month of January 1996"
        ]
    },
    {
        "tables": [
            "account",
            "district",
            "disp",
            "card"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "district.`a3`",
            "disp.`account_id`",
            "disp.`disp_id`",
            "card.`disp_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "LEFT JOIN",
            "IS NULL"
        ],
        "conditions": [
            "location is South Bohemia",
            "do not own credit cards"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`status`",
            "loan.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "JOIN",
            "="
        ],
        "conditions": [
            "highest active loan"
        ]
    },
    {
        "tables": [
            "loan",
            "disp",
            "client"
        ],
        "columns": [
            "loan.`amount`",
            "disp.`client_id`",
            "client.`gender`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "borrowers are male"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.`a13`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "year is 1996",
            "highest unemployment rate"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "district.`a16`",
            "district.`district_id`",
            "account.`district_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "largest number of crimes committed in 1996",
            "number of accounts opened"
        ]
    },
    {
        "tables": [
            "account",
            "trans",
            "disp",
            "card"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "trans.`account_id`",
            "trans.`balance`",
            "trans.`operation`",
            "disp.`account_id`",
            "disp.`disp_id`",
            "card.`disp_id`",
            "card.`type`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "credit card withdrawal",
            "monthly issuance",
            "negative balance"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "loan.`amount`",
            "loan.`date`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "date between 1/1/1995 and 12/31/1997",
            "loan amount at least 250,000",
            "monthly statement issuance",
            "loans approved"
        ]
    },
    {
        "tables": [
            "account",
            "loan",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "loan.`status`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "accounts with running contracts",
            "Branch location 1"
        ]
    },
    {
        "tables": [
            "client",
            "district"
        ],
        "columns": [
            "district.`a15`",
            "district.`district_id`",
            "client.`gender`",
            "client.`district_id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "=",
            "JOIN",
            "COUNT"
        ],
        "conditions": [
            "branch with the second-highest number of crimes in 1995",
            "number of male clients"
        ]
    },
    {
        "tables": [
            "card",
            "disp"
        ],
        "columns": [
            "card.`type`",
            "disp.`type`",
            "card.`disp_id`",
            "disp.`disp_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "credit card type is high-level",
            "disposition type is OWNER"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "district is Pisek"
        ]
    },
    {
        "tables": [
            "trans",
            "account",
            "district"
        ],
        "columns": [
            "trans.`amount`",
            "trans.`date`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "transactions greater than US$10,000",
            "year is 1997"
        ]
    },
    {
        "tables": [
            "order",
            "account",
            "district"
        ],
        "columns": [
            "order.`account_id`",
            "order.`k_symbol`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "accounts placed orders",
            "household payment",
            "location: Pisek"
        ]
    },
    {
        "tables": [
            "account",
            "card",
            "disp"
        ],
        "columns": [
            "account.`account_id`",
            "card.`type`",
            "disp.`account_id`",
            "card.`disp_id`",
            "disp.`disp_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "accounts with gold credit cards"
        ]
    },
    {
        "tables": [
            "trans",
            "card",
            "disp",
            "account"
        ],
        "columns": [
            "trans.`amount`",
            "trans.`operation`",
            "trans.`date`",
            "trans.`account_id`",
            "card.`card_id`",
            "card.`disp_id`",
            "disp.`account_id`",
            "disp.`disp_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "average amount in credit card",
            "made by account holders",
            "in a month",
            "in year 2021"
        ]
    },
    {
        "tables": [
            "trans",
            "account",
            "disp",
            "client",
            "card"
        ],
        "columns": [
            "trans.`account_id`",
            "trans.`amount`",
            "trans.`operation`",
            "trans.`date`",
            "account.`account_id`",
            "disp.`account_id`",
            "disp.`client_id`",
            "card.`disp_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "<",
            "=",
            "AND"
        ],
        "conditions": [
            "transactions on the credit card",
            "amount is less than the average",
            "in 1998"
        ]
    },
    {
        "tables": [
            "client",
            "disp",
            "card",
            "loan",
            "account"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "disp.`client_id`",
            "disp.`account_id`",
            "disp.`disp_id`",
            "disp.`type`",
            "card.`disp_id`",
            "loan.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT"
        ],
        "conditions": [
            "gender is female",
            "owns credit cards",
            "has loans"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "client.`district_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "female clients",
            "region of South Bohemia"
        ]
    },
    {
        "tables": [
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "district.`a2`",
            "disp.`account_id`",
            "disp.`type`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "district is Tabor",
            "eligible for loans"
        ]
    },
    {
        "tables": [
            "account",
            "disp",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "disp.`type`",
            "district.`a11`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "AND",
            "BETWEEN"
        ],
        "conditions": [
            "account types not eligible for loans",
            "average income of residents in the district exceeds $8000",
            "average income of residents in the district is no more than $9000"
        ]
    },
    {
        "tables": [
            "trans",
            "account",
            "district"
        ],
        "columns": [
            "trans.`account_id`",
            "trans.`bank`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "location is North Bohemia",
            "transaction made",
            "partner's bank is AB"
        ]
    },
    {
        "tables": [
            "trans",
            "account",
            "district"
        ],
        "columns": [
            "trans.`account_id`",
            "trans.`type`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "JOIN",
            "DISTINCT",
            "LIKE"
        ],
        "conditions": [
            "districts with accounts that made withdrawal transactions"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "district.`a15`",
            "district.`a3`",
            "district.`district_id`",
            "account.`date`",
            "account.`district_id`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "AND",
            "JOIN"
        ],
        "conditions": [
            "year 1995",
            "number of crimes exceeds 4000",
            "accounts opened starting from the year 1997"
        ]
    },
    {
        "tables": [
            "card",
            "disp",
            "account"
        ],
        "columns": [
            "card.`type`",
            "disp.`type`",
            "card.`disp_id`",
            "disp.`disp_id`",
            "disp.`account_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "card type is 'classic'",
            "eligible for loan"
        ]
    },
    {
        "tables": [
            "client",
            "district"
        ],
        "columns": [
            "client.`gender`",
            "client.`district_id`",
            "district.`a2`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "male clients",
            "'Hl.m. Praha' district"
        ]
    },
    {
        "tables": [
            "card"
        ],
        "columns": [
            "card.`type`",
            "card.`issued`"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "Card type is 'Gold'",
            "Issued prior to 1998"
        ]
    },
    {
        "tables": [
            "loan",
            "disp",
            "client",
            "account"
        ],
        "columns": [
            "loan.`account_id`",
            "loan.`amount`",
            "disp.`account_id`",
            "disp.`client_id`",
            "disp.`type`",
            "client.`client_id`",
            "client.`birth_date`",
            "client.`gender`",
            "client.`district_id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "account with the largest loan amount"
        ]
    },
    {
        "tables": [
            "district",
            "account"
        ],
        "columns": [
            "district.`a15`",
            "district.`district_id`",
            "account.`account_id`",
            "account.`district_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "year is 1995",
            "district of the account with id 532"
        ]
    },
    {
        "tables": [
            "order",
            "account",
            "district"
        ],
        "columns": [
            "order.`order_id`",
            "order.`account_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "order id is 33333"
        ]
    },
    {
        "tables": [
            "trans",
            "disp",
            "client"
        ],
        "columns": [
            "trans.`operation`",
            "trans.`account_id`",
            "disp.`client_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "withdrawals",
            "cash transactions",
            "client id 3356"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "loan.`account_id`",
            "loan.`amount`"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "weekly issuance accounts",
            "loan under 200000"
        ]
    },
    {
        "tables": [
            "client",
            "card",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "card.`type`",
            "disp.`client_id`",
            "disp.`disp_id`",
            "card.`disp_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client id is 13539"
        ]
    },
    {
        "tables": [
            "client",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`district_id`",
            "district.`district_id`",
            "district.`a3`",
            "disp.`client_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client id is 3541"
        ]
    },
    {
        "tables": [
            "loan",
            "account",
            "district"
        ],
        "columns": [
            "loan.`status`",
            "loan.`account_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "district with the most accounts",
            "loan contracts finished with no problems"
        ]
    },
    {
        "tables": [
            "order",
            "disp",
            "client"
        ],
        "columns": [
            "order.`order_id`",
            "order.`account_id`",
            "disp.`account_id`",
            "disp.`client_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "order id is 32423"
        ]
    },
    {
        "tables": [
            "trans",
            "account",
            "district"
        ],
        "columns": [
            "trans.`trans_id`",
            "trans.`date`",
            "trans.`amount`",
            "trans.`balance`",
            "trans.`account_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "transactions made by accounts",
            "accounts from district 5"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "accounts from Jesenik district"
        ]
    },
    {
        "tables": [
            "card",
            "disp",
            "client"
        ],
        "columns": [
            "card.`issued`",
            "card.`type`",
            "disp.`client_id`",
            "disp.`disp_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "junior credit cards issued after 1996"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district"
        ],
        "columns": [
            "client.`gender`",
            "client.`client_id`",
            "account.`district_id`",
            "district.`a11`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "clients who opened their accounts in the district",
            "district with an average salary of over 10000",
            "clients are women"
        ]
    },
    {
        "tables": [
            "loan",
            "disp",
            "client",
            "account"
        ],
        "columns": [
            "loan.`amount`",
            "loan.`date`",
            "disp.`client_id`",
            "disp.`account_id`",
            "client.`gender`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "SUM",
            "GROUP BY",
            "WHERE"
        ],
        "conditions": [
            "male client",
            "between 1996 and 1997"
        ]
    },
    {
        "tables": [
            "trans"
        ],
        "columns": [
            "trans.`operation`",
            "trans.`date`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "credit card withdrawals",
            "after 1995"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.`a16`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "=",
            "SUBQUERY"
        ],
        "conditions": [
            "number of crimes in East Bohemia in 1996",
            "number of crimes in North Bohemia in 1996"
        ]
    },
    {
        "tables": [
            "disp",
            "account"
        ],
        "columns": [
            "disp.`type`",
            "disp.`account_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "owner and disponent dispositions",
            "from account number 1",
            "to account number 10"
        ]
    },
    {
        "tables": [
            "account",
            "order",
            "trans"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "order.`amount`",
            "order.`k_symbol`",
            "order.`account_id`",
            "trans.`amount`",
            "trans.`k_symbol`",
            "trans.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "account number 3 requests an account statement",
            "aim of debiting 3539 in total"
        ]
    },
    {
        "tables": [
            "client",
            "disp"
        ],
        "columns": [
            "client.`birth_date`",
            "disp.`client_id`",
            "disp.`account_id`",
            "disp.`type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "account owner number 130"
        ]
    },
    {
        "tables": [
            "account",
            "disp"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "disp.`type`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "accounts with an owner disposition",
            "request for a statement to be generated upon a transaction"
        ]
    },
    {
        "tables": [
            "client",
            "disp",
            "loan",
            "account"
        ],
        "columns": [
            "client.`client_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "loan.`account_id`",
            "loan.`amount`",
            "loan.`status`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "client number 992",
            "amount of debt",
            "status of payments"
        ]
    },
    {
        "tables": [
            "trans",
            "disp",
            "client",
            "account"
        ],
        "columns": [
            "trans.`account_id`",
            "trans.`trans_id`",
            "trans.`balance`",
            "disp.`client_id`",
            "disp.`account_id`",
            "client.`gender`",
            "client.`client_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client number 4",
            "transaction 851"
        ]
    },
    {
        "tables": [
            "client",
            "card",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "card.`type`",
            "card.`disp_id`",
            "disp.`client_id`",
            "disp.`disp_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client number 9"
        ]
    },
    {
        "tables": [
            "trans",
            "disp",
            "client"
        ],
        "columns": [
            "trans.`amount`",
            "trans.`date`",
            "disp.`client_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client number 617",
            "transactions in 1998"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`birth_date`",
            "account.`district_id`",
            "district.`a3`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "born between 1983 and 1987",
            "account branch in East Bohemia"
        ]
    },
    {
        "tables": [
            "client",
            "disp",
            "loan",
            "account"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "disp.`client_id`",
            "disp.`account_id`",
            "loan.`account_id`",
            "loan.`amount`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "female clients",
            "largest loans",
            "top 3"
        ]
    },
    {
        "tables": [
            "client",
            "disp",
            "account",
            "order"
        ],
        "columns": [
            "client.`gender`",
            "client.`birth_date`",
            "client.`client_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "order.`account_id`",
            "order.`k_symbol`",
            "order.`amount`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN",
            "JOIN",
            "AND",
            ">"
        ],
        "conditions": [
            "gender is male",
            "birth year between 1974 and 1976",
            "home payment in excess of $4000"
        ]
    },
    {
        "tables": [
            "account",
            "district"
        ],
        "columns": [
            "account.`account_id`",
            "account.`date`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a2`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "location is Beroun",
            "opened after 1996"
        ]
    },
    {
        "tables": [
            "card",
            "disp",
            "client"
        ],
        "columns": [
            "card.`type`",
            "card.`disp_id`",
            "disp.`client_id`",
            "client.`gender`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "gender is female",
            "has a junior credit card"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "district",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "client.`district_id`",
            "account.`account_id`",
            "account.`district_id`",
            "district.`district_id`",
            "district.`a3`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "COUNT",
            "WHERE"
        ],
        "conditions": [
            "customers have accounts at the Prague branch",
            "customers are female"
        ]
    },
    {
        "tables": [
            "account",
            "client",
            "disp"
        ],
        "columns": [
            "account.`frequency`",
            "client.`gender`",
            "disp.`client_id`",
            "disp.`account_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "male clients",
            "request for weekly statements to be issued"
        ]
    },
    {
        "tables": [
            "account",
            "client",
            "disp"
        ],
        "columns": [
            "account.`frequency`",
            "disp.`type`",
            "disp.`client_id`",
            "account.`account_id`",
            "disp.`account_id`",
            "client.`client_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "clients who choose statement of weekly issuance",
            "clients who are Owner"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "account.`account_id`",
            "account.`date`",
            "loan.`duration`",
            "loan.`amount`"
        ],
        "sql_keywords": [
            "<",
            "AND",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "loan validity more than 24 months",
            "lowest approved amount",
            "account opening date before 1997"
        ]
    },
    {
        "tables": [
            "client",
            "account",
            "disp",
            "district"
        ],
        "columns": [
            "client.`client_id`",
            "client.`gender`",
            "client.`birth_date`",
            "client.`district_id`",
            "account.`account_id`",
            "account.`district_id`",
            "disp.`client_id`",
            "disp.`account_id`",
            "district.`district_id`",
            "district.`a11`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "MIN"
        ],
        "conditions": [
            "gender is female",
            "oldest age",
            "lowest average salary"
        ]
    },
    {
        "tables": [
            "client",
            "district"
        ],
        "columns": [
            "client.`birth_date`",
            "district.`a3`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "born in 1920",
            "stay in east Bohemia"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "account.`account_id`",
            "account.`frequency`",
            "loan.`duration`",
            "loan.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "pre-payment of duration of 24 months",
            "weekly issuance of statement"
        ]
    },
    {
        "tables": [
            "account",
            "loan"
        ],
        "columns": [
            "loan.`amount`",
            "loan.`status`",
            "account.`frequency`",
            "loan.`account_id`",
            "account.`account_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "loan is on running contract",
            "statement issuance after each transaction"
        ]
    },
    {
        "tables": [
            "client",
            "disp",
            "account",
            "district"
        ],
        "columns": [
            "client.`client_id`",
            "district.`district_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "right to issue permanent orders",
            "apply for loans"
        ]
    },
    {
        "tables": [
            "client",
            "card",
            "disp"
        ],
        "columns": [
            "client.`client_id`",
            "client.`birth_date`",
            "card.`type`",
            "disp.`type`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "client has a high level credit card",
            "client is eligible for loans"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "molecules are non-carcinogenic",
            "molecules contain chlorine atoms"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "AVG"
        ],
        "conditions": [
            "single-bonded molecules"
        ]
    },
    {
        "tables": [
            "molecule",
            "bond"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "bond.`molecule_id`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "AVG",
            "WHERE"
        ],
        "conditions": [
            "carcinogenic molecules",
            "single bonded"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "molecule contains sodium atoms",
            "sodium atoms are non-carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "INNER JOIN"
        ],
        "conditions": [
            "triple-bonded molecules",
            "carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecules with double bonds"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "triple type bonds"
        ]
    },
    {
        "tables": [
            "atom"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "exact matching",
            "!="
        ],
        "conditions": [
            "no bromine in atoms"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "first 100 molecules in number order",
            "molecules that are carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "molecules containing carbon"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "TR004_8_9 bond atoms"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "double type bond"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "COUNT",
            "JOIN"
        ],
        "conditions": [
            "atoms with hydrogen"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "atom.`element`",
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms connected in single type bonds"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`",
            "bond.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "atoms connected in non-carcinogenic type molecules"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "MIN",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "element in non-carcinogenic molecules",
            "least numerous element"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`",
            "bond.`bond_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "bond type between atoms TR004_8 and TR004_20"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`element`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules with atoms with tin"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "bond.`bond_id`",
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "=",
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "atoms with iodine",
            "atoms with sulfur type elements",
            "single bond molecules"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`",
            "atom.`atom_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms are connected",
            "triple bond exists between atoms"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule",
            "connected"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms connected to the atoms of the TR181 molecule"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules are carcinogenic-type",
            "molecules do not contain fluorine"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "SUM",
            "COUNT",
            "WHERE"
        ],
        "conditions": [
            "carcinogenic molecules",
            "triple type bonds"
        ]
    },
    {
        "tables": [
            "atom"
        ],
        "columns": [
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "top three elements of the toxicology",
            "molecule TR000"
        ]
    },
    {
        "tables": [
            "molecule",
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "bond.`bond_id`",
            "bond.`molecule_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule ID is TR001",
            "bond ID is TR001_2_6"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`label`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "molecules that are carcinogenic",
            "molecules that are not carcinogenic"
        ]
    },
    {
        "tables": [
            "connected",
            "atom"
        ],
        "columns": [
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bond ID TR000_2_5"
        ]
    },
    {
        "tables": [
            "connected"
        ],
        "columns": [
            "connected.`bond_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atom ID 2",
            "TR000_2"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "molecules with double bonds"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "bond.`bond_id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "percentage of double bonds in the molecule TR008"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecules that are carcinogenic"
        ]
    },
    {
        "tables": [
            "atom"
        ],
        "columns": [
            "atom.`element`",
            "atom.`atom_id`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "SUM",
            "COUNT"
        ],
        "conditions": [
            "hydrogen in molecule TR206",
            "percentage with four decimal places"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule TR000 involved in any bonds"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "elements of the toxicology of molecule TR060",
            "elements of the label of molecule TR060"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "bond type accounting for the majority in molecule TR010",
            "molecule TR010 is carcinogenic or not"
        ]
    },
    {
        "tables": [
            "molecule",
            "bond"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "bond.`bond_type`",
            "bond.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "molecules with single bonds between two atoms",
            "molecules that are not carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "bonds with the molecule TR006"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "bonds involving atom 12",
            "molecule TR009"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "INTERSECT"
        ],
        "conditions": [
            "molecules are carcinogenic",
            "molecules have the bromine element"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bond ID TR001_6_9"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "atom TR001_10 belongs to a molecule",
            "molecule is carcinogenic or not"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules with a triple bond type"
        ]
    },
    {
        "tables": [
            "connected",
            "atom"
        ],
        "columns": [
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`"
        ],
        "sql_keywords": [
            "LIKE",
            "COUNT"
        ],
        "conditions": [
            "atom 19"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "toxicology of the molecule TR004"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecules are not carcinogenic"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "SUBSTR",
            "BETWEEN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "atoms from 21 to 25",
            "molecules that are carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`bond_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "INTERSECT"
        ],
        "conditions": [
            "bonds with phosphorus as an atom element",
            "bonds with nitrogen as an atom element"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "molecule with the most double bonds",
            "carcinogenic"
        ]
    },
    {
        "tables": [
            "atom",
            "connected"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "element is iodine"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`bond_id`",
            "atom.`atom_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "bond type of atom 45",
            "bond ID of atom 45"
        ]
    },
    {
        "tables": [
            "atom",
            "connected"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "EXCEPT"
        ],
        "conditions": [
            "elements of atoms that cannot bond with any other atoms"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "connected.`atom_id`",
            "connected.`bond_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecule name is TR041",
            "atoms involved in a triple bond"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "elements of the atoms of TR144_8_19"
        ]
    },
    {
        "tables": [
            "molecule",
            "bond"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "bond.`molecule_id`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "carcinogenic molecules",
            "most double bonds"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "carcinogenic molecules"
        ]
    },
    {
        "tables": [
            "atom",
            "connected"
        ],
        "columns": [
            "atom.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "atom that has the element lead"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "elements with triple bonds"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "COUNT",
            "JOIN",
            "=",
            "DIVIDE"
        ],
        "conditions": [
            "bonds with the most common combination of atoms' elements"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "single bonds",
            "carcinogenic"
        ]
    },
    {
        "tables": [
            "atom"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "IN",
            "EXACT MATCHING"
        ],
        "conditions": [
            "element carbon",
            "element hydrogen"
        ]
    },
    {
        "tables": [
            "atom",
            "connected"
        ],
        "columns": [
            "atom.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "element is sulfur"
        ]
    },
    {
        "tables": [
            "atom",
            "connected",
            "bond"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`",
            "bond.`bond_id`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms with element Tin"
        ]
    },
    {
        "tables": [
            "connected",
            "atom",
            "bond"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "single bond molecules"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "OR",
            "JOIN"
        ],
        "conditions": [
            "molecules with triple bonds",
            "molecules containing phosphorus",
            "molecules containing bromine"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecules that are carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "molecule has single bond",
            "molecule is not carcinogenic"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "atom.`element`",
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "element chlorine",
            "single bond molecules"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "labels for TR000",
            "labels for TR001",
            "labels for TR002"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecules that are non-carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecule id from TR000 to TR030"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecule id from TR000 to TR050"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bond id TR001_10_11"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "element is iodine"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`element`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "COUNT",
            "MAX"
        ],
        "conditions": [
            "molecules with element Calcium"
        ]
    },
    {
        "tables": [
            "connected",
            "atom"
        ],
        "columns": [
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "bond id TR001_1_8",
            "element of chlorine",
            "element of carbon"
        ]
    },
    {
        "tables": [
            "molecule",
            "bond",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "triple bond",
            "non-carcinogenic",
            "contains element carbon"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "element chlorine",
            "carcinogenic molecules"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "toxicology elements associated with molecule TR001"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule ID",
            "double bond type"
        ]
    },
    {
        "tables": [
            "connected",
            "bond",
            "atom"
        ],
        "columns": [
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first atom of triple bond type molecules",
            "second atom of triple bond type molecules"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bond ID TR000_1_2"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecules with single bond type",
            "non-carcinogenic molecules"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bond ID is TR001_10_11"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "bond type is triple bond",
            "molecule is carcinogenic or not"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`atom_id`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "WHERE",
            "SUBSTR"
        ],
        "conditions": [
            "4th atom of each molecule",
            "molecule is carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Hydrogen elements in molecule ID TR006"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`molecule_id`",
            "atom.`element`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "chemical compound contains Calcium"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "atom.`element`",
            "bond.`bond_type`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "chemical compound contains element Carbon"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "chemical elements form a bond TR001_10_11"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "chemical compounds identified in the database",
            "compounds form a triple-bond"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "bond.`bond_id`"
        ],
        "sql_keywords": [
            "=",
            "SUM",
            "COUNT"
        ],
        "conditions": [
            "chemical compounds contain molecule TR047",
            "form a double-bond"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule contains atom TR001_1",
            "molecule is carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "molecule TR151 is carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "toxic element in the molecule TR151"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`label`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "chemical compounds identified as carcinogenic"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "LIKE"
        ],
        "conditions": [
            "molecule ID between TR010 to TR050",
            "contain the element carbon"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`atom_id`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecule labeled with carcinogenic compounds"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "INNER JOIN"
        ],
        "conditions": [
            "bond ids are double-bond",
            "bond with carcinogenic compound"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "element is hydrogen",
            "labeled with carcinogenic compound"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_id`",
            "connected.`atom_id`",
            "connected.`bond_id`",
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule id belongs to TR000_1_2 bond",
            "first atom named TR000_1"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "NOT IN"
        ],
        "conditions": [
            "atom contains element carbon",
            "atom does not contain compound carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules containing carcinogenic compounds",
            "element is hydrogen"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule TR124 is carcinogenic"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms that comprise TR186"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "elements that comprise the atoms of bond TR001_2_4"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "TR006 has double bonds",
            "TR006 is carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "carcinogenic molecules",
            "elements of carcinogenic molecules"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "bonds with single bond types",
            "atoms connected to the molecules"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule",
            "atom"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecules with triple bonds",
            "list all elements contained in those molecules"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "atom.`element`",
            "bond.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms' elements that form bond TR000_2_3"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`",
            "bond.`bond_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "bonding atoms with chlorine element"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "COUNT"
        ],
        "conditions": [
            "atom id belongs to TR346 molecule",
            "bond types created by TR346 molecule"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "molecules with a double bond type",
            "molecules labeled as carcinogenic compound"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom",
            "bond"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "atom.`molecule_id`",
            "atom.`element`",
            "bond.`molecule_id`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules without sulphur element",
            "molecules not having double bond"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_id`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "carcinogenic label for bond TR001_2_4"
        ]
    },
    {
        "tables": [
            "atom"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule id TR001"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "single bonds in the list"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "molecules contain 'cl' element",
            "molecules are carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "molecules contain 'c' element",
            "molecules are not carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules are carcinogenic",
            "molecules contain the Chlorine element"
        ]
    },
    {
        "tables": [
            "bond"
        ],
        "columns": [
            "bond.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bond id TR001_1_7"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "atom.`atom_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "bond_id is TR001_3_4"
        ]
    },
    {
        "tables": [
            "connected",
            "bond"
        ],
        "columns": [
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "connected.`bond_id`",
            "bond.`bond_id`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "connection between two atoms TR000_1 and TR000_2"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule",
            "connected"
        ],
        "columns": [
            "atom.`molecule_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atom id 'TR000_2'",
            "atom id 2 'TR000_4'"
        ]
    },
    {
        "tables": [
            "atom"
        ],
        "columns": [
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atom ID is TR000_1"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule TR000 is carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "connected.`bond_id`",
            "atom.`atom_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "atoms with single bond"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "molecules that are carcinogenic",
            "molecules that consist of Nitrogen"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "atom.`element`",
            "atom.`molecule_id`",
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "connected.`atom_id2`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Molecule consists of a Sulphur atom with a double bond"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "COUNT",
            "HAVING",
            "JOIN"
        ],
        "conditions": [
            "non-carcinogenic molecules",
            "molecules consisting of more than 5 atoms"
        ]
    },
    {
        "tables": [
            "bond",
            "atom",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "atom.`element`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "elements with double bond",
            "molecule TR024"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "COUNT",
            "JOIN"
        ],
        "conditions": [
            "carcinogenic molecule",
            "highest number of atoms"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom",
            "bond",
            "connected"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`",
            "bond.`bond_id`",
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`bond_id`",
            "connected.`atom_id2`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "molecules are carcinogenic",
            "molecules have triple bonded hydrogen atoms"
        ]
    },
    {
        "tables": [
            "molecule"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecules are carcinogenic"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecules between TR004 to TR010",
            "has single bonds"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule is TR008"
        ]
    },
    {
        "tables": [
            "atom",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`",
            "molecule.`label`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "atom ID of TR004_7",
            "molecule is not carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "bond",
            "connected",
            "atom"
        ],
        "columns": [
            "bond.`bond_type`",
            "bond.`molecule_id`",
            "connected.`bond_id`",
            "connected.`atom_id`",
            "atom.`atom_id`",
            "atom.`element`",
            "atom.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "molecules with double bonded oxygen"
        ]
    },
    {
        "tables": [
            "bond",
            "molecule"
        ],
        "columns": [
            "bond.`bond_type`",
            "molecule.`label`",
            "bond.`molecule_id`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecules with triple bonds",
            "not carcinogenic"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom",
            "bond"
        ],
        "columns": [
            "atom.`element`",
            "bond.`bond_type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "molecule ID is TR002"
        ]
    },
    {
        "tables": [
            "atom",
            "bond",
            "connected",
            "molecule"
        ],
        "columns": [
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`",
            "bond.`bond_id`",
            "bond.`molecule_id`",
            "bond.`bond_type`",
            "connected.`atom_id`",
            "connected.`bond_id`",
            "connected.`atom_id2`",
            "molecule.`molecule_id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "double bonded carbon",
            "TR012 molecule"
        ]
    },
    {
        "tables": [
            "molecule",
            "atom"
        ],
        "columns": [
            "molecule.`molecule_id`",
            "molecule.`label`",
            "atom.`atom_id`",
            "atom.`molecule_id`",
            "atom.`element`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "molecule is carcinogenic",
            "molecule contains oxygen"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`",
            "cards.`name`",
            "cards.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cards with incredibly powerful foils"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`",
            "cards.`availability`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "AND",
            "IS NULL"
        ],
        "conditions": [
            "borderless cards",
            "without powerful foils"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`faceconvertedmanacost`"
        ],
        "sql_keywords": [
            "MAX",
            "IS NOT NULL"
        ],
        "conditions": [
            "card names with converted mana cost more for the face"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`frameversion`",
            "cards.`edhrecrank`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cards with 2015 frame style",
            "ranking below 100 on EDHRec"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`name`",
            "cards.`rarity`",
            "legalities.`format`",
            "legalities.`status`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT"
        ],
        "conditions": [
            "mythic rarity",
            "print cards",
            "banned",
            "gladiator format"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`types`",
            "cards.`side`",
            "legalities.`status`",
            "legalities.`format`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "artifact type of cards",
            "do not have multiple faces on the same card"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`id`",
            "cards.`artist`",
            "cards.`power`",
            "legalities.`format`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "IS NULL",
            "AND",
            "JOIN"
        ],
        "conditions": [
            "card id",
            "artist",
            "unknown power",
            "legal for commander play format"
        ]
    },
    {
        "tables": [
            "cards",
            "rulings"
        ],
        "columns": [
            "cards.`id`",
            "cards.`artist`",
            "cards.`hascontentwarning`",
            "rulings.`text`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "cards illustrated by Stephen Daniel",
            "describe the text of the ruling of these cards",
            "state if these cards have missing or degraded properties and values"
        ]
    },
    {
        "tables": [
            "cards",
            "rulings"
        ],
        "columns": [
            "cards.`name`",
            "cards.`number`",
            "cards.`uuid`",
            "rulings.`text`",
            "rulings.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card name is 'Sublime Epiphany'",
            "card number is 74s"
        ]
    },
    {
        "tables": [
            "rulings",
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`artist`",
            "cards.`ispromo`",
            "rulings.`uuid`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "card with the most ruling information",
            "artist with the most ruling information",
            "card is a promotional printing"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`name`",
            "cards.`number`",
            "cards.`uuid`",
            "foreign_data.`name`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card named Annul",
            "card number 29"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`name`",
            "foreign_data.`language`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "cards with alternative language in Japanese"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "foreign_data.`id`",
            "foreign_data.`language`",
            "cards.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "cards available in Chinese Simplified"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`name`",
            "sets.`totalsetsize`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "sets available in Italian translation",
            "total number of cards per set"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`type`"
        ],
        "sql_keywords": [
            "EXACT",
            "DISTINCT"
        ],
        "conditions": [
            "artist is Aaron Boyd",
            "illustrated card art"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`keywords`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "keyword found on card 'Angel of Mercy'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`power`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "cards with infinite power"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`promotypes`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "card name is 'Ancestor's Chosen'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`originaltype`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type of the card 'Ancestor's Chosen' as originally printed"
        ]
    },
    {
        "tables": [
            "cards",
            "sets",
            "set_translations"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "sets.`code`",
            "sets.`name`",
            "set_translations.`setcode`",
            "set_translations.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card name is 'Angel of Mercy'",
            "languages available for the set containing 'Angel of Mercy'"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`istextless`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "cards of legalities",
            "status is restricted",
            "have text boxes"
        ]
    },
    {
        "tables": [
            "rulings",
            "cards"
        ],
        "columns": [
            "rulings.`text`",
            "cards.`name`",
            "rulings.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`isstarter`",
            "legalities.`status`",
            "cards.`uuid`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "cards of legalities",
            "status is restricted",
            "found in a starter deck"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`name`",
            "cards.`uuid`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "card name is 'Cloudchaser Eagle'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type of card 'Benalish Knight'"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`name`",
            "legalities.`format`",
            "legalities.`status`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`artist`",
            "foreign_data.`language`",
            "foreign_data.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "JOIN",
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "illustrated the card art in Phyrexian"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "borderless cards"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`isreprint`",
            "foreign_data.`language`",
            "foreign_data.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "cards illustrated in German",
            "cards have been reprinted"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`bordercolor`",
            "foreign_data.`language`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "cards are borderless",
            "cards are illustrated in Russian"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`isstoryspotlight`",
            "foreign_data.`uuid`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "=",
            "JOIN",
            "GROUP BY",
            "COUNT",
            "DIVIDE"
        ],
        "conditions": [
            "language is French",
            "cards are Story Spotlight cards"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`toughness`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "toughness of 99"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`artist`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cards illustrated by Aaron Boyd"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`availability`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "black border cards",
            "only available on mtgo"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`",
            "cards.`convertedmanacost`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "card IDs",
            "converted mana cost of 0"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`layout`",
            "cards.`keywords`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "keyword of flying"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`originaltype`",
            "cards.`subtypes`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "original type is 'Summon - Angel'",
            "subtype is not 'Angel'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT"
        ],
        "conditions": [
            "foiled cards",
            "incredibly powerful when paired with non foiled cards"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "cards belong to duel deck a"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`edhrecrank`",
            "cards.`frameversion`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "edhrecRank for cards",
            "frame version 2015"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "set_translations"
        ],
        "columns": [
            "cards.`artist`",
            "foreign_data.`uuid`",
            "set_translations.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "cards in Chinese Simplified"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`name`",
            "cards.`availability`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT"
        ],
        "conditions": [
            "only available in paper",
            "only available in Japanese language"
        ]
    },

    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`uuid`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "banned cards",
            "white border"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities",
            "foreign_data"
        ],
        "columns": [
            "legalities.`uuid`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "uuid for legacy cards",
            "foreign language of legacy cards"
        ]
    },
    {
        "tables": [
            "rulings",
            "cards"
        ],
        "columns": [
            "rulings.`text`",
            "cards.`name`",
            "cards.`uuid`",
            "rulings.`uuid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Beacon of Immortality is a card in a game",
            "The card's effect doubles a player's life total",
            "The card's effect is applied when it is played",
            "The card is shuffled into its owner's library after use"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`frameversion`",
            "legalities.`status`",
            "cards.`uuid`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "cards with future frame version",
            "legality status of these cards"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`setcode`",
            "cards.`name`",
            "cards.`colors`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set is OGW",
            "state the colour of the cards"
        ]
    },
    {
        "tables": [
            "cards",
            "set_translations",
            "sets"
        ],
        "columns": [
            "cards.`name`",
            "set_translations.`language`"
        ],
        "sql_keywords": [
            "=",
            "INNER JOIN"
        ],
        "conditions": [
            "set 10E",
            "converted mana cost of 5",
            "have translation"
        ]
    },
    {
        "tables": [
            "cards",
            "rulings"
        ],
        "columns": [
            "cards.`name`",
            "rulings.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "original type of Creature - Elf",
            "date of rulings for cards with type Creature - Elf"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`id`",
            "cards.`colors`",
            "legalities.`format`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "INTERSECT"
        ],
        "conditions": [
            "ID range 1-20"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`originaltype`",
            "cards.`colors`",
            "foreign_data.`language`",
            "cards.`uuid`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "INTERSECT"
        ],
        "conditions": [
            "Artifact cards",
            "black color",
            "foreign language translation"
        ]
    },
    {
        "tables": [
            "cards",
            "rulings"
        ],
        "columns": [
            "cards.`name`",
            "rulings.`date`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "Pick 3 cards",
            "Rarity of uncommon",
            "List names in ascending order of ruling date"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`cardkingdomfoilid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "cards designed by John Avon",
            "foil is non-powerful"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "white bordered cards"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`availability`",
            "cards.`hand`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "designed by UDON",
            "available in mtgo print type",
            "starting maximum hand size of -1"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`frameversion`",
            "cards.`availability`",
            "cards.`hascontentwarning`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "1993 frame version",
            "available on paper",
            "sensitive content warning"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`manacost`",
            "cards.`layout`",
            "cards.`frameversion`",
            "cards.`bordercolor`",
            "cards.`availability`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "normal layout",
            "2003 frame version",
            "black border color",
            "available in paper",
            "available in mtgo"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`manacost`",
            "cards.`artist`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cards created by Rob Alexander"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`type`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`setcode`",
            "foreign_data.`language`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "cards translated into Spanish"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`isonlineonly`",
            "cards.`frameeffects`",
            "cards.`id`"
        ],
        "sql_keywords": [
            "=",
            "DIVIDE",
            "COUNT"
        ],
        "conditions": [
            "legendary frame effect cards",
            "only available in online game variations"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`",
            "cards.`isstoryspotlight`",
            "cards.`istextless`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Story Spotlight cards",
            "do not have a text box"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`name`",
            "foreign_data.`language`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "LIKE",
            "GROUP BY",
            "JOIN",
            "DIVIDE",
            "SUM",
            "COUNT"
        ],
        "conditions": [
            "cards in Spanish"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`basesetsize`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set is translated into languages",
            "number of cards in the set is 309"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`block`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Brazilian Portuguese translated sets",
            "inside the Commander block"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`id`",
            "cards.`types`",
            "legalities.`status`"
        ],
        "sql_keywords": [
            "=",
            "INNER JOIN"
        ],
        "conditions": [
            "Creature-type cards",
            "legal status"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`types`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "LIKE",
            "INNER JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "types of cards",
            "in German"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`power`",
            "cards.`text`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "unknown power cards",
            "contain info about the triggered ability"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities",
            "rulings"
        ],
        "columns": [
            "cards.`name`",
            "cards.`side`",
            "cards.`uuid`",
            "legalities.`format`",
            "rulings.`text`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "=",
            "IS NULL"
        ],
        "conditions": [
            "pre-modern format",
            "ruling text 'This is a triggered mana ability.'",
            "do not have multiple faces"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`id`",
            "cards.`artist`",
            "cards.`availability`",
            "legalities.`format`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "LIKE"
        ],
        "conditions": [
            "card from Erica Yang artist",
            "card in pauper format",
            "card available in paper"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`artist`",
            "foreign_data.`text`",
            "foreign_data.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "fuzzy matching",
            "LIKE"
        ],
        "conditions": [
            "card with the text 'Das perfekte Gegenmittel zu einer dichten Formation'"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`bordercolor`",
            "cards.`layout`",
            "cards.`type`",
            "foreign_data.`language`",
            "foreign_data.`name`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "INNER JOIN"
        ],
        "conditions": [
            "foreign name in French",
            "type Creature",
            "normal layout",
            "black border color",
            "artist Matthew D. Wilson"
        ]
    },
    {
        "tables": [
            "cards",
            "rulings"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`rarity`",
            "rulings.`uuid`",
            "rulings.`date`",
            "rulings.`text`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "cards with print rarity",
            "ruling text printed on 01/02/2007"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`basesetsize`",
            "sets.`block`",
            "sets.`code`",
            "set_translations.`setcode`",
            "set_translations.`language`",
            "set_translations.`translation`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set of 180 cards",
            "belongs to the Ravnica block",
            "translated into a language"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`hascontentwarning`",
            "cards.`id`",
            "legalities.`format`",
            "legalities.`status`",
            "legalities.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "format commander",
            "legal status",
            "do not have a content warning"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`power`",
            "foreign_data.`uuid`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "cards without power",
            "cards in French"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`type`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Japanese translated sets",
            "expansion sets"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`availability`",
            "cards.`artist`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "printing type on the card",
            "created by Daren Bader"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`edhrecrank`",
            "cards.`colors`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "color cards",
            "no borders",
            "ranked higher than 12000 on EDHRec"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`isoversized`",
            "cards.`isreprint`",
            "cards.`ispromo`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "oversized",
            "reprinted",
            "printed for promotions"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`power`",
            "cards.`promotypes`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "unknown power cards",
            "promotional types",
            "arena league"
        ]
    },
    {
        "tables": [
            "foreign_data"
        ],
        "columns": [
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "multiverse number 149934"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "top three powerful pairs of Kingdom Foil and Kingdom Cards",
            "sorted by Kingdom Foil id in alphabetical order"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`istextless`",
            "cards.`layout`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cards do not have a text box",
            "normal layout"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`number`",
            "cards.`side`",
            "cards.`subtypes`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "card does not have multiple faces on a single card",
            "card has subtype Angel",
            "card has subtype Wizard"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`name`",
            "sets.`mtgocode`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "ORDER BY"
        ],
        "conditions": [
            "top three sets",
            "don't appear in Magic: The Gathering Online",
            "names in alphabetical order"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`mcmname`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set known as Archenemy",
            "magic card market",
            "code ARC"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "sets.`name`",
            "set_translations.`translation`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set number 5"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "sets.`type`",
            "set_translations.`language`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set number 206"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "sets.`name`",
            "sets.`block`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "ORDER BY"
        ],
        "conditions": [
            "Italian-language cards",
            "located in the Shadowmoor block",
            "top two sets in alphabetical order"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "sets.`isforeignonly`",
            "sets.`isfoilonly`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "AND"
        ],
        "conditions": [
            "set not available outside of the United States",
            "set has foil cards with Japanese writing"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`basesetsize`",
            "sets.`name`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MAX"
        ],
        "conditions": [
            "Russian set of cards",
            "contains the most cards overall"
        ]
    },
    {
        "tables": [
            "cards",
            "set_translations",
            "sets"
        ],
        "columns": [
            "cards.`isonlineonly`",
            "cards.`setcode`",
            "set_translations.`language`",
            "set_translations.`setcode`",
            "sets.`code`",
            "sets.`isonlineonly`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "language is Chinese Simplified",
            "only available for online games"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`mtgocode`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT"
        ],
        "conditions": [
            "sets available in Japanese",
            "sets not available in Magic: The Gathering Online"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "card border with black color"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`id`",
            "cards.`frameeffects`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "frame effect is extendedart"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`isfullart`",
            "cards.`bordercolor`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "black card borders",
            "full artwork"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "set_translations.`language`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set id is 174"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`name`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "set code is 'ALL'"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`name`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "foreign language used by 'A Pedra Fellwar'"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`code`",
            "sets.`releasedate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "release date of 07/13/2007"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`basesetsize`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "UNION"
        ],
        "conditions": [
            "base set size of the set in block named 'Masques'",
            "set code of the set in block named 'Masques'",
            "base set size of the set in block named 'Mirage'",
            "set code of the set in block named 'Mirage'"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`code`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sets have expansion type of 'expansion'"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`watermark`",
            "foreign_data.`name`",
            "foreign_data.`type`",
            "foreign_data.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card has boros watermark",
            "foreign name of the card",
            "type of the card"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`watermark`",
            "foreign_data.`language`",
            "foreign_data.`flavortext`",
            "cards.`type`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card has colorpie watermark"
        ]
    },
    {
        "tables": [
            "sets",
            "cards"
        ],
        "columns": [
            "sets.`id`",
            "sets.`name`",
            "sets.`code`",
            "cards.`setcode`",
            "cards.`convertedmanacost`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "converted Mana Cost of 10",
            "set of Abyssal Horror"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`code`",
            "sets.`type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sets have expansion",
            "commander type"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`watermark`",
            "foreign_data.`name`",
            "foreign_data.`type`",
            "foreign_data.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card has abzan watermark",
            "foreign name of the card",
            "type of the card"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`watermark`",
            "foreign_data.`language`",
            "foreign_data.`type`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "card has azorius watermark"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "cards designed by Aaron Miller",
            "cards that are incredibly powerful"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`availability`",
            "cards.`hand`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "cards available in paper",
            "positive starting maximum hand size"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`istextless`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cards have a text box"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`manacost`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "card name is 'Ancestor's Chosen'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`bordercolor`",
            "cards.`power`"
        ],
        "sql_keywords": [
            "=",
            "IS NULL"
        ],
        "conditions": [
            "cards with a white border color",
            "cards have unknown power"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`ispromo`",
            "cards.`side`"
        ],
        "sql_keywords": [
            "=",
            "IS NOT NULL"
        ],
        "conditions": [
            "cards that are a promotional painting",
            "cards have multiple faces on the same card"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`subtypes`",
            "cards.`supertypes`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "types for the card 'Molimo, Maro-Sorcerer'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`purchaseurls`",
            "cards.`promotypes`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "websites where cards can be purchased",
            "cards with promotional type 'bundle'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`bordercolor`",
            "cards.`availability`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "LIKE",
            "="
        ],
        "conditions": [
            "card with a black border color",
            "available in 'arena' printing type",
            "available in 'mtgo' printing type"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`convertedmanacost`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "converted mana cost of Serra Angel",
            "converted mana cost of Shrine Keeper"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`flavorname`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "promotional name is 'Battra, Dark Destroyer'"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`convertedmanacost`",
            "cards.`frameversion`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "top 3 cards",
            "highest converted mana cost",
            "2003 card frame style"
        ]
    },
    {
        "tables": [
            "cards",
            "set_translations",
            "sets"
        ],
        "columns": [
            "cards.`setcode`",
            "cards.`name`",
            "set_translations.`setcode`",
            "set_translations.`language`",
            "set_translations.`translation`",
            "sets.`code`",
            "sets.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set of cards containing 'Ancestor's Chosen'",
            "Italian name of the set"
        ]
    },
    {
        "tables": [
            "cards",
            "set_translations"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "set_translations.`setcode`",
            "set_translations.`translation`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set of cards includes 'Angel of Mercy'"
        ]
    },
    {
        "tables": [
            "cards",
            "set_translations",
            "sets"
        ],
        "columns": [
            "cards.`name`",
            "set_translations.`translation`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set name is 'Hauptset Zehnte Edition'"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`name`",
            "cards.`uuid`",
            "foreign_data.`uuid`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set of cards with 'Ancestor's Chosen'",
            "Korean version"
        ]
    },
    {
        "tables": [
            "cards",
            "set_translations",
            "sets"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`setcode`",
            "set_translations.`translation`",
            "set_translations.`setcode`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "cards in the set 'Hauptset Zehnte Edition'",
            "designed by Adam Rex"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`basesetsize`",
            "set_translations.`translation`",
            "set_translations.`setcode`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "base set of 'Hauptset Zehnte Edition'"
        ]
    },
    {
        "tables": [
            "set_translations",
            "sets"
        ],
        "columns": [
            "sets.`name`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`translation`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Simplified Chinese translation",
            "name of the set 'Eighth Edition'"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "sets.`mtgocode`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "set of cards with 'Angel of Mercy'",
            "appearance on Magic: The Gathering Online"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "sets.`releasedate`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set of cards with 'Ancestor's Chosen'"
        ]
    },
    {
        "tables": [
            "set_translations",
            "sets"
        ],
        "columns": [
            "set_translations.`translation`",
            "sets.`type`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set name is 'Hauptset Zehnte Edition'"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`block`",
            "sets.`code`",
            "set_translations.`setcode`",
            "set_translations.`language`",
            "set_translations.`translation`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "sets in the block 'Ice Age'",
            "have an Italian translation"
        ]
    },
    {
        "tables": [
            "sets",
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "sets.`code`",
            "sets.`isforeignonly`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set of cards with Adarkar Valkyrie",
            "availability outside the United States"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "sets.`basesetsize`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "sets of cards have an Italian translation",
            "base set number under 100"
        ]
    },
    {
        "tables": [
            "sets",
            "cards"
        ],
        "columns": [
            "sets.`name`",
            "cards.`bordercolor`",
            "cards.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "cards in the set Coldsnap",
            "black border color"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`name`",
            "cards.`convertedmanacost`",
            "sets.`name`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "cards in the set Coldsnap",
            "highest converted mana cost"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`setcode`",
            "sets.`name`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "IN"
        ],
        "conditions": [
            "artist designed a card in the set Coldsnap",
            "artist is Jeremy Jarvis",
            "artist is Aaron Miller",
            "artist is Chippy"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`number`",
            "cards.`name`",
            "cards.`setcode`",
            "sets.`name`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCHING"
        ],
        "conditions": [
            "card number 4",
            "set Coldsnap"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`convertedmanacost`",
            "cards.`power`",
            "cards.`setcode`",
            "sets.`name`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "AND"
        ],
        "conditions": [
            "converted mana cost higher than 5",
            "set is Coldsnap",
            "unknown power"
        ]
    },
    {
        "tables": [
            "foreign_data",
            "cards"
        ],
        "columns": [
            "foreign_data.`flavortext`",
            "foreign_data.`language`",
            "foreign_data.`uuid`",
            "cards.`name`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "Italian flavor text",
            "card 'Ancestor's Chosen'"
        ]
    },
    {
        "tables": [
            "foreign_data",
            "cards"
        ],
        "columns": [
            "foreign_data.`language`",
            "cards.`name`",
            "cards.`uuid`",
            "foreign_data.`flavortext`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "foreign languages",
            "card 'Ancestor's Chosen'",
            "flavor text presence"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`name`",
            "foreign_data.`type`",
            "foreign_data.`language`",
            "foreign_data.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "German type of the card 'Ancestor's Chosen'"
        ]
    },
    {
        "tables": [
            "cards",
            "sets",
            "set_translations",
            "foreign_data"
        ],
        "columns": [
            "sets.`name`",
            "set_translations.`language`",
            "set_translations.`setcode`",
            "cards.`setcode`",
            "cards.`uuid`",
            "foreign_data.`language`",
            "foreign_data.`text`",
            "foreign_data.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Italian text ruling",
            "all cards",
            "set Coldsnap"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "sets",
            "set_translations"
        ],
        "columns": [
            "cards.`name`",
            "cards.`convertedmanacost`",
            "cards.`setcode`",
            "foreign_data.`name`",
            "foreign_data.`language`",
            "foreign_data.`uuid`",
            "sets.`name`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "JOIN"
        ],
        "conditions": [
            "Italian names of cards",
            "Set: Coldsnap",
            "Highest converted mana cost"
        ]
    },
    {
        "tables": [
            "rulings",
            "cards"
        ],
        "columns": [
            "cards.`name`",
            "cards.`uuid`",
            "rulings.`date`",
            "rulings.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": []
    },
    {
        "tables": [
            "sets",
            "cards"
        ],
        "columns": [
            "sets.`name`",
            "sets.`code`",
            "cards.`setcode`",
            "cards.`convertedmanacost`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "converted mana cost of 7",
            "set Coldsnap"
        ]
    },
    {
        "tables": [
            "sets",
            "cards"
        ],
        "columns": [
            "sets.`name`",
            "sets.`code`",
            "cards.`setcode`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "incredibly powerful cards",
            "set Coldsnap"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`code`",
            "sets.`releasedate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set released on 2017/7/14"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`keyrunecode`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "set code is 'PKHC'"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`mcmid`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "set code is 'SS2'"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`mcmname`",
            "sets.`releasedate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Magic card set released on 2017/6/9"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`name`",
            "sets.`type`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "set name is 'From the Vault: Lore'"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`name`",
            "sets.`parentcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "set name is 'Commander 2014 Oversized'"
        ]
    },
    {
        "tables": [
            "cards",
            "rulings"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`hascontentwarning`",
            "cards.`uuid`",
            "rulings.`text`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "cards illustrated by Jim Pavelec",
            "describe the text of the ruling of these cards",
            "cards have missing or degraded properties and values"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "sets.`releasedate`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "card name is 'Evacuation'"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`basesetsize`",
            "set_translations.`translation`",
            "set_translations.`setcode`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set name is 'Rinascita di Alara'"
        ]
    },
    {
        "tables": [
            "set_translations",
            "sets"
        ],
        "columns": [
            "set_translations.`translation`",
            "sets.`type`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "expansion type of the set 'Huitième édition'"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`name`",
            "set_translations.`translation`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set of cards includes 'Tendo Ice Bridge'"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`name`",
            "set_translations.`translation`",
            "set_translations.`setcode`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "translations of the name of the set 'Tenth Edition'"
        ]
    },
    {
        "tables": [
            "cards",
            "sets",
            "set_translations"
        ],
        "columns": [
            "cards.`name`",
            "cards.`setcode`",
            "sets.`name`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`",
            "set_translations.`translation`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card name is 'Fellwar Stone'",
            "set name in Japanese"
        ]
    },
    {
        "tables": [
            "cards",
            "sets",
            "set_translations"
        ],
        "columns": [
            "cards.`name`",
            "cards.`convertedmanacost`",
            "cards.`setcode`",
            "sets.`name`",
            "sets.`code`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card name in the set 'Journey into Nyx Hero's Path'",
            "highest converted mana cost"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`releasedate`",
            "set_translations.`translation`",
            "set_translations.`setcode`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "set name is 'Ola de frío'"
        ]
    },
    {
        "tables": [
            "cards",
            "sets"
        ],
        "columns": [
            "cards.`setcode`",
            "cards.`name`",
            "sets.`type`",
            "sets.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "card name is 'Samite Pilgrim'"
        ]
    },
    {
        "tables": [
            "sets",
            "cards"
        ],
        "columns": [
            "sets.`name`",
            "cards.`setcode`",
            "cards.`convertedmanacost`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "set 'World Championship Decks 2004'",
            "converted mana cost '3'"
        ]
    },
    {
        "tables": [
            "set_translations",
            "sets"
        ],
        "columns": [
            "set_translations.`translation`",
            "sets.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Translate the name 'Mirrodin' into Simplified Chinese"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`id`",
            "sets.`isnonfoilonly`",
            "sets.`code`",
            "set_translations.`setcode`",
            "set_translations.`language`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "GROUP BY",
            "SUM",
            "DIVIDE"
        ],
        "conditions": [
            "set of cards with Japanese translation",
            "cards only available in non-foil"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data",
            "set_translations"
        ],
        "columns": [
            "cards.`isonlineonly`",
            "foreign_data.`uuid`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "set of cards with Brazil Portuguese translation",
            "cards only available online"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`availability`",
            "cards.`istextless`",
            "cards.`artist`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "printing types of the cards",
            "cards that don't have a text box",
            "created by Aleksi Briclot"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`id`",
            "sets.`basesetsize`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "set with the highest number of cards"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`convertedmanacost`",
            "cards.`side`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "cards that don't have multiple faces on the same card",
            "card art with the highest cost of converted mana"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`frameeffects`",
            "cards.`cardkingdomfoilid`",
            "cards.`cardkingdomid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "incredibly powerful foils"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`power`",
            "cards.`hasfoil`",
            "cards.`dueldeck`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "cards with unknown power",
            "cards that can't be found in foil",
            "cards in duel deck A"
        ]
    },
    {
        "tables": [
            "sets"
        ],
        "columns": [
            "sets.`id`",
            "sets.`type`",
            "sets.`totalsetsize`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "expansion type is Commander",
            "highest total number of cards",
            "including promotional and related supplemental products",
            "excluding Alchemy modifications"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`name`",
            "cards.`manacost`",
            "legalities.`format`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "duels",
            "top 10 cards",
            "highest unconverted mana cost"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`originalreleasedate`",
            "cards.`rarity`",
            "legalities.`format`",
            "legalities.`status`",
            "legalities.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "oldest mythic card",
            "legal play formats"
        ]
    },
    {
        "tables": [
            "cards",
            "foreign_data"
        ],
        "columns": [
            "cards.`uuid`",
            "cards.`artist`",
            "foreign_data.`uuid`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "cards illustrated by Volkan BaÇµa",
            "foreign language is French"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`rarity`",
            "cards.`types`",
            "cards.`name`",
            "cards.`uuid`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "card type is rare enchantment",
            "card name is Abundance",
            "play format status is legal"
        ]
    },
    {
        "tables": [
            "legalities",
            "cards"
        ],
        "columns": [
            "legalities.`format`",
            "cards.`name`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "COUNT",
            "="
        ],
        "conditions": [
            "play format with the highest number of banned status",
            "names of all cards that are banned in that play format"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`name`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "language of the 'Battlebond' set"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`artist`",
            "legalities.`format`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "illustrator who illustrated the least amount of cards",
            "format of play of the cards illustrated by this illustrator"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`frameversion`",
            "cards.`artist`",
            "cards.`hascontentwarning`",
            "legalities.`status`",
            "legalities.`format`",
            "legalities.`uuid`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "OR",
            "JOIN"
        ],
        "conditions": [
            "version of frame style is 1997",
            "illustrated by D. Alexander Gregory",
            "legacy play format",
            "has sensitive content or Wizards of the Coast"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`name`",
            "cards.`edhrecrank`",
            "legalities.`format`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "INNER JOIN"
        ],
        "conditions": [
            "cards ranked 1st on EDHRec",
            "banned play format for each card"
        ]
    },
    {
        "tables": [
            "sets",
            "foreign_data"
        ],
        "columns": [
            "sets.`id`",
            "sets.`releasedate`",
            "foreign_data.`language`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "AVG",
            "MAX",
            "COUNT",
            "GROUP BY"
        ],
        "conditions": [
            "annual average number of sets",
            "released between 1/1/2012 to 12/31/2015",
            "common language of the card"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`bordercolor`",
            "cards.`availability`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "artists who illustrated cards",
            "cards with black borders",
            "cards available only in arena"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "legalities.`uuid`",
            "legalities.`format`",
            "legalities.`status`",
            "cards.`uuid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "old school format is restricted",
            "old school format is banned"
        ]
    },
    {
        "tables": [
            "cards"
        ],
        "columns": [
            "cards.`artist`",
            "cards.`availability`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "designed by Matthew D. Wilson",
            "available only in paper"
        ]
    },
    {
        "tables": [
            "rulings",
            "cards"
        ],
        "columns": [
            "rulings.`text`",
            "rulings.`date`",
            "cards.`name`",
            "cards.`artist`",
            "cards.`uuid`",
            "rulings.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "card named and designed by Kev Walker",
            "rulings in descending order of dates"
        ]
    },
    {
        "tables": [
            "cards",
            "sets",
            "legalities"
        ],
        "columns": [
            "cards.`name`",
            "sets.`name`",
            "legalities.`format`",
            "legalities.`status`",
            "cards.`setcode`",
            "sets.`code`",
            "cards.`uuid`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "names of all the cards in the set Hour of Devastation",
            "formats in which these cards are legal"
        ]
    },
    {
        "tables": [
            "sets",
            "set_translations"
        ],
        "columns": [
            "sets.`name`",
            "sets.`code`",
            "set_translations.`language`",
            "set_translations.`setcode`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "LIKE",
            "INTERSECT"
        ],
        "conditions": [
            "sets without Japanese translation",
            "sets with Korean translation"
        ]
    },
    {
        "tables": [
            "cards",
            "legalities"
        ],
        "columns": [
            "cards.`frameversion`",
            "cards.`name`",
            "cards.`artist`",
            "legalities.`status`",
            "legalities.`uuid`"
        ],
        "sql_keywords": [
            "=",
            "UNION"
        ],
        "conditions": [
            "frame styles Allen Williams worked on",
            "cards Allen Williams worked on",
            "banned cards"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "reputation of Harlan",
            "reputation of Jarrod Dixon"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`creationdate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "accounts created in the year 2011"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`lastaccessdate`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "last accessed the website after 2014/9/1"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`views`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "user with the most number of views"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`upvotes`",
            "users.`downvotes`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "users with more than 100 upvotes",
            "users with more than 1 downvote"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`views`",
            "users.`creationdate`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "more than 10 views",
            "account created after the year 2013"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user is csgillespie"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`title`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "titles of the posts",
            "owned by the user csgillespie"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`title`",
            "posts.`owneruserid`",
            "users.`id`",
            "users.`displayname`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "post title is 'Eliciting priors from experts'"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`title`",
            "posts.`viewcount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "JOIN"
        ],
        "conditions": [
            "post owned by csgillespie",
            "post with the highest popularity"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "posts.`favoritecount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "user is the owner of the most valuable post"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`commentcount`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "posts owned by csgillespie"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`answercount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "post with the most number of answers",
            "answers owned by csgillespie"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "posts.`lasteditoruserid`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "last edited the post 'Examples for teaching: Correlation does not mean causation'"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`parentid`"
        ],
        "sql_keywords": [
            "=",
            "IS NULL"
        ],
        "conditions": [
            "posts owned by csgillespie",
            "root posts"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "posts.`closeddate`",
            "posts.`owneruserid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "users who own a post",
            "post is well-finished"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`age`",
            "posts.`owneruserid`",
            "posts.`score`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "user is elder",
            "post score over 19"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "posts.`title`",
            "posts.`owneruserid`",
            "users.`id`",
            "users.`location`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "post title is 'Eliciting priors from experts'"
        ]
    },
    {
        "tables": [
            "tags",
            "posts"
        ],
        "columns": [
            "tags.`tagname`",
            "tags.`excerptpostid`",
            "posts.`id`",
            "posts.`body`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "tag 'bayesian' is associated with a post"
        ]
    },
    {
        "tables": [
            "tags",
            "posts"
        ],
        "columns": [
            "tags.`count`",
            "tags.`excerptpostid`",
            "posts.`id`",
            "posts.`body`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "most popular tag",
            "body of the post"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "badges.`userid`",
            "badges.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "user is csgillespie"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "badges obtained by csgillespie"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "badges.`userid`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "YEAR()"
        ],
        "conditions": [
            "badges obtained by csgillespie",
            "badges obtained in the year 2011"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`userid`",
            "users.`displayname`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "user with the most number of badges"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`score`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "posts owned by the user csgillespie"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`id`",
            "users.`views`",
            "badges.`userid`",
            "badges.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN",
            "GROUP BY",
            "HAVING",
            "COUNT",
            "AVG"
        ],
        "conditions": [
            "user with over 200 views"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`score`",
            "posts.`owneruserid`",
            "users.`id`",
            "users.`age`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN",
            "COUNT",
            "WHERE"
        ],
        "conditions": [
            "post score over 5",
            "owned by an elder user"
        ]
    },
    {
        "tables": [
            "votes",
            "users"
        ],
        "columns": [
            "votes.`userid`",
            "votes.`creationdate`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user No.58",
            "date 2010/7/19"
        ]
    },
    {
        "tables": [
            "votes"
        ],
        "columns": [
            "votes.`creationdate`",
            "votes.`id`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "maximum number of votes"
        ]
    },
    {
        "tables": [
            "badges"
        ],
        "columns": [
            "badges.`id`",
            "badges.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "number of 'Revival' badges"
        ]
    },
    {
        "tables": [
            "comments",
            "posts"
        ],
        "columns": [
            "comments.`score`",
            "comments.`postid`",
            "posts.`id`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "INNER JOIN",
            "MAX",
            "="
        ],
        "conditions": [
            "post with the highest score comment"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`viewcount`",
            "comments.`postid`",
            "comments.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "post with 1910 view counts"
        ]
    },
    {
        "tables": [
            "users",
            "comments",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "comments.`userid`",
            "comments.`creationdate`",
            "comments.`postid`",
            "posts.`id`",
            "posts.`favoritecount`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "User No.3025",
            "comment at 20:29:39",
            "on 2014/4/23",
            "to a post"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`parentid`",
            "posts.`commentcount`",
            "comments.`postid`",
            "comments.`text`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "parent id 107829"
        ]
    },
    {
        "tables": [
            "users",
            "comments",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "comments.`userid`",
            "comments.`creationdate`",
            "comments.`postid`",
            "posts.`id`",
            "posts.`closeddate`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "User No.23853 gave a comment to a post",
            "comment was made at 9:08:18 on 2013/7/12"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "posts.`owneruserid`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "owner user of post No. 65041"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "display name is 'Tiago Pasqualini'"
        ]
    },
    {
        "tables": [
            "votes",
            "users"
        ],
        "columns": [
            "votes.`userid`",
            "users.`displayname`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "vote number is 6347"
        ]
    },
    {
        "tables": [
            "votes",
            "posts"
        ],
        "columns": [
            "votes.`id`",
            "votes.`postid`",
            "posts.`id`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "post about data visualization"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user display name is 'DatEpicCoderGuyWhoPrograms'"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "votes"
        ],
        "columns": [
            "users.`id`",
            "posts.`id`",
            "posts.`owneruserid`",
            "votes.`id`",
            "votes.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user No.24",
            "number of posts",
            "number of votes"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`viewcount`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'"
        ]
    },
    {
        "tables": [
            "comments"
        ],
        "columns": [
            "comments.`text`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "comments with a score of 17"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`websiteurl`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "website URL is 'http://stackoverflow.com'"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "badges.`name`",
            "badges.`userid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user name is 'SilentGhost'"
        ]
    },
    {
        "tables": [
            "users",
            "comments"
        ],
        "columns": [
            "users.`displayname`",
            "comments.`text`",
            "comments.`userid`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "comment contains 'thank you user93!'"
        ]
    },
    {
        "tables": [
            "comments",
            "users"
        ],
        "columns": [
            "comments.`text`",
            "users.`displayname`",
            "users.`id`",
            "comments.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "comments made by user 'A Lion'"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "posts.`title`",
            "posts.`owneruserid`",
            "users.`displayname`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "post titled 'Understanding what Dassault iSight is doing?'",
            "reputation of the user"
        ]
    },
    {
        "tables": [
            "comments",
            "posts"
        ],
        "columns": [
            "posts.`title`",
            "comments.`text`",
            "comments.`postid`",
            "posts.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "comments made on the post titled 'How does gentle boosting differ from AdaBoost?'"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "badge name 'Necromancer'"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "posts.`title`",
            "posts.`lasteditoruserid`",
            "users.`displayname`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "post titled 'Open source tools for visualizing multi-dimensional data'"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "posts.`title`",
            "posts.`lasteditoruserid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "title of posts",
            "edited by Vebjorn Ljosa"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`websiteurl`",
            "users.`id`",
            "posts.`lasteditoruserid`",
            "posts.`score`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "posts edited by Yevgeny",
            "include the user's website URL"
        ]
    },
    {
        "tables": [
            "comments",
            "posts",
            "posthistory",
            "users"
        ],
        "columns": [
            "comments.`text`",
            "posts.`id`",
            "posts.`title`",
            "posthistory.`postid`",
            "posthistory.`userid`",
            "users.`id`",
            "comments.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "comments left by users",
            "users who edited the post",
            "post titled 'Why square the difference instead of taking the absolute value in standard deviation?'"
        ]
    },
    {
        "tables": [
            "votes",
            "posts"
        ],
        "columns": [
            "votes.`bountyamount`",
            "posts.`title`",
            "posts.`id`",
            "votes.`postid`"
        ],
        "sql_keywords": [
            "LIKE",
            "SUM"
        ],
        "conditions": [
            "post titled about 'data'"
        ]
    },
    {
        "tables": [
            "users",
            "votes",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "votes.`bountyamount`",
            "votes.`userid`",
            "votes.`postid`",
            "posts.`title`",
            "posts.`id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "INNER JOIN"
        ],
        "conditions": [
            "bounty amount of 50",
            "post title mentioning variance"
        ]
    },
    {
        "tables": [
            "posts",
            "posthistory"
        ],
        "columns": [
            "posts.`viewcount`",
            "posts.`tags`",
            "posts.`title`",
            "posthistory.`comment`",
            "posthistory.`postid`"
        ],
        "sql_keywords": [
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "post tagged as 'humor'"
        ]
    },
    {
        "tables": [
            "comments"
        ],
        "columns": [
            "comments.`userid`",
            "comments.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user ID is 13"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`id`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "highest reputation"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`id`",
            "users.`views`"
        ],
        "sql_keywords": [
            "MIN",
            "="
        ],
        "conditions": [
            "lowest view"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "badges.`userid`",
            "badges.`date`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "DISTINCT"
        ],
        "conditions": [
            "awarded with supporter badge",
            "during year 2011"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`userid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "COUNT",
            "="
        ],
        "conditions": [
            "users awarded with more than 5 badges"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`id`",
            "users.`location`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT"
        ],
        "conditions": [
            "location is New York",
            "has teacher badge",
            "has supporter badge"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "posts.`id`",
            "posts.`owneruserid`",
            "users.`id`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user created post ID 1",
            "reputation of the user who created post ID 1"
        ]
    },
    {
        "tables": [
            "users",
            "posthistory",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "users.`displayname`",
            "users.`views`",
            "posthistory.`postid`",
            "posthistory.`userid`",
            "posts.`id`",
            "posts.`owneruserid`",
            "posts.`viewcount`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "user with only one post history per post",
            "post having at least 1000 views"
        ]
    },
    {
        "tables": [
            "users",
            "comments",
            "badges"
        ],
        "columns": [
            "users.`id`",
            "users.`displayname`",
            "comments.`userid`",
            "badges.`userid`",
            "badges.`name`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "users who have posted the most comments",
            "list out the user's badge"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`id`",
            "users.`location`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "users from India",
            "have the teacher badges"
        ]
    },
    {
        "tables": [
            "badges"
        ],
        "columns": [
            "badges.`name`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "=",
            "AGGREGATE FUNCTIONS",
            "COUNT",
            "DATE FUNCTIONS",
            "YEAR"
        ],
        "conditions": [
            "student badges given during 2010",
            "student badges given during 2011"
        ]
    },
    {
        "tables": [
            "posthistory",
            "comments"
        ],
        "columns": [
            "posthistory.`posthistorytypeid`",
            "posthistory.`postid`",
            "comments.`userid`",
            "comments.`postid`"
        ],
        "sql_keywords": [
            "=",
            "DISTINCT"
        ],
        "conditions": [
            "post ID is 3720",
            "post history type IDs for post ID 3720",
            "unique users who have commented on post ID 3720"
        ]
    },
    {
        "tables": [
            "postlinks",
            "posts"
        ],
        "columns": [
            "postlinks.`relatedpostid`",
            "posts.`id`",
            "posts.`viewcount`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "related to post ID 61217",
            "popularity of post ID 61217"
        ]
    },
    {
        "tables": [
            "posts",
            "postlinks"
        ],
        "columns": [
            "posts.`score`",
            "postlinks.`linktypeid`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "post ID 395"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`id`",
            "posts.`score`",
            "posts.`owneruserid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "post ID with score more than 60",
            "user ID that created these posts"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`favoritecount`",
            "posts.`owneruserid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user ID is 686",
            "year is 2011"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "users.`upvotes`",
            "users.`age`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "HAVING",
            "JOIN",
            "SUM",
            "AVG"
        ],
        "conditions": [
            "users creating more than 10 posts"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "users obtained the 'Announcer' badge"
        ]
    },
    {
        "tables": [
            "badges"
        ],
        "columns": [
            "badges.`name`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "badges obtained on 7/19/2010 7:39:08 PM"
        ]
    },
    {
        "tables": [
            "comments"
        ],
        "columns": [
            "comments.`score`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "comments are positive"
        ]
    },
    {
        "tables": [
            "comments"
        ],
        "columns": [
            "comments.`text`",
            "comments.`creationdate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "comment created on 7/19/2010 7:25:47 PM"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`id`",
            "posts.`score`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "score of 10"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "users.`reputation`",
            "users.`id`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "users who have the highest reputation"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`userid`",
            "badges.`date`",
            "users.`reputation`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reputation of users",
            "obtained the badge on 7/19/2010 7:39:08 PM"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "users.`displayname`",
            "users.`id`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "user's display name is 'Pierre'"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`location`",
            "users.`id`",
            "badges.`userid`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "users located in Rochester, NY"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`userid`",
            "badges.`name`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "DISTINCT"
        ],
        "conditions": [
            "users who obtained the 'Teacher' badge"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "badges.`name`",
            "badges.`userid`",
            "users.`id`",
            "users.`age`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "LIKE",
            "DISTINCT"
        ],
        "conditions": [
            "users obtained 'Organizer' badges",
            "users are teenagers"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`creaiondate`",
            "comments.`postid`",
            "comments.`score`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "post created on 7/19/2010 7:19:56 PM"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`creaiondate`",
            "comments.`postid`",
            "comments.`text`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "post created on 7/19/2010 7:37:33 PM"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`age`",
            "users.`location`",
            "users.`id`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "located in Vienna, Austria",
            "obtained the badge"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`id`",
            "users.`age`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "adults",
            "obtained the badge Supporter"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`views`",
            "users.`id`",
            "badges.`userid`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "users who obtained the badge on 7/19/2010 7:39:08 PM"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "badges.`userid`",
            "users.`reputation`",
            "users.`id`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "users who have the lowest reputation"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "users.`displayname`",
            "users.`id`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user's display name is 'Sharpie'"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`id`",
            "users.`age`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "elders",
            "obtained the 'Supporter' badge"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "ID of 30"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`location`",
            "users.`id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "users from New York"
        ]
    },
    {
        "tables": [
            "votes"
        ],
        "columns": [
            "votes.`id`",
            "votes.`creationdate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "year is 2010"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`age`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "users are adults"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`views`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "highest number of views"
        ]
    },
    {
        "tables": [
            "votes"
        ],
        "columns": [
            "votes.`id`",
            "votes.`creationdate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "votes in 2010",
            "votes in 2011"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "tags"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`tags`",
            "tags.`tagname`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "tags used by John Salvatier"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "posts created by Daniel Vassallo"
        ]
    },
    {
        "tables": [
            "users",
            "votes"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "votes.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "votes made by Harlan"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`id`",
            "posts.`answercount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MAX"
        ],
        "conditions": [
            "post by slashnick",
            "most answers count"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`viewcount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "=",
            "UNION",
            "MAX",
            "SUM",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "posts by Harvey Motulsky",
            "posts by Noah Snyder",
            "higher popularity"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "votes"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`id`",
            "posts.`owneruserid`",
            "votes.`postid`",
            "votes.`userid`"
        ],
        "sql_keywords": [
            "=",
            "COUNT",
            "JOIN"
        ],
        "conditions": [
            "posts by Matt Parker",
            "more than 4 votes"
        ]
    },
    {
        "tables": [
            "comments",
            "users",
            "posts"
        ],
        "columns": [
            "comments.`score`",
            "comments.`userid`",
            "posts.`owneruserid`",
            "users.`displayname`",
            "comments.`postid`",
            "posts.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "negative comments",
            "Neil McGuigan's posts"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "tags"
        ],
        "columns": [
            "users.`id`",
            "users.`displayname`",
            "posts.`owneruserid`",
            "posts.`commentcount`",
            "posts.`tags`",
            "tags.`tagname`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "tags used by Mark Meckes",
            "posts without comments"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "badges.`name`",
            "badges.`userid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "users obtained the Organizer Badges"
        ]
    },
    {
        "tables": [
            "posts",
            "users",
            "tags"
        ],
        "columns": [
            "posts.`id`",
            "posts.`owneruserid`",
            "posts.`tags`",
            "users.`id`",
            "users.`displayname`",
            "tags.`tagname`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "posts posted by Community",
            "posts that use the R language"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`viewcount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "view count from posts posted by Mornington",
            "view count from posts posted by Amos"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "badges.`name`",
            "badges.`date`",
            "badges.`userid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "received commentator badges",
            "in 2014"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`creaiondate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "posts created on 21st July, 2010"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`age`",
            "users.`views`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "highest in views"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`lasteditdate`",
            "posts.`lasteditoruserid`",
            "posts.`title`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "post title is 'Detecting a given face in a database of facial images'"
        ]
    },
    {
        "tables": [
            "comments"
        ],
        "columns": [
            "comments.`score`",
            "comments.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "comments are negative",
            "given by user ID 13"
        ]
    },
    {
        "tables": [
            "comments",
            "posts",
            "users"
        ],
        "columns": [
            "comments.`score`",
            "comments.`postid`",
            "comments.`userid`",
            "posts.`id`",
            "posts.`title`",
            "users.`id`",
            "users.`displayname`"
        ],
        "sql_keywords": [
            "INNER JOIN",
            "DISTINCT",
            "WHERE",
            ">"
        ],
        "conditions": [
            "post title with positive comments",
            "display names of users who posted positive comments"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "badges.`date`",
            "badges.`userid`",
            "users.`location`",
            "users.`id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "badge names received in 2011",
            "user location is in the North Pole"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`websiteurl`",
            "posts.`favoritecount`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "favorite count more than 150"
        ]
    },
    {
        "tables": [
            "posts",
            "posthistory"
        ],
        "columns": [
            "posts.`id`",
            "posts.`title`",
            "posts.`lasteditdate`",
            "posthistory.`postid`",
            "posthistory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "post title is 'What is the best introductory Bayesian statistics textbook?'"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`lastaccessdate`",
            "users.`location`",
            "badges.`name`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "last accessed date of users",
            "location of users",
            "users who received the outliers badge"
        ]
    },
    {
        "tables": [
            "postlinks",
            "posts"
        ],
        "columns": [
            "postlinks.`relatedpostid`",
            "postlinks.`postid`",
            "posts.`id`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "data set monitors a value over time",
            "determine if something happened"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "badges",
            "comments"
        ],
        "columns": [
            "users.`id`",
            "users.`displayname`",
            "posts.`id`",
            "posts.`owneruserid`",
            "badges.`name`",
            "badges.`userid`",
            "comments.`userdisplayname`",
            "comments.`userid`",
            "comments.`postid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "user name is Samuel",
            "year is 2013"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`viewcount`",
            "posts.`owneruserid`",
            "users.`displayname`",
            "users.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "most popular post"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "tags"
        ],
        "columns": [
            "users.`displayname`",
            "users.`location`",
            "posts.`owneruserid`",
            "tags.`tagname`",
            "tags.`excerptpostid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "display name of the user",
            "location of the user",
            "user owned the excerpt post",
            "post has hypothesis-testing tag"
        ]
    },
    {
        "tables": [
            "posts",
            "postlinks"
        ],
        "columns": [
            "posts.`id`",
            "posts.`title`",
            "postlinks.`postid`",
            "postlinks.`relatedpostid`",
            "postlinks.`linktypeid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "related posts titles",
            "link type IDs",
            "post title 'What are principal component scores?'"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "posts.`parentid`",
            "posts.`score`",
            "posts.`id`",
            "posts.`owneruserid`",
            "users.`displayname`",
            "users.`id`"
        ],
        "sql_keywords": [
            "INNER JOIN",
            "MAX",
            "WHERE",
            "="
        ],
        "conditions": [
            "child post with the highest score",
            "display name of the parent ID"
        ]
    },
    {
        "tables": [
            "users",
            "votes"
        ],
        "columns": [
            "votes.`votetypeid`",
            "votes.`bountyamount`",
            "votes.`userid`",
            "users.`displayname`",
            "users.`websiteurl`",
            "users.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "vote type is 8",
            "user with the highest bounty amount"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`title`",
            "posts.`viewcount`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "top 5 posts",
            "highest popularity"
        ]
    },
    {
        "tables": [
            "tags"
        ],
        "columns": [
            "tags.`id`",
            "tags.`count`"
        ],
        "sql_keywords": [
            "BETWEEN"
        ],
        "conditions": [
            "post count between 5,000 to 7,000"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`owneruserid`",
            "posts.`favoritecount`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "most valuable post"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`age`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "most influential user"
        ]
    },
    {
        "tables": [
            "votes",
            "posts"
        ],
        "columns": [
            "votes.`bountyamount`",
            "votes.`creationdate`",
            "votes.`postid`",
            "posts.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "posts created in 2011",
            "posts with votes",
            "posts with a bounty of 50"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`id`",
            "users.`age`"
        ],
        "sql_keywords": [
            "MIN",
            "="
        ],
        "conditions": [
            "youngest user"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`score`",
            "posts.`lasactivitydate`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "post date is 2010-07-19"
        ]
    },
    {
        "tables": [
            "postlinks",
            "posts"
        ],
        "columns": [
            "postlinks.`id`",
            "postlinks.`creationdate`",
            "postlinks.`postid`",
            "posts.`id`",
            "posts.`answercount`"
        ],
        "sql_keywords": [
            "=",
            "<=",
            "AND"
        ],
        "conditions": [
            "year is 2010",
            "posts have no more than 2 answers"
        ]
    },
    {
        "tables": [
            "users",
            "votes",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "votes.`userid`",
            "votes.`postid`",
            "posts.`id`",
            "posts.`favoritecount`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MAX"
        ],
        "conditions": [
            "posts voted by user 1465"
        ]
    },
    {
        "tables": [
            "posts",
            "postlinks"
        ],
        "columns": [
            "postlinks.`creationdate`",
            "postlinks.`postid`",
            "posts.`id`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "oldest post link"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "badges.`name`",
            "badges.`userid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "user acquired the highest amount of badges"
        ]
    },
    {
        "tables": [
            "users",
            "votes"
        ],
        "columns": [
            "users.`displayname`",
            "votes.`creationdate`",
            "votes.`userid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MIN"
        ],
        "conditions": [
            "'chl' cast its first vote in a post"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "users.`age`",
            "posts.`creaiondate`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "youngest user",
            "first post"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "badges.`name`",
            "badges.`date`",
            "badges.`userid`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "user acquired the first Autobiographer badge"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "users.`location`",
            "posts.`owneruserid`",
            "posts.`favoritecount`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "users located in United Kingdom",
            "post total favorite amount of 4 or more"
        ]
    },
    {
        "tables": [
            "votes",
            "users"
        ],
        "columns": [
            "votes.`postid`",
            "users.`age`",
            "users.`id`",
            "votes.`userid`"
        ],
        "sql_keywords": [
            "AVG",
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "oldest users"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "highest reputation",
            "display name"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`reputation`",
            "users.`views`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reputation higher than 2000",
            "number of views higher than 1000"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`age`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "users who are adults"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`creaiondate`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "JOIN",
            "YEAR()"
        ],
        "conditions": [
            "posts by Jay Stevens",
            "year 2010"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`owneruserid`",
            "posts.`id`",
            "posts.`title`",
            "posts.`viewcount`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MAX"
        ],
        "conditions": [
            "post by Harvey Motulsky",
            "most views"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`id`",
            "posts.`title`",
            "posts.`score`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "post with the highest score"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "posts.`score`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average score of Stephen Turner's posts"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`displayname`",
            "posts.`viewcount`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "posts had over 20000 views",
            "in the year 2011"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`id`",
            "posts.`favoritecount`",
            "posts.`owneruserid`",
            "users.`id`",
            "users.`displayname`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "year is 2010",
            "most valuable post"
        ]
    },
    {
        "tables": [
            "users",
            "posts"
        ],
        "columns": [
            "users.`id`",
            "users.`reputation`",
            "users.`creationdate`",
            "posts.`id`",
            "posts.`owneruserid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "reputation over 1000",
            "year 2011"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`age`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "users are teenagers"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`viewcount`",
            "posts.`lasteditoruserid`",
            "users.`displayname`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "total views on the post 'Computer Game Datasets'",
            "name of the user who posted 'Computer Game Datasets' last time"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`viewcount`"
        ],
        "sql_keywords": [
            "AVG",
            ">"
        ],
        "conditions": [
            "views above average"
        ]
    },
    {
        "tables": [
            "comments",
            "posts"
        ],
        "columns": [
            "posts.`id`",
            "posts.`score`",
            "posts.`commentcount`",
            "comments.`postid`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "post with the highest score"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`viewcount`",
            "posts.`commentcount`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "posts viewed over 35000 times",
            "posts received no comments from other users"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`lasteditdate`",
            "posts.`lasteditoruserid`",
            "posts.`id`",
            "users.`displayname`",
            "users.`location`",
            "users.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "JOIN"
        ],
        "conditions": [
            "display name of the user",
            "location of the user",
            "user was the last to edit the post",
            "post ID is 183"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "users.`id`",
            "badges.`name`",
            "badges.`userid`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MAX"
        ],
        "conditions": [
            "latest badge awarded",
            "user with the display name Emmett"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`age`",
            "users.`upvotes`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "adult users",
            "cast over 5000 upvotes"
        ]
    },
    {
        "tables": [
            "users",
            "badges"
        ],
        "columns": [
            "users.`displayname`",
            "users.`creationdate`",
            "users.`id`",
            "badges.`userid`",
            "badges.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "user display name is 'Zolomon'",
            "count time from the date the user's account was created",
            "user received a badge"
        ]
    },
    {
        "tables": [
            "users",
            "posts",
            "comments"
        ],
        "columns": [
            "users.`id`",
            "users.`creationdate`",
            "posts.`owneruserid`",
            "posts.`id`",
            "comments.`userid`",
            "comments.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "number of posts left by the user",
            "number of comments left by the user",
            "user with the latest created user account"
        ]
    },
    {
        "tables": [
            "comments",
            "posts",
            "users"
        ],
        "columns": [
            "comments.`text`",
            "comments.`creationdate`",
            "comments.`postid`",
            "comments.`userid`",
            "posts.`title`",
            "posts.`id`",
            "users.`displayname`",
            "users.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "latest 10 comments",
            "post title 'Analysing wind data with R'",
            "display name of the user who left the comment"
        ]
    },
    {
        "tables": [
            "badges",
            "users"
        ],
        "columns": [
            "badges.`name`",
            "badges.`userid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "DISTINCT"
        ],
        "conditions": [
            "awarded with 'Citizen Patrol' badge"
        ]
    },
    {
        "tables": [
            "posts",
            "tags"
        ],
        "columns": [
            "posts.`tags`",
            "tags.`tagname`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "tag specified as 'careers'"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`reputation`",
            "users.`views`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "display name is 'Jarrod Dixon'"
        ]
    },
    {
        "tables": [
            "comments",
            "posts",
            "users"
        ],
        "columns": [
            "comments.`id`",
            "comments.`postid`",
            "comments.`userid`",
            "posts.`id`",
            "posts.`title`",
            "posts.`parentid`",
            "posts.`posttypeid`",
            "users.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "comments left by users on the post with the title 'Clustering 1D data'",
            "answers left by users on the post with the title 'Clustering 1D data'"
        ]
    },
    {
        "tables": [
            "users"
        ],
        "columns": [
            "users.`displayname`",
            "users.`creationdate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "user known as 'IrishStat'"
        ]
    },
    {
        "tables": [
            "posts",
            "votes"
        ],
        "columns": [
            "posts.`id`",
            "votes.`bountyamount`",
            "votes.`postid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "bounty amount over 30"
        ]
    },
    {
        "tables": [
            "posts",
            "users"
        ],
        "columns": [
            "posts.`score`",
            "posts.`id`",
            "posts.`owneruserid`",
            "users.`id`",
            "users.`reputation`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "COUNT",
            "DIVIDE"
        ],
        "conditions": [
            "posts posted by the most influential user",
            "score above 50"
        ]
    },
    {
        "tables": [
            "posts"
        ],
        "columns": [
            "posts.`score`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "score less than 20"
        ]
    },
    {
        "tables": [
            "tags"
        ],
        "columns": [
            "tags.`id`",
            "tags.`count`"
        ],
        "sql_keywords": [
            "=",
            "<",
            "<="
        ],
        "conditions": [
            "tag ID below 15",
            "count of posts 20 and below"
        ]
    },
    {
        "tables": [
            "tags"
        ],
        "columns": [
            "tags.`excerptpostid`",
            "tags.`wikipostid`",
            "tags.`tagname`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "excerpt post ID of the tag named sample",
            "wiki post ID of the tag named sample"
        ]
    },
    {
        "tables": [
            "users",
            "comments"
        ],
        "columns": [
            "users.`reputation`",
            "users.`upvotes`",
            "comments.`text`",
            "comments.`userid`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "user's reputation",
            "up vote number of the user",
            "comment text is 'fine, you win :)'"
        ]
    },
    {
        "tables": [
            "comments",
            "posts"
        ],
        "columns": [
            "comments.`text`",
            "comments.`postid`",
            "posts.`id`",
            "posts.`title`"
        ],
        "sql_keywords": [
            "LIKE",
            "INNER JOIN"
        ],
        "conditions": [
            "texts commented on the post about linear regression"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`viewcount`",
            "comments.`postid`",
            "comments.`score`",
            "comments.`text`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "views between 100 and 150",
            "comment with the highest score"
        ]
    },
    {
        "tables": [
            "users",
            "comments"
        ],
        "columns": [
            "users.`creationdate`",
            "users.`age`",
            "comments.`text`"
        ],
        "sql_keywords": [
            "LIKE",
            "INNER JOIN",
            "="
        ],
        "conditions": [
            "comment contains 'webiste'"
        ]
    },
    {
        "tables": [
            "comments",
            "posts"
        ],
        "columns": [
            "comments.`score`",
            "comments.`postid`",
            "posts.`id`",
            "posts.`viewcount`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "comments with 0 score",
            "posts with view count lower than 5"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`commentcount`",
            "comments.`postid`",
            "comments.`score`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "posts with 1 comment",
            "comments have 0 score"
        ]
    },
    {
        "tables": [
            "comments",
            "users"
        ],
        "columns": [
            "comments.`score`",
            "comments.`userid`",
            "users.`age`",
            "users.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "product comments with 0 score",
            "users ages 40 years old"
        ]
    },
    {
        "tables": [
            "posts",
            "comments"
        ],
        "columns": [
            "posts.`id`",
            "posts.`title`",
            "comments.`postid`",
            "comments.`text`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "post ID",
            "comments commented in the post",
            "post titled 'Group differences on a five point Likert item'"
        ]
    },
    {
        "tables": [
            "comments",
            "users"
        ],
        "columns": [
            "comments.`text`",
            "comments.`userid`",
            "users.`id`",
            "users.`upvotes`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "comment text is 'R is also lazy evaluated.'"
        ]
    },
    {
        "tables": [
            "comments",
            "users"
        ],
        "columns": [
            "comments.`text`",
            "users.`displayname`",
            "users.`id`",
            "comments.`userid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "username is Harvey Motulsky"
        ]
    },
    {
        "tables": [
            "comments",
            "users"
        ],
        "columns": [
            "comments.`score`",
            "comments.`userid`",
            "users.`displayname`",
            "users.`downvotes`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "comments with score between 1 to 5",
            "users with 0 down votes"
        ]
    },
    {
        "tables": [
            "comments",
            "users"
        ],
        "columns": [
            "comments.`score`",
            "comments.`userid`",
            "users.`id`",
            "users.`upvotes`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "COUNT",
            "DIVIDE",
            "BETWEEN"
        ],
        "conditions": [
            "comments with scores between 5 to 10",
            "users with 0 up votes"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`superhero_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superpowers of 3-D Man"
        ]
    },
    {
        "tables": [
            "hero_power",
            "superhero",
            "superpower"
        ],
        "columns": [
            "superpower.`power_name`",
            "hero_power.`power_id`",
            "hero_power.`hero_id`",
            "superhero.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes with the super power of 'Super Strength'"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superpower.`power_name`",
            "superhero.`height_cm`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superhero.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "COUNT",
            "CONDITIONAL"
        ],
        "conditions": [
            "super power of 'Super Strength'",
            "height over 200cm"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`full_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes with over 15 super powers"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes with blue eyes"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`skin_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "colour",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "superheroes with blue eyes",
            "superheroes with the super power of 'Agility'"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "superhero.`hair_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes with blue eyes",
            "superheroes with blond hair"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`publisher_id`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`height_cm`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "heroes published by Marvel Comics",
            "rank by height in descending order"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`",
            "publisher.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "publisher",
            "colour"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "superhero.`id`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "superheroes from Marvel Comics",
            "rank by eye color popularity",
            "starting with the most common color"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`height_cm`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`",
            "publisher.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes from Marvel Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "publisher.`publisher_name`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "superheroes from Marvel Comics",
            "super power of 'Super Strength'"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`publisher_id`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute",
            "publisher"
        ],
        "columns": [
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": [
            "publisher of the slowest superhero"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour",
            "publisher"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "superhero.`publisher_id`",
            "colour.`id`",
            "colour.`colour`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "gold-eyed superheroes",
            "published by Marvel Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "publisher's name of Blue Beetle II"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`hair_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes",
            "blonde hair"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`race_id`",
            "race.`id`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "durability attribute value less than 50"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`power_name`",
            "superpower.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "superheroes with the power of death touch"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`gender_id`",
            "gender.`id`",
            "gender.`gender`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "hero_attribute.`attribute_value`",
            "attribute.`id`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "gender is female",
            "strength value is 100"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "MAX",
            "COUNT"
        ],
        "conditions": [
            "superhero with the most powers"
        ]
    },
    {
        "tables": [
            "race",
            "superhero"
        ],
        "columns": [
            "race.`race`",
            "superhero.`race_id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "vampire superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment",
            "publisher"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`alignment_id`",
            "superhero.`publisher_id`",
            "alignment.`alignment`",
            "alignment.`id`",
            "publisher.`publisher_name`",
            "publisher.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "superheroes who act in their own self-interest",
            "superheroes who make decisions based on their own moral code",
            "superheroes published by Marvel Comics"
        ]
    },
    {
        "tables": [
            "publisher",
            "superhero"
        ],
        "columns": [
            "publisher.`publisher_name`",
            "superhero.`publisher_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "DC Comics",
            "Marvel Comics",
            "number of superheroes published by DC Comics",
            "number of superheroes published by Marvel Comics"
        ]
    },
    {
        "tables": [
            "publisher"
        ],
        "columns": [
            "publisher.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "publisher ID of Star Trek"
        ]
    },
    {
        "tables": [
            "hero_attribute"
        ],
        "columns": [
            "hero_attribute.`attribute_value`"
        ],
        "sql_keywords": [],
        "conditions": [
            "average attribute value",
            "all superheroes"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`full_name`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "superheroes without full name"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "superhero.`id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero ID 75"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superpowers of the superhero called Deathlok"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`gender_id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "gender is female",
            "subject is superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`gender_id`",
            "gender.`id`",
            "gender.`gender`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "superpowers of male superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`race_id`",
            "race.`race`",
            "race.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`height_cm`",
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "JOIN",
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "height from 170 to 190",
            "no eye color"
        ]
    },
    {
        "tables": [
            "hero_power",
            "superpower"
        ],
        "columns": [
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "hero ID is 56"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`full_name`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Demi-God superheroes",
            "at least five full names"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment"
        ],
        "columns": [
            "superhero.`alignment_id`",
            "alignment.`alignment`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes are bad"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`race_id`",
            "race.`id`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero weighs 169 kg"
        ]
    },
    {
        "tables": [
            "superhero",
            "race",
            "colour"
        ],
        "columns": [
            "superhero.`height_cm`",
            "superhero.`race_id`",
            "superhero.`hair_colour_id`",
            "race.`race`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "human superhero",
            "185 cm tall"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "heaviest superhero"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`height_cm`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`",
            "publisher.`id`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "=",
            "SUM",
            "COUNT"
        ],
        "conditions": [
            "superheroes with height between 150 to 180",
            "heroes published by Marvel Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`weight_kg`",
            "superhero.`gender_id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "gender is male",
            "weight greater than 79% average weight of all superheroes"
        ]
    },
    {
        "tables": [
            "hero_power",
            "superpower"
        ],
        "columns": [
            "hero_power.`power_id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "MAX",
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`superhero_name`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "hero_attribute.`attribute_value`",
            "attribute.`id`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "attribute value of superhero Abomination"
        ]
    },
    {
        "tables": [
            "hero_power",
            "superpower"
        ],
        "columns": [
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "heroes with ID 1"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`id`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "heroes with stealth power"
        ]
    },

    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`full_name`",
            "hero_attribute.`attribute_value`",
            "hero_attribute.`hero_id`",
            "attribute.`attribute_name`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": [
            "hero's full name",
            "highest attribute in strength"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`skin_colour_id`",
            "colour.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes with no skin colour"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`publisher_id`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes",
            "published by Dark Horse Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "JOIN"
        ],
        "conditions": [
            "superhero",
            "most durability",
            "published by Dark Horse Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`full_name`",
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "eyes colour of Abraham Sapien"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "superheroes with flight power"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour",
            "gender",
            "publisher"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "superhero.`hair_colour_id`",
            "superhero.`skin_colour_id`",
            "superhero.`gender_id`",
            "superhero.`publisher_id`",
            "colour.`id`",
            "colour.`colour`",
            "gender.`id`",
            "gender.`gender`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "female superheroes",
            "published by Dark Horse Comics",
            "eyes color",
            "hair color",
            "skin color"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "superhero.`hair_colour_id`",
            "superhero.`skin_colour_id`",
            "superhero.`publisher_id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "same eyes",
            "same hair",
            "same skin colour",
            "indicate publisher of the superhero"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`race_id`",
            "race.`race`",
            "race.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "colour",
            "gender"
        ],
        "columns": [
            "superhero.`skin_colour_id`",
            "superhero.`gender_id`",
            "colour.`id`",
            "colour.`colour`",
            "gender.`id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "WHERE",
            "GROUP BY",
            "COUNT",
            "SUM",
            "DIVIDE",
            "MULTIPLY"
        ],
        "conditions": [
            "blue female superheroes",
            "all female superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "hero name of Charles Chandler",
            "race of Charles Chandler"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`gender_id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Agent 13 hero"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes with adaptation power"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`full_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "powers of Hunter Zolomon"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`height_cm`",
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "eye colour is amber"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "superhero.`hair_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "heroes' eyes color is black",
            "heroes' hair color is black"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`eye_colour_id`",
            "superhero.`skin_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "eye colours of heroes",
            "skin colours are gold"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`full_name`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "vampire heroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "alignment.`alignment`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`id`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "COUNT"
        ],
        "conditions": [
            "highest attribute value in strength"
        ]
    },
    {
        "tables": [
            "superhero",
            "race",
            "alignment"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`race_id`",
            "superhero.`alignment_id`",
            "race.`race`",
            "alignment.`alignment`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "race of Cameron Hicks",
            "alignment of Cameron Hicks"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender",
            "publisher"
        ],
        "columns": [
            "superhero.`gender_id`",
            "superhero.`publisher_id`",
            "gender.`gender`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "female heroes",
            "published by Marvel Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`race_id`",
            "race.`race`",
            "race.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "heroes who are aliens"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`full_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Emil Blonsky's weight",
            "Charles Chandler's weight"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`height_cm`"
        ],
        "sql_keywords": [
            "SUM",
            "COUNT",
            "DIVIDE"
        ],
        "conditions": [
            "calculate average height",
            "for each superhero"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "race",
            "gender"
        ],
        "columns": [
            "superhero.`race_id`",
            "superhero.`gender_id`",
            "race.`id`",
            "gender.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes with the race of god/eternal",
            "superheroes who are male"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "alignment"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`alignment_id`",
            "alignment.`id`",
            "alignment.`alignment`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes with a neutral alignment"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "3-D Man's attributes",
            "values of 3-D Man's attributes"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "superhero.`hair_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "blue eyes",
            "brown hair"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`publisher_id`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Hawkman",
            "Karate Kid",
            "Speedy"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`publisher_id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "superheroes without any publisher"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes with blue eyes"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender"
        ],
        "columns": [
            "superhero.`gender_id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "male superheroes",
            "female superheroes"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`height_cm`"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "superpower"
        ],
        "columns": [
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero ID 294"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`full_name`",
            "superhero.`weight_kg`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superheroes with missing weight"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`full_name`",
            "superhero.`eye_colour_id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero with full name Karen Beecher-Duncan"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`full_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero with full name Helen Parr"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`height_cm`",
            "superhero.`race_id`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "weight is 108kg",
            "height is 188cm"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`id`",
            "superhero.`publisher_id`",
            "publisher.`id`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero ID is 38"
        ]
    },
    {
        "tables": [
            "superhero",
            "race",
            "hero_attribute"
        ],
        "columns": [
            "hero_attribute.`attribute_value`",
            "hero_attribute.`hero_id`",
            "superhero.`id`",
            "superhero.`race_id`",
            "race.`id`",
            "race.`race`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "superhero with maximum attribute value"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`alignment_id`",
            "alignment.`alignment`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "alignment of Atom IV",
            "superpowers of Atom IV"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`full_name`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "superheroes with blue eyes"
        ]
    },
    {
        "tables": [
            "hero_attribute",
            "superhero",
            "alignment"
        ],
        "columns": [
            "hero_attribute.`attribute_value`",
            "superhero.`alignment_id`",
            "alignment.`id`"
        ],
        "sql_keywords": [
            "AVG",
            "="
        ],
        "conditions": [
            "attribute value",
            "neutral superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`skin_colour_id`",
            "colour.`colour`",
            "hero_attribute.`attribute_value`",
            "hero_attribute.`hero_id`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "skin colour of superheroes",
            "attribute value equals 100"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment",
            "gender"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "superhero.`alignment_id`",
            "superhero.`gender_id`",
            "alignment.`id`",
            "gender.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "gender is female",
            "alignment is good"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "superhero.`id`"
        ],
        "sql_keywords": [
            "BETWEEN"
        ],
        "conditions": [
            "attribute value between 75 to 80"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour",
            "gender",
            "race"
        ],
        "columns": [
            "superhero.`hair_colour_id`",
            "superhero.`gender_id`",
            "superhero.`race_id`",
            "colour.`id`",
            "colour.`colour`",
            "gender.`id`",
            "gender.`gender`",
            "race.`id`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "blue-haired",
            "male",
            "superhero"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment",
            "gender"
        ],
        "columns": [
            "superhero.`alignment_id`",
            "superhero.`gender_id`",
            "alignment.`id`",
            "gender.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "bad superheroes",
            "female superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "superhero.`eye_colour_id`",
            "colour.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "SUBTRACT"
        ],
        "conditions": [
            "superheroes with missing weight data",
            "superheroes with blue eyes",
            "superheroes with no eye color"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero",
            "colour",
            "alignment"
        ],
        "columns": [
            "superhero.`skin_colour_id`",
            "superhero.`alignment_id`",
            "colour.`id`",
            "colour.`colour`",
            "alignment.`id`",
            "alignment.`alignment`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "villains with green skin",
            "in the superhero universe"
        ]
    },
    {
        "tables": [
            "superhero",
            "gender",
            "publisher"
        ],
        "columns": [
            "superhero.`gender_id`",
            "superhero.`publisher_id`",
            "gender.`gender`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "female superheroes",
            "Marvel Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "ORDER BY"
        ],
        "conditions": [
            "superheroes who can control wind"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower",
            "gender"
        ],
        "columns": [
            "superpower.`power_name`",
            "hero_power.`power_id`",
            "hero_power.`hero_id`",
            "superhero.`id`",
            "superhero.`gender_id`",
            "gender.`id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "superhero with the ability of Phoenix Force"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`weight_kg`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "heaviest superhero",
            "DC Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "race",
            "publisher"
        ],
        "columns": [
            "superhero.`height_cm`",
            "superhero.`race_id`",
            "superhero.`publisher_id`",
            "race.`race`",
            "race.`id`",
            "publisher.`publisher_name`",
            "publisher.`id`"
        ],
        "sql_keywords": [
            "AVG",
            "=",
            "<>"
        ],
        "conditions": [
            "non-human superhero",
            "in Dark Horse Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`id`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes with speed attribute"
        ]
    },
    {
        "tables": [
            "publisher",
            "superhero"
        ],
        "columns": [
            "publisher.`publisher_name`",
            "superhero.`publisher_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "SUBTRACT"
        ],
        "conditions": [
            "publisher is DC",
            "publisher is Marvel Comics"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "hero_attribute.`attribute_value`",
            "attribute.`attribute_name`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "weakest attribute of the Black Panther"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "colour.`id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Abomination's eye colour"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`height_cm`"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`full_name`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "superhero known as Charles Chandler"
        ]
    },
    {
        "tables": [
            "superhero",
            "publisher",
            "gender"
        ],
        "columns": [
            "publisher.`publisher_name`",
            "superhero.`publisher_id`",
            "superhero.`gender_id`",
            "gender.`gender`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes created by George Lucas",
            "percentage of female superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment",
            "publisher"
        ],
        "columns": [
            "superhero.`alignment_id`",
            "superhero.`publisher_id`",
            "alignment.`alignment`",
            "publisher.`publisher_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes in Marvel Comics",
            "identify percentage of 'good' superheroes"
        ]
    },
    {
        "tables": [
            "superhero"
        ],
        "columns": [
            "superhero.`full_name`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "superheroes with first name John"
        ]
    },
    {
        "tables": [
            "hero_attribute"
        ],
        "columns": [
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_value`"
        ],
        "sql_keywords": [
            "MIN"
        ],
        "conditions": [
            "superhero with the lowest attribute value"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`full_name`",
            "superhero.`superhero_name`",
            "race.`race`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "superhero named Alien"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`full_name`",
            "superhero.`weight_kg`",
            "superhero.`eye_colour_id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "weight less than 100",
            "brown eyes"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`id`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "hero_attribute.`attribute_value`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero named Aquababy"
        ]
    },
    {
        "tables": [
            "superhero",
            "race"
        ],
        "columns": [
            "superhero.`weight_kg`",
            "race.`race`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "superhero ID is 40"
        ]
    },
    {
        "tables": [
            "superhero",
            "alignment"
        ],
        "columns": [
            "superhero.`height_cm`",
            "superhero.`alignment_id`",
            "alignment.`id`",
            "alignment.`alignment`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "neutral superheroes"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_attribute",
            "attribute"
        ],
        "columns": [
            "superhero.`id`",
            "hero_attribute.`hero_id`",
            "hero_attribute.`attribute_id`",
            "attribute.`attribute_name`",
            "attribute.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "superheroes have intelligence as their power"
        ]
    },
    {
        "tables": [
            "superhero",
            "colour"
        ],
        "columns": [
            "superhero.`superhero_name`",
            "superhero.`eye_colour_id`",
            "colour.`colour`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "character name is Blackwulf"
        ]
    },
    {
        "tables": [
            "superhero",
            "hero_power",
            "superpower"
        ],
        "columns": [
            "superhero.`height_cm`",
            "hero_power.`hero_id`",
            "hero_power.`power_id`",
            "superpower.`power_name`"
        ],
        "sql_keywords": [
            "JOIN",
            ">",
            "AVG"
        ],
        "conditions": [
            "height greater than 80% of the average height of all superheroes"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q1`",
            "qualifying.`driverid`",
            "drivers.`driverref`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "reference names of the drivers",
            "eliminated in the first period",
            "race number 20"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q2`",
            "qualifying.`driverid`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "best lap time",
            "race number 19",
            "second qualifying period"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "circuits.`location`",
            "circuits.`circuitid`",
            "races.`circuitid`"
        ],
        "sql_keywords": [
            "LIKE",
            "INNER JOIN"
        ],
        "conditions": [
            "race held on circuits in Shanghai"
        ]
    },
    {
        "tables": [
            "circuits",
            "races"
        ],
        "columns": [
            "circuits.`name`",
            "races.`url`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "introduction of the races",
            "held on Circuit de Barcelona-Catalunya"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "circuits.`country`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "race held on circuits in Germany"
        ]
    },
    {
        "tables": [
            "constructors",
            "results",
            "races",
            "circuits"
        ],
        "columns": [
            "constructors.`name`",
            "results.`position`",
            "results.`constructorid`",
            "results.`raceid`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "circuits built by the constructor Renault"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "races.`circuitid`",
            "circuits.`country`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "NOT IN"
        ],
        "conditions": [
            "year 2010",
            "races held on grand prixs",
            "outside Asia",
            "outside Europe"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "circuits.`country`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "races held on circuits in Spain"
        ]
    },
    {
        "tables": [
            "circuits",
            "races"
        ],
        "columns": [
            "circuits.`lat`",
            "circuits.`lng`",
            "races.`name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`url`",
            "circuits.`name`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "races held on Sepang International Circuit"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`time`",
            "circuits.`name`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "races held on Sepang International Circuit"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "races.`circuitid`",
            "circuits.`lat`",
            "circuits.`lng`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "coordinate position for Abu Dhabi Grand Prix"
        ]
    },
    {
        "tables": [
            "constructors",
            "results",
            "races"
        ],
        "columns": [
            "constructors.`nationality`",
            "results.`points`",
            "results.`raceid`",
            "results.`constructorid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "constructor got 1 point",
            "race No. 24"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`q1`",
            "qualifying.`raceid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Bruno Senna",
            "Q1 result",
            "qualifying race No. 354"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q2`",
            "qualifying.`driverid`",
            "drivers.`driverid`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "Q2 time is 0:01:40",
            "qualifying race No. 355"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q3`",
            "qualifying.`driverid`",
            "drivers.`driverid`",
            "drivers.`number`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "driver finished 0:01:54",
            "Q3 of qualifying race No.903"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`time`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Bahrain Grand Prix",
            "year 2007",
            "drivers not finished"
        ]
    },
    {
        "tables": [
            "races",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "seasons.`url`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "race No. 901 took place"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "status"
        ],
        "columns": [
            "races.`raceid`",
            "races.`date`",
            "results.`raceid`",
            "results.`statusid`",
            "status.`statusid`",
            "status.`status`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "race date is 2015/11/29"
        ]
    },
    {
        "tables": [
            "results",
            "drivers"
        ],
        "columns": [
            "results.`raceid`",
            "results.`driverid`",
            "results.`time`",
            "drivers.`dob`",
            "drivers.`driverid`",
            "drivers.`surname`",
            "drivers.`forename`"
        ],
        "sql_keywords": [
            "=",
            "IS NOT NULL"
        ],
        "conditions": [
            "drivers who finished the game",
            "race No. 592"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers"
        ],
        "columns": [
            "laptimes.`driverid`",
            "laptimes.`raceid`",
            "laptimes.`time`",
            "drivers.`url`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "lap time of 0:01:27",
            "race No. 161"
        ]
    },
    {
        "tables": [
            "results",
            "drivers",
            "races"
        ],
        "columns": [
            "results.`raceid`",
            "results.`driverid`",
            "results.`fastestlapspeed`",
            "drivers.`driverid`",
            "drivers.`nationality`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "JOIN"
        ],
        "conditions": [
            "driver set the fastest lap speed",
            "race No.933"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "races.`circuitid`",
            "circuits.`circuitid`",
            "circuits.`lat`",
            "circuits.`lng`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Malaysian Grand Prix location",
            "location coordinates"
        ]
    },
    {
        "tables": [
            "constructorresults",
            "constructors"
        ],
        "columns": [
            "constructorresults.`constructorid`",
            "constructorresults.`points`",
            "constructorresults.`raceid`",
            "constructors.`url`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "constructor with the highest point in race No. 9"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`q1`",
            "qualifying.`raceid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "Lucas di Grassi",
            "Q1 result",
            "race No. 345"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers",
            "races"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q2`",
            "qualifying.`driverid`",
            "drivers.`driverid`",
            "drivers.`nationality`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "Q2 time as 0:01:15",
            "race No. 347"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q3`",
            "qualifying.`driverid`",
            "drivers.`driverid`",
            "drivers.`code`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "race No. 45",
            "driver with Q3 time 0:01:33"
        ]
    },
    {
        "tables": [
            "results",
            "drivers"
        ],
        "columns": [
            "results.`raceid`",
            "results.`driverid`",
            "results.`time`",
            "drivers.`surname`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Bruce McLaren",
            "race No.743"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`raceid`",
            "races.`name`",
            "races.`year`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`position`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "San Marino Grand Prix",
            "year 2006",
            "finished second"
        ]
    },
    {
        "tables": [
            "races",
            "seasons"
        ],
        "columns": [
            "races.`raceid`",
            "races.`year`",
            "seasons.`url`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "race No. 901"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "status"
        ],
        "columns": [
            "races.`raceid`",
            "races.`date`",
            "results.`raceid`",
            "results.`statusid`",
            "status.`statusid`",
            "status.`status`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "race date is 2015/11/29"
        ]
    },
    {
        "tables": [
            "results",
            "drivers"
        ],
        "columns": [
            "results.`raceid`",
            "results.`driverid`",
            "results.`time`",
            "drivers.`dob`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "drivers who finished the game",
            "race No. 872"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers"
        ],
        "columns": [
            "laptimes.`raceid`",
            "laptimes.`driverid`",
            "laptimes.`time`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "MIN",
            "="
        ],
        "conditions": [
            "race No. 348",
            "driver with the best lap time"
        ]
    },
    {
        "tables": [
            "results",
            "drivers"
        ],
        "columns": [
            "results.`fastestlapspeed`",
            "results.`driverid`",
            "drivers.`driverid`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "driver set the fastest lap speed"
        ]
    },
    {
        "tables": [
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`fastestlapspeed`"
        ],
        "sql_keywords": [
            "=",
            "SUBTRACT",
            "DIVIDE"
        ],
        "conditions": [
            "Paul di Resta was in the No. 853 race",
            "Compare fastest lap speed of No. 853 race with the next race"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "drivers"
        ],
        "columns": [
            "results.`driverid`",
            "results.`time`",
            "races.`raceid`",
            "races.`date`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "drivers who took part in the race",
            "race date is 1983/7/16"
        ]
    },
    {
        "tables": [
            "races",
            "seasons"
        ],
        "columns": [
            "races.`name`",
            "races.`year`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "races",
            "seasons"
        ],
        "columns": [
            "races.`name`",
            "races.`year`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "year is 2005"
        ]
    },
    {
        "tables": [
            "races"
        ],
        "columns": [
            "races.`name`",
            "races.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MIN"
        ],
        "conditions": [
            "earliest recorded year",
            "earliest recorded month"
        ]
    },
    {
        "tables": [
            "races"
        ],
        "columns": [
            "races.`name`",
            "races.`date`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "year 1999"
        ]
    },
    {
        "tables": [
            "seasons",
            "races"
        ],
        "columns": [
            "races.`year`",
            "races.`round`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "MAX"
        ],
        "conditions": [
            "most number of races in a year"
        ]
    },
    {
        "tables": [
            "races",
            "seasons"
        ],
        "columns": [
            "races.`name`",
            "races.`year`"
        ],
        "sql_keywords": [
            "EXCEPT"
        ],
        "conditions": [
            "races in year 2017",
            "races not hosted in year 2000"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "races.`name`",
            "races.`circuitid`",
            "circuits.`country`",
            "circuits.`name`",
            "circuits.`location`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "first European Grand Prix",
            "country",
            "circuit",
            "location"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "races.`name`",
            "races.`circuitid`",
            "circuits.`name`",
            "circuits.`circuitid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Brands Hatch hosted the British Grand Prix",
            "last F1 season"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "races.`circuitid`",
            "races.`name`",
            "circuits.`name`",
            "circuits.`circuitid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Silverstone Circuit hosting the United Kingdom Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "races.`name`",
            "races.`year`",
            "results.`position`",
            "results.`driverid`",
            "results.`raceid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "drivers in the 2010 Singapore Grand Prix",
            "order by their position stands"
        ]
    },
    {
        "tables": [
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "results.`points`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "driver with the most points scored"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`surname`",
            "drivers.`forename`",
            "results.`points`",
            "races.`name`",
            "races.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "top 3 drivers",
            "points scored",
            "2017 Chinese Grand Prix"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers",
            "races"
        ],
        "columns": [
            "laptimes.`milliseconds`",
            "drivers.`forename`",
            "drivers.`surname`",
            "races.`name`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "ON",
            "="
        ],
        "conditions": [
            "best lap time recorded",
            "driver associated with best lap time",
            "race associated with best lap time"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers",
            "races"
        ],
        "columns": [
            "laptimes.`milliseconds`",
            "laptimes.`driverid`",
            "laptimes.`raceid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "races.`name`",
            "races.`year`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "average lap time",
            "Lewis Hamilton",
            "2009 Malaysian Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`surname`",
            "drivers.`driverid`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`position`",
            "races.`raceid`",
            "races.`year`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "AND"
        ],
        "conditions": [
            "Hamilton not at the 1st track of the F1 circuit",
            "since 2010"
        ]
    },
    {
        "tables": [
            "drivers",
            "driverstandings"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`nationality`",
            "driverstandings.`wins`",
            "driverstandings.`points`",
            "driverstandings.`driverid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "driver with the most winning",
            "driver's nationality",
            "driver's maximum point scores"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`dob`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "youngest Japanese driver"
        ]
    },
    {
        "tables": [
            "circuits",
            "races",
            "seasons"
        ],
        "columns": [
            "circuits.`circuitid`",
            "circuits.`name`",
            "races.`circuitid`",
            "races.`year`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "circuits hosting 4 F1 races",
            "year range from 1990 to 2000"
        ]
    },
    {
        "tables": [
            "circuits",
            "races",
            "seasons"
        ],
        "columns": [
            "circuits.`name`",
            "circuits.`location`",
            "races.`name`",
            "circuits.`country`",
            "races.`year`",
            "races.`circuitid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "circuits in USA",
            "hosted F1 races in 2006",
            "name and location of circuit",
            "name of the race hosted"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`name`",
            "races.`date`",
            "circuits.`name`",
            "circuits.`location`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "F1 races hosted in September 2005",
            "race name",
            "circuit name",
            "location"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`position`",
            "races.`raceid`",
            "races.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Alex Yoong",
            "track number less than 20"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`raceid`",
            "races.`circuitid`",
            "circuits.`name`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`points`",
            "drivers.`surname`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Michael Schumacher",
            "won races",
            "Sepang International Circuit"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "drivers"
        ],
        "columns": [
            "laptimes.`milliseconds`",
            "laptimes.`driverid`",
            "laptimes.`raceid`",
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MIN"
        ],
        "conditions": [
            "race involving Michael Schumacher",
            "year of the race",
            "fastest lap by Michael Schumacher"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "results.`points`",
            "results.`driverid`",
            "races.`raceid`",
            "races.`year`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Eddie Irvine",
            "average points scored",
            "year 2000"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "races.`raceid`",
            "races.`year`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`points`"
        ],
        "sql_keywords": [
            "=",
            "MIN"
        ],
        "conditions": [
            "Lewis Hamilton's first race",
            "points recorded for Lewis Hamilton's first race event"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "races.`date`",
            "circuits.`country`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "year is 2017",
            "list races",
            "include hosting country",
            "order by date of the event"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "circuits"
        ],
        "columns": [
            "results.`laps`",
            "races.`name`",
            "races.`year`",
            "races.`circuitid`",
            "circuits.`location`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "MAX"
        ],
        "conditions": [
            "most laps in F1 races",
            "name of the race",
            "year of the race",
            "circuit location"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "races.`circuitid`",
            "circuits.`country`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "European Grand Prix races",
            "races hosted in Germany"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`lat`",
            "circuits.`lng`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "location coordinates of Silverstone Circuit"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`name`",
            "circuits.`lat`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "location of Silverstone Circuit",
            "location of Hockenheimring",
            "location of Hungaroring",
            "latitude comparison"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`circuitref`",
            "circuits.`name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reference name of Marina Bay Street Circuit"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`country`",
            "circuits.`alt`"
        ],
        "sql_keywords": [
            "MAX",
            "SELECT",
            "WHERE"
        ],
        "conditions": [
            "circuit with the highest altitude"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`code`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "drivers without a code"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`dob`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "oldest driver"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "nationality is Italian",
            "occupation is driver"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`url`"
        ],
        "sql_keywords": [
            "fuzzy matching",
            "LIKE"
        ],
        "conditions": [
            "want to know more about Anthony Davidson"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverref`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`name`",
            "races.`year`",
            "races.`circuitid`",
            "circuits.`circuitid`",
            "circuits.`name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`year`",
            "circuits.`name`",
            "races.`circuitid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Silverstone Circuit used in a Formula 1 race"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`raceid`",
            "races.`date`",
            "races.`year`",
            "races.`url`",
            "races.`name`",
            "races.`circuitid`",
            "races.`round`",
            "races.`time`",
            "circuits.`circuitid`",
            "circuits.`name`",
            "circuits.`location`",
            "circuits.`country`",
            "circuits.`url`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Formula_1 races",
            "used the Silverstone Circuit"
        ]
    },
    {
        "tables": [
            "races",
            "circuits",
            "seasons"
        ],
        "columns": [
            "races.`time`",
            "races.`year`",
            "races.`circuitid`",
            "circuits.`name`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "2010's Formula 1 race",
            "Abu Dhabi Circuit"
        ]
    },
    {
        "tables": [
            "circuits",
            "races"
        ],
        "columns": [
            "circuits.`country`",
            "races.`raceid`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Formula_1 races",
            "circuits in Italy"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`date`",
            "circuits.`name`",
            "circuits.`circuitid`",
            "races.`circuitid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Formula_1 race",
            "Barcelona-Catalunya circuit"
        ]
    },
    {
        "tables": [
            "circuits",
            "races"
        ],
        "columns": [
            "circuits.`url`",
            "races.`name`",
            "races.`year`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "website that shows information about the circuits",
            "Spanish Grand Prix",
            "year 2009"
        ]
    },
    {
        "tables": [
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "results.`fastestlaptime`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "fastest lap time",
            "race",
            "Lewis Hamilton"
        ]
    },
    {
        "tables": [
            "results",
            "drivers"
        ],
        "columns": [
            "results.`fastestlapspeed`",
            "results.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "MAX"
        ],
        "conditions": [
            "fastest lap speed",
            "Formula 1 race",
            "driver's forename and surname"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`name`",
            "races.`year`",
            "results.`raceid`",
            "results.`position`",
            "results.`driverid`",
            "drivers.`driverref`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "Canadian Grand Prix",
            "year 2007",
            "driver ranked first"
        ]
    },
    {
        "tables": [
            "races",
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "results.`raceid`",
            "results.`driverid`",
            "races.`raceid`",
            "races.`name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Formula_1 races",
            "Lewis Hamilton participated"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`rank`",
            "races.`raceid`",
            "races.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "Formula_1 race",
            "Lewis Hamilton",
            "rank the highest"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`fastestlapspeed`",
            "races.`year`",
            "races.`name`",
            "races.`raceid`",
            "results.`raceid`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "fastest lap speed",
            "all drivers",
            "2009 Spanish Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "races.`year`",
            "races.`raceid`",
            "results.`driverid`",
            "results.`raceid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "Lewis Hamilton",
            "participate in a Formula 1 race"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "races.`name`",
            "races.`year`",
            "results.`positionorder`",
            "results.`raceid`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "Lewis Hamilton",
            "final rank",
            "2008 Chinese Grand Prix"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`grid`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "driver in the no. 4 grid formation",
            "starting the race",
            "1989 Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "drivers"
        ],
        "columns": [
            "results.`time`",
            "races.`name`",
            "races.`year`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "2008 Australian Grand Prix",
            "drivers finished the race"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`surname`",
            "races.`raceid`",
            "races.`name`",
            "races.`year`",
            "results.`driverid`",
            "results.`raceid`",
            "results.`fastestlaptime`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "fastest lap",
            "Lewis Hamilton",
            "2008 Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`time`",
            "results.`position`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "driver ranked second",
            "2008 Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`position`",
            "drivers.`driverid`",
            "drivers.`surname`",
            "drivers.`forename`",
            "drivers.`url`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "champion of 2008's Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`nationality`",
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "drivers from the UN",
            "participated in the 2008 Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`driverid`",
            "results.`driverid`",
            "results.`time`",
            "races.`raceid`",
            "races.`year`",
            "races.`name`"
        ],
        "sql_keywords": [
            "=",
            "INTERSECT"
        ],
        "conditions": [
            "drivers finished the race in the 2008 Chinese Grand Prix",
            "drivers participated in Formula 1 races"
        ]
    },
    {
        "tables": [
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "results.`points`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Lewis Hamilton",
            "total points",
            "all Formula 1 races he participated"
        ]
    },
    {
        "tables": [
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "results.`driverid`",
            "results.`fastestlaptime`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "average fastest lap time",
            "Lewis Hamilton",
            "all Formula 1 races"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`raceid`",
            "results.`time`",
            "races.`year`",
            "races.`name`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCHING"
        ],
        "conditions": [
            "drivers completing all the laps",
            "2008 Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "races",
            "results"
        ],
        "columns": [
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`",
            "results.`position`",
            "results.`time`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "champion's speed",
            "driver who finished last in the 2008 Australian Grand Prix",
            "percentage difference in speed"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`country`",
            "circuits.`location`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "location: Adelaide, Australia"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`lat`",
            "circuits.`lng`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "location coordinates of the US circuits"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`dob`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "British drivers",
            "born after 1980"
        ]
    },
    {
        "tables": [
            "constructors",
            "results",
            "constructorstandings",
            "constructorresults"
        ],
        "columns": [
            "constructors.`constructorid`",
            "constructors.`nationality`",
            "results.`points`",
            "results.`constructorid`",
            "constructorstandings.`points`",
            "constructorstandings.`constructorid`",
            "constructorresults.`points`",
            "constructorresults.`constructorid`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "JOIN"
        ],
        "conditions": [
            "British constructors"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorresults"
        ],
        "columns": [
            "constructors.`constructorid`",
            "constructors.`name`",
            "constructorresults.`points`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "constructor with the highest point"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorresults",
            "races"
        ],
        "columns": [
            "constructors.`name`",
            "constructorresults.`points`",
            "constructorresults.`raceid`",
            "constructorresults.`constructorid`",
            "constructors.`constructorid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "constructor names",
            "0 points",
            "race 291"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorresults",
            "races"
        ],
        "columns": [
            "constructors.`constructorid`",
            "constructors.`nationality`",
            "constructorresults.`points`",
            "constructorresults.`raceid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Japanese constructors",
            "0 points",
            "2 races"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorstandings"
        ],
        "columns": [
            "constructors.`constructorid`",
            "constructors.`name`",
            "constructorstandings.`position`",
            "constructorstandings.`constructorid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "constructors ranked 1"
        ]
    },
    {
        "tables": [
            "constructors",
            "results"
        ],
        "columns": [
            "constructors.`constructorid`",
            "constructors.`nationality`",
            "results.`constructorid`",
            "results.`laps`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "French constructors",
            "lap number over 50"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "drivers"
        ],
        "columns": [
            "results.`driverid`",
            "results.`time`",
            "races.`year`",
            "races.`raceid`",
            "drivers.`driverid`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "Japanese drivers",
            "race completion percentage",
            "years 2007 to 2009"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "seasons"
        ],
        "columns": [
            "results.`time`",
            "races.`year`",
            "races.`raceid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average time in seconds of champion",
            "for each year",
            "before year 1975"
        ]
    },
    {
        "tables": [
            "drivers",
            "driverstandings"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`dob`",
            "driverstandings.`position`",
            "driverstandings.`driverid`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "drivers born after 1975",
            "ranked 2"
        ]
    },
    {
        "tables": [
            "results",
            "drivers",
            "status"
        ],
        "columns": [
            "results.`driverid`",
            "results.`time`",
            "drivers.`driverid`",
            "drivers.`nationality`",
            "results.`statusid`",
            "status.`statusid`",
            "status.`status`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Italian drivers",
            "haven't finished the race"
        ]
    },
    {
        "tables": [
            "results",
            "drivers"
        ],
        "columns": [
            "results.`fastestlaptime`",
            "results.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "fastest lap time"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "seasons"
        ],
        "columns": [
            "results.`fastestlap`",
            "results.`position`",
            "races.`year`",
            "races.`raceid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "fastest lap number",
            "champion in 2009"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`fastestlapspeed`",
            "races.`year`",
            "races.`name`",
            "races.`raceid`",
            "results.`raceid`"
        ],
        "sql_keywords": [
            "=",
            "AVG"
        ],
        "conditions": [
            "fastest lap speed",
            "2009 Spanish Grand Prix race"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`milliseconds`",
            "results.`raceid`",
            "races.`raceid`",
            "races.`name`",
            "races.`year`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "shortest actual finishing time",
            "race name",
            "race year"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "races"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`dob`",
            "results.`driverid`",
            "results.`laps`",
            "results.`raceid`",
            "races.`raceid`",
            "races.`year`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "AND",
            "BETWEEN"
        ],
        "conditions": [
            "year between 2000 and 2005",
            "drivers born before 1985",
            "lap numbers over 50"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers"
        ],
        "columns": [
            "laptimes.`milliseconds`",
            "laptimes.`driverid`",
            "drivers.`driverid`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "French drivers",
            "laptime less than 02:00.00"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`code`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "nationality in America"
        ]
    },
    {
        "tables": [
            "races"
        ],
        "columns": [
            "races.`raceid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "races held in 2009"
        ]
    },
    {
        "tables": [
            "results"
        ],
        "columns": [
            "results.`driverid`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "race ID number 18"
        ]
    },
    {
        "tables": [
            "drivers",
            "driverstandings"
        ],
        "columns": [
            "drivers.`dob`",
            "drivers.`code`",
            "drivers.`nationality`",
            "driverstandings.`driverid`",
            "driverstandings.`position`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "COUNT",
            "EXACT MATCH"
        ],
        "conditions": [
            "top 3 youngest drivers",
            "Netherlandic drivers among top 3 youngest drivers"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`driverref`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reference name of Robert Kubica"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`nationality`",
            "drivers.`dob`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "British drivers",
            "born in 1980"
        ]
    },
    {
        "tables": [
            "drivers",
            "laptimes"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`dob`",
            "drivers.`nationality`",
            "laptimes.`time`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "German drivers",
            "born from 1980-1990",
            "top 3 with earliest lap time"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`driverref`",
            "drivers.`dob`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "oldest",
            "German driver"
        ]
    },
    {
        "tables": [
            "drivers",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`code`",
            "drivers.`dob`",
            "results.`fastestlaptime`",
            "results.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INNER JOIN"
        ],
        "conditions": [
            "drivers born in 1971",
            "fastest lap time on the race"
        ]
    },
    {
        "tables": [
            "drivers",
            "laptimes"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`dob`",
            "drivers.`nationality`",
            "laptimes.`driverid`",
            "laptimes.`time`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "Spanish drivers",
            "born before 1982",
            "top 10",
            "latest lap time"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`fastestlaptime`",
            "races.`year`",
            "results.`raceid`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "fastest lap time"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races"
        ],
        "columns": [
            "laptimes.`time`",
            "races.`year`",
            "laptimes.`raceid`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "lowest speed of lap time"
        ]
    },
    {
        "tables": [
            "laptimes"
        ],
        "columns": [
            "laptimes.`driverid`",
            "laptimes.`time`",
            "laptimes.`lap`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "ASC",
            "MIN",
            "="
        ],
        "conditions": [
            "driver's ID",
            "top five drivers",
            "fastest time",
            "first lap of the race",
            "descending order"
        ]
    },
    {
        "tables": [
            "results",
            "status"
        ],
        "columns": [
            "results.`raceid`",
            "results.`statusid`",
            "results.`time`",
            "status.`statusid`",
            "status.`status`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "race number between 50 and 100",
            "finishers have been disqualified"
        ]
    },
    {
        "tables": [
            "circuits",
            "races"
        ],
        "columns": [
            "circuits.`country`",
            "circuits.`location`",
            "circuits.`lat`",
            "circuits.`lng`",
            "races.`circuitid`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "circuits held in Austria"
        ]
    },
    {
        "tables": [
            "results"
        ],
        "columns": [
            "results.`raceid`",
            "results.`time`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "COUNT",
            "IS NOT NULL"
        ],
        "conditions": [
            "race number with the most finishers"
        ]
    },
    {
        "tables": [
            "qualifying",
            "drivers"
        ],
        "columns": [
            "qualifying.`raceid`",
            "qualifying.`q2`",
            "qualifying.`driverid`",
            "drivers.`driverref`",
            "drivers.`nationality`",
            "drivers.`dob`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "drivers who passed the second qualifying lap",
            "race number 23",
            "reference name of drivers",
            "nationality of drivers",
            "birthday of drivers"
        ]
    },
    {
        "tables": [
            "drivers",
            "qualifying",
            "races"
        ],
        "columns": [
            "drivers.`dob`",
            "drivers.`driverid`",
            "qualifying.`raceid`",
            "qualifying.`driverid`",
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "races.`date`",
            "races.`time`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "youngest driver",
            "first qualifying race"
        ]
    },
    {
        "tables": [
            "drivers",
            "results",
            "status"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`nationality`",
            "results.`statusid`",
            "results.`driverid`",
            "status.`statusid`",
            "status.`status`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "American drivers",
            "puncture status"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorresults",
            "constructorstandings"
        ],
        "columns": [
            "constructors.`constructorid`",
            "constructors.`nationality`",
            "constructors.`url`",
            "constructorresults.`constructorid`",
            "constructorresults.`points`",
            "constructorstandings.`constructorid`",
            "constructorstandings.`points`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT",
            "JOIN"
        ],
        "conditions": [
            "Italian constructor",
            "highest point to date"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorstandings"
        ],
        "columns": [
            "constructors.`url`",
            "constructorstandings.`wins`",
            "constructorstandings.`constructorid`",
            "constructors.`constructorid`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "constructor with the most total wins"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "drivers"
        ],
        "columns": [
            "laptimes.`time`",
            "laptimes.`lap`",
            "laptimes.`driverid`",
            "races.`name`",
            "races.`raceid`",
            "drivers.`driverid`",
            "drivers.`surname`",
            "drivers.`forename`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "drivers who participated in the French Grand Prix",
            "slowest time in the 3rd lap"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races"
        ],
        "columns": [
            "laptimes.`lap`",
            "laptimes.`milliseconds`",
            "laptimes.`raceid`",
            "races.`raceid`",
            "races.`name`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "fastest 1st lap time",
            "time in milliseconds"
        ]
    },
    {
        "tables": [
            "results",
            "races",
            "drivers"
        ],
        "columns": [
            "results.`fastestlaptime`",
            "results.`rank`",
            "races.`name`",
            "races.`year`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "AVG"
        ],
        "conditions": [
            "average fastest lap time",
            "top 10 drivers",
            "2006 United States Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "pitstops"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`dob`",
            "drivers.`nationality`",
            "pitstops.`driverid`",
            "pitstops.`duration`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "German drivers",
            "shortest average pit stop duration",
            "born between 1980-1985"
        ]
    },
    {
        "tables": [
            "races",
            "results",
            "drivers"
        ],
        "columns": [
            "races.`raceid`",
            "races.`year`",
            "races.`name`",
            "results.`raceid`",
            "results.`driverid`",
            "results.`position`",
            "results.`time`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "champion of the Canadian Grand Prix in 2008",
            "finish time of the champion"
        ]
    },
    {
        "tables": [
            "constructors",
            "results",
            "races"
        ],
        "columns": [
            "constructors.`constructorref`",
            "constructors.`url`",
            "results.`raceid`",
            "results.`constructorid`",
            "results.`position`",
            "races.`raceid`",
            "races.`year`",
            "races.`name`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "champion of the 2009 Singapore Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`dob`",
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "nationality is Austrian",
            "date of birth between 1981 and 1991"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`url`",
            "drivers.`dob`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "nationality is German",
            "profession is driver",
            "date of birth between 1971 and 1985",
            "order by date of birth descending"
        ]
    },
    {
        "tables": [
            "circuits"
        ],
        "columns": [
            "circuits.`location`",
            "circuits.`country`",
            "circuits.`lat`",
            "circuits.`lng`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "location of Hungaroring circuit",
            "country of Hungaroring circuit",
            "coordinates of Hungaroring circuit"
        ]
    },
    {
        "tables": [
            "constructors",
            "constructorresults",
            "races",
            "seasons"
        ],
        "columns": [
            "constructors.`name`",
            "constructors.`nationality`",
            "constructorresults.`points`",
            "constructorresults.`constructorid`",
            "constructorresults.`raceid`",
            "races.`name`",
            "races.`year`",
            "races.`raceid`",
            "seasons.`year`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "Monaco Grand Prix",
            "between 1980 and 2010"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "races.`raceid`",
            "races.`name`",
            "results.`points`",
            "results.`driverid`",
            "results.`raceid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Lewis Hamilton",
            "Turkish Grand Prix"
        ]
    },
    {
        "tables": [
            "races"
        ],
        "columns": [
            "races.`date`",
            "races.`year`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "annual average number of races",
            "first 10 years of the 21st century"
        ]
    },
    {
        "tables": [
            "drivers"
        ],
        "columns": [
            "drivers.`nationality`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "COUNT",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "driverstandings",
            "drivers"
        ],
        "columns": [
            "driverstandings.`points`",
            "driverstandings.`wins`",
            "driverstandings.`position`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "driver ranked 91st",
            "number of points acquired",
            "number of victories"
        ]
    },
    {
        "tables": [
            "results",
            "races"
        ],
        "columns": [
            "results.`fastestlaptime`",
            "races.`name`",
            "results.`raceid`",
            "races.`raceid`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "fastest lap time",
            "fastest lap speed by a racer"
        ]
    },
    {
        "tables": [
            "races",
            "circuits"
        ],
        "columns": [
            "races.`date`",
            "races.`circuitid`",
            "circuits.`location`",
            "circuits.`country`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "most recent race",
            "full location of racetrack"
        ]
    },
    {
        "tables": [
            "qualifying",
            "races",
            "circuits",
            "drivers"
        ],
        "columns": [
            "qualifying.`q3`",
            "qualifying.`driverid`",
            "races.`year`",
            "races.`circuitid`",
            "circuits.`name`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "racer ranked 1st",
            "3rd qualifying race",
            "held in Marina Bay Street Circuit",
            "year 2008"
        ]
    },
    {
        "tables": [
            "drivers",
            "races",
            "results"
        ],
        "columns": [
            "drivers.`dob`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`nationality`",
            "races.`name`",
            "races.`raceid`",
            "results.`raceid`",
            "results.`driverid`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "=",
            "MIN"
        ],
        "conditions": [
            "youngest racer",
            "full name",
            "nationality",
            "name of the race first joined"
        ]
    },
    {
        "tables": [
            "results",
            "status",
            "races",
            "drivers"
        ],
        "columns": [
            "results.`statusid`",
            "results.`driverid`",
            "results.`raceid`",
            "status.`statusid`",
            "status.`status`",
            "races.`raceid`",
            "races.`name`",
            "drivers.`driverid`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "driver with the highest number of accidents",
            "Canadian Grand Prix"
        ]
    },
    {
        "tables": [
            "drivers",
            "driverstandings"
        ],
        "columns": [
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`dob`",
            "driverstandings.`wins`",
            "driverstandings.`driverid`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "oldest racer",
            "number of wins",
            "full name of the racer"
        ]
    },
    {
        "tables": [
            "pitstops"
        ],
        "columns": [
            "pitstops.`duration`"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "longest time",
            "driver",
            "pit stop"
        ]
    },
    {
        "tables": [
            "laptimes"
        ],
        "columns": [
            "laptimes.`time`",
            "laptimes.`milliseconds`"
        ],
        "sql_keywords": [
            "MIN"
        ],
        "conditions": [
            "lap records set on various circuits"
        ]
    },
    {
        "tables": [
            "drivers",
            "pitstops"
        ],
        "columns": [
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`",
            "pitstops.`driverid`",
            "pitstops.`duration`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Lewis Hamilton",
            "longest time spent at a pit stop"
        ]
    },
    {
        "tables": [
            "pitstops",
            "drivers",
            "races"
        ],
        "columns": [
            "pitstops.`lap`",
            "drivers.`forename`",
            "drivers.`surname`",
            "races.`name`",
            "races.`year`",
            "pitstops.`driverid`",
            "pitstops.`raceid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Lewis Hamilton",
            "pit stop",
            "2011 Australian Grand Prix"
        ]
    },
    {
        "tables": [
            "pitstops",
            "drivers",
            "races"
        ],
        "columns": [
            "pitstops.`duration`",
            "drivers.`driverid`",
            "drivers.`surname`",
            "drivers.`forename`",
            "races.`raceid`",
            "races.`name`",
            "races.`year`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "2011 Australian Grand Prix",
            "time each driver spent at the pit stop"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers"
        ],
        "columns": [
            "laptimes.`time`",
            "drivers.`forename`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "laptimes.`driverid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "lap record",
            "set by Lewis Hamilton",
            "in a Formula 1 race"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers"
        ],
        "columns": [
            "laptimes.`time`",
            "laptimes.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "top 20 driver",
            "shortest lap time ever recorded",
            "Formula 1 race"
        ]
    },
    {
        "tables": [
            "laptimes",
            "drivers",
            "races",
            "circuits"
        ],
        "columns": [
            "laptimes.`time`",
            "laptimes.`driverid`",
            "laptimes.`raceid`",
            "laptimes.`position`",
            "drivers.`surname`",
            "drivers.`driverid`",
            "races.`raceid`",
            "races.`circuitid`",
            "circuits.`circuitid`",
            "circuits.`position`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": [
            "Lewis Hamilton's fastest lap",
            "Formula 1 race"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "circuits"
        ],
        "columns": [
            "laptimes.`time`",
            "races.`name`",
            "races.`circuitid`",
            "circuits.`name`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "laptimes",
            "races",
            "circuits"
        ],
        "columns": [
            "laptimes.`time`",
            "races.`raceid`",
            "races.`circuitid`",
            "circuits.`country`",
            "circuits.`circuitid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "lap records",
            "circuits in Italy"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "circuits"
        ],
        "columns": [
            "laptimes.`time`",
            "races.`raceid`",
            "races.`name`",
            "circuits.`name`",
            "circuits.`circuitref`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Formula_1 race",
            "lap record",
            "Austrian Grand Prix Circuit"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "circuits",
            "pitstops"
        ],
        "columns": [
            "laptimes.`time`",
            "laptimes.`driverid`",
            "laptimes.`raceid`",
            "races.`raceid`",
            "races.`name`",
            "races.`circuitid`",
            "circuits.`name`",
            "circuits.`circuitid`",
            "pitstops.`driverid`",
            "pitstops.`raceid`",
            "pitstops.`duration`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "driver set the lap record for the Austrian Grand Prix Circuit",
            "same race"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "circuits"
        ],
        "columns": [
            "laptimes.`time`",
            "laptimes.`raceid`",
            "races.`raceid`",
            "races.`circuitid`",
            "circuits.`circuitid`",
            "circuits.`lat`",
            "circuits.`lng`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "lap record is 1:29.488"
        ]
    },
    {
        "tables": [
            "pitstops",
            "drivers"
        ],
        "columns": [
            "pitstops.`milliseconds`",
            "pitstops.`driverid`",
            "drivers.`driverid`",
            "drivers.`forename`",
            "drivers.`surname`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average time in milliseconds",
            "Lewis Hamilton",
            "pit stop",
            "Formula 1 races"
        ]
    },
    {
        "tables": [
            "laptimes",
            "races",
            "circuits"
        ],
        "columns": [
            "laptimes.`milliseconds`",
            "laptimes.`raceid`",
            "races.`raceid`",
            "races.`circuitid`",
            "circuits.`circuitid`",
            "circuits.`country`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lap records set on circuits in Italy"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`",
            "player.`player_name`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "highest overall rating",
            "player's api id"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`height`",
            "player.`player_name`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "tallest player",
            "indicate his name"
        ]
    },
    {
        "tables": [
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`potential`",
            "player_attributes.`preferred_foot`"
        ],
        "sql_keywords": [
            "MIN",
            "="
        ],
        "conditions": [
            "preferred foot when attacking",
            "player with the lowest potential"
        ]
    },
    {
        "tables": [
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`overall_rating`",
            "player_attributes.`defensive_work_rate`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "overall rating between 60 to 65",
            "players involved in all attack moves",
            "players not involved in defending"
        ]
    },
    {
        "tables": [
            "player_attributes",
            "player"
        ],
        "columns": [
            "player_attributes.`crossing`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`",
            "player.`player_name`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "top 5 players",
            "perform better in crossing actions"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`home_team_goal`",
            "match.`away_team_goal`",
            "match.`season`",
            "match.`league_id`",
            "league.`name`"
        ],
        "sql_keywords": [
            "SUM",
            "MAX",
            "GROUP BY",
            "JOIN",
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "league",
            "most goals",
            "2016 season"
        ]
    },
    {
        "tables": [
            "match",
            "team"
        ],
        "columns": [
            "match.`home_team_goal`",
            "match.`away_team_goal`",
            "match.`season`",
            "match.`home_team_api_id`",
            "team.`team_api_id`",
            "team.`team_long_name`"
        ],
        "sql_keywords": [
            "=",
            "MIN"
        ],
        "conditions": [
            "home team",
            "lost the fewest matches",
            "2016 season"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`penalties`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "="
        ],
        "conditions": [
            "top 10 players",
            "highest number of penalties"
        ]
    },
    {
        "tables": [
            "league",
            "match",
            "team"
        ],
        "columns": [
            "league.`name`",
            "match.`away_team_api_id`",
            "match.`away_team_goal`",
            "match.`home_team_goal`",
            "match.`season`",
            "team.`team_api_id`",
            "team.`team_long_name`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "COUNT",
            "SUBTRACT"
        ],
        "conditions": [
            "Scotland Premier League",
            "away team",
            "won the most",
            "2010 season"
        ]
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`buildupplayspeed`",
            "team_attributes.`team_api_id`",
            "team.`team_long_name`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "MAX"
        ],
        "conditions": [
            "top 4 teams with the highest Build Up Play Speed"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`home_team_goal`",
            "match.`away_team_goal`",
            "match.`season`",
            "match.`league_id`",
            "league.`name`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "SUM",
            "JOIN"
        ],
        "conditions": [
            "league with the most matches ending as draw",
            "2016 season"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`birthday`",
            "player_attributes.`sprint_speed`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "BETWEEN"
        ],
        "conditions": [
            "player's age",
            "sprint speed no less than 97",
            "between 2013 to 2015"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`league_id`",
            "league.`name`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "MAX",
            "COUNT"
        ],
        "conditions": [
            "league with the highest matches of all time",
            "number of matches played in the said league"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`height`",
            "player.`id`",
            "player.`birthday`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "born between 1990 and 1995"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`overall_rating`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "SUBSTR"
        ],
        "conditions": [
            "players' API ID",
            "highest above average overall ratings",
            "year 2010"
        ]
    },
    {
        "tables": [
            "team_attributes"
        ],
        "columns": [
            "team_attributes.`team_fifa_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "team_fifa_api_id",
            "build-up play speed more than 50",
            "build-up play speed less than 60"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`buildupplaypassing`",
            "team_attributes.`date`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "WHERE"
        ],
        "conditions": [
            "long name of teams",
            "above-average build-up play passing",
            "year 2012"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`preferred_foot`",
            "player.`birthday`",
            "player_attributes.`player_fifa_api_id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "players who prefer left foot",
            "born between 1987 and 1992"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`home_team_goal`",
            "match.`away_team_goal`",
            "match.`league_id`",
            "league.`name`"
        ],
        "sql_keywords": [
            "SUM",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "top 5 leagues",
            "ascending order",
            "number of goals made",
            "all seasons combined"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_fifa_api_id`",
            "player.`player_name`",
            "player_attributes.`long_shots`",
            "player_attributes.`player_fifa_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "long-shot done by Ahmed Samir Farag"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`height`",
            "player_attributes.`heading_accuracy`",
            "player_attributes.`player_fifa_api_id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "players' heights above 180",
            "descending order of average heading accuracy"
        ]
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`buildupplaydribblingclass`",
            "team_attributes.`date`",
            "team_attributes.`chancecreationpassing`",
            "team_attributes.`team_api_id`",
            "team.`team_long_name`",
            "team.`team_api_id`"
        ],
        "sql_keywords": [
            "=",
            "<",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "teams with normal build-up play dribbling class in 2014",
            "teams with less than average chance creation passing"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "league.`name`",
            "match.`home_team_goal`",
            "match.`away_team_goal`",
            "match.`season`",
            "match.`league_id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "average goals by the home team is higher than the away team",
            "season is 2009/2010"
        ]
    },
    {
        "tables": [
            "team"
        ],
        "columns": [
            "team.`team_long_name`",
            "team.`team_short_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`birthday`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "birthyear of 1970",
            "birthmonth of October"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_api_id`",
            "player.`player_name`",
            "player_attributes.`attacking_work_rate`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "attacking work rate of the football player Franco Zennaro"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`buildupplaypositioningclass`",
            "team.`team_api_id`",
            "team_attributes.`team_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "ADO Den Haag team",
            "freedom of movement",
            "1st two thirds of the pitch"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`heading_accuracy`",
            "player_attributes.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "football player Francois Affolter",
            "header's finishing rate",
            "date 18/09/2014"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "football player Gabriel Tamas",
            "year 2011"
        ]
    },
    {
        "tables": [
            "match",
            "league",
            "country"
        ],
        "columns": [
            "match.`season`",
            "match.`league_id`",
            "league.`name`",
            "league.`id`",
            "country.`id`",
            "league.`country_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "matches in the 2015/2016 season",
            "held in Scotland Premier League"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`birthday`",
            "player.`player_api_id`",
            "player_attributes.`preferred_foot`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "="
        ],
        "conditions": [
            "preferred foot when attacking",
            "youngest football player"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`potential`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "football player",
            "highest potential score"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`weight`",
            "player_attributes.`preferred_foot`",
            "player.`player_api_id`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "weight under 130",
            "preferred foot in attacking is left"
        ]
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`chancecreationpassingclass`",
            "team.`team_short_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "chance creation passing class of Risky"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`defensive_work_rate`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "football player named David Wilson"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`birthday`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "football player with the highest overall rating"
        ]
    },
    {
        "tables": [
            "league",
            "country"
        ],
        "columns": [
            "league.`name`",
            "country.`name`",
            "league.`country_id`",
            "country.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "country is Netherlands"
        ]
    },
    {
        "tables": [
            "match",
            "country"
        ],
        "columns": [
            "match.`home_team_goal`",
            "match.`season`",
            "country.`name`",
            "country.`id`",
            "match.`country_id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "average home team goal",
            "2010/2011 season",
            "country of Poland"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`height`",
            "player.`player_api_id`",
            "player_attributes.`player_api_id`",
            "player_attributes.`finishing`"
        ],
        "sql_keywords": [
            "MAX",
            "MIN",
            "AVG",
            "=",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "highest football player",
            "shortest football player",
            "average finishing rate"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`height`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "player height higher than 180"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`birthday`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "players born after 1990"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`weight`"
        ],
        "sql_keywords": [
            "LIKE",
            ">"
        ],
        "conditions": [
            "first name is Adam",
            "weight more than 170"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`overall_rating`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "overall rating over 80",
            "years from 2008 to 2010"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`potential`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Aaron Doran's potential score"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`preferred_foot`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "preferred foot is left"
        ]
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`buildupplayspeedclass`",
            "team.`team_long_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "speed class is fast"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_short_name`",
            "team_attributes.`buildupplaypassingclass`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`buildupplaypassing`",
            "team_attributes.`team_api_id`",
            "team.`team_short_name`",
            "team.`team_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "build up play passing more than 70"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`height`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`",
            "player_attributes.`date`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "AND"
        ],
        "conditions": [
            "year between 2010 and 2015",
            "player height higher than 170"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`height`"
        ],
        "sql_keywords": [
            "MIN"
        ],
        "conditions": [
            "shortest height"
        ]
    },
    {
        "tables": [
            "league",
            "country"
        ],
        "columns": [
            "league.`name`",
            "league.`country_id`",
            "country.`id`",
            "country.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "league name is Italy Serie A"
        ]
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`buildupplayspeed`",
            "team_attributes.`buildupplaydribbling`",
            "team_attributes.`buildupplaypassing`",
            "team.`team_short_name`",
            "team_attributes.`team_api_id`",
            "team.`team_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "build up play speed of 31",
            "build up plan dribbling of 53",
            "build up play passing of 32"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average overall rating",
            "football player Aaron Doran"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "league.`name`",
            "match.`date`",
            "match.`league_id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "league: Germany 1. Bundesliga",
            "time period: August to October 2008"
        ]
    },
    {
        "tables": [
            "team",
            "match"
        ],
        "columns": [
            "team.`team_short_name`",
            "match.`home_team_goal`",
            "match.`home_team_api_id`",
            "team.`team_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "home team goal of 10"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`balance`",
            "player_attributes.`potential`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "highest balance score",
            "potential score of 61"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`ball_control`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "average ball control score of Abdou Diallo",
            "average ball control score of Aaron Appindangoye"
        ]
    },
    {
        "tables": [
            "team"
        ],
        "columns": [
            "team.`team_long_name`",
            "team.`team_short_name`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`birthday`",
            "player.`player_name`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "age of Aaron Lennon",
            "age of Abdelaziz Barrada"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`height`",
            "player.`player_name`"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "tallest player"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`preferred_foot`",
            "player_attributes.`attacking_work_rate`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "preferred foot is left foot",
            "remain in position when the team attacked"
        ]
    },
    {
        "tables": [
            "league",
            "country"
        ],
        "columns": [
            "league.`name`",
            "league.`country_id`",
            "country.`id`",
            "country.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "country of the Belgium Jupiler League"
        ]
    },
    {
        "tables": [
            "league",
            "country"
        ],
        "columns": [
            "league.`name`",
            "country.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "leagues located in Germany"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`overall_rating`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`birthday`",
            "player.`player_api_id`",
            "player_attributes.`defensive_work_rate`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "players born before the year 1986",
            "remain in position and defense while the team attacked"
        ]
    },
    {
        "tables": [
            "player_attributes",
            "player"
        ],
        "columns": [
            "player_attributes.`crossing`",
            "player_attributes.`player_api_id`",
            "player.`player_name`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "MAX"
        ],
        "conditions": [
            "performance in crossing actions",
            "players: Alexis, Ariel Borysiuk, Arouna Kone"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`heading_accuracy`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "heading accuracy of Ariel Borysiuk"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`height`",
            "player.`player_api_id`",
            "player_attributes.`volleys`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "height over 180",
            "volley score over 70"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`volleys`",
            "player_attributes.`dribbling`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "volley score over 70",
            "dribbling score over 70"
        ]
    },
    {
        "tables": [
            "match",
            "country"
        ],
        "columns": [
            "match.`season`",
            "match.`country_id`",
            "country.`name`",
            "country.`id`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "matches in the 2008/2009 season",
            "held in Belgium"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`birthday`",
            "player.`player_api_id`",
            "player_attributes.`long_passing`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "long passing score",
            "oldest player"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`id`",
            "match.`league_id`",
            "match.`date`",
            "league.`name`",
            "league.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "matches held",
            "Belgium Jupiler League",
            "April 2009"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`league_id`",
            "match.`season`",
            "league.`name`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT",
            "="
        ],
        "conditions": [
            "league with the most matches",
            "2008/2009 season"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`birthday`",
            "player_attributes.`overall_rating`",
            "player_attributes.`id`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "players born before the year 1986"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Ariel Borysiuk's overall rating",
            "Paulin Puel's overall rating"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`buildupplayspeed`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average build up play speed of the Heart of Midlothian team"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average overall rating of Pietro Marino"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`crossing`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`chancecreationpassing`",
            "team_attributes.`chancecreationpassingclass`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "Ajax's highest chance creation passing score",
            "classification of Ajax's highest chance creation passing score"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`preferred_foot`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "preferred foot of Abdou Diallo"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`overall_rating`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "highest overall rating",
            "received by Dorlan Pabon"
        ]
    },
    {
        "tables": [
            "match",
            "team",
            "country"
        ],
        "columns": [
            "match.`away_team_goal`",
            "match.`country_id`",
            "match.`away_team_api_id`",
            "team.`team_long_name`",
            "team.`team_api_id`",
            "country.`name`",
            "country.`id`"
        ],
        "sql_keywords": [
            "=",
            "AVG"
        ],
        "conditions": [
            "Parma as the away team",
            "playing in Italy"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`overall_rating`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`",
            "player.`player_name`",
            "player.`birthday`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "players with a 77 points overall rating",
            "date is 2016/6/23"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`",
            "player_attributes.`date`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "overall rating",
            "Aaron Mooy",
            "date: 2016/2/4"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`potential`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "potential for Francesco Parravicini",
            "date: 2010/8/30"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`attacking_work_rate`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "Francesco Migliore",
            "attacking work rate",
            "date: 2015/5/1"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`player_api_id`",
            "player_attributes.`defensive_work_rate`",
            "player_attributes.`date`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "defensive work rate",
            "Kevin Berigaud",
            "date: 2013/2/22"
        ]
    },
    {
        "tables": [
            "player_attributes",
            "player"
        ],
        "columns": [
            "player_attributes.`date`",
            "player_attributes.`crossing`",
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "Kevin Constant",
            "highest crossing score"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`date`",
            "team_attributes.`buildupplayspeedclass`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "team: Willem II",
            "date: 2011/2/22"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_short_name`",
            "team_attributes.`date`",
            "team_attributes.`buildupplaydribblingclass`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "build up play dribbling class",
            "LEI",
            "2015/9/10"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`date`",
            "team_attributes.`buildupplaypassingclass`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "team: FC Lorient",
            "date: 2010/2/22"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team.`team_api_id`",
            "team_attributes.`team_api_id`",
            "team_attributes.`date`",
            "team_attributes.`chancecreationpassingclass`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "team: PEC Zwolle",
            "date: 2013/9/20"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`date`",
            "team_attributes.`chancecreationcrossingclass`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "team: Hull City",
            "date: 2010/2/22"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team_attributes.`date`",
            "team_attributes.`defenceaggressionclass`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "team is Hannover 96",
            "date is 2015/9/10"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "average overall rating for Marko Arnautovic",
            "time period from 2007/2/22 to 2016/4/21"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`overall_rating`",
            "player_attributes.`date`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCH"
        ],
        "conditions": [
            "Landon Donovan's overall rating on 2013/7/12",
            "Jordan Bowery's overall rating on 2013/7/12"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`height`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most tallest players"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_api_id`",
            "player.`weight`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "10 heaviest players"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`birthday`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "age 35 years old and above"
        ]
    },
    {
        "tables": [
            "player",
            "match"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "match.`home_team_goal`",
            "match.`home_player_1`",
            "match.`home_player_2`",
            "match.`home_player_3`",
            "match.`home_player_4`",
            "match.`home_player_5`",
            "match.`home_player_6`",
            "match.`home_player_7`",
            "match.`home_player_8`",
            "match.`home_player_9`",
            "match.`home_player_10`",
            "match.`home_player_11`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "home team goals",
            "scored by Aaron Lennon"
        ]
    },
    {
        "tables": [
            "match",
            "player"
        ],
        "columns": [
            "match.`away_team_goal`",
            "player.`player_name`",
            "match.`away_player_1`",
            "match.`away_player_2`",
            "match.`away_player_3`",
            "match.`away_player_4`",
            "match.`away_player_5`",
            "match.`away_player_6`",
            "match.`away_player_7`",
            "match.`away_player_8`",
            "match.`away_player_9`",
            "match.`away_player_10`",
            "match.`away_player_11`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "away team goal scored by Daan Smith",
            "away team goal scored by Filipe Ferreira"
        ]
    },
    {
        "tables": [
            "player",
            "match"
        ],
        "columns": [
            "player.`birthday`",
            "match.`home_team_goal`",
            "match.`home_player_1`",
            "match.`home_player_2`",
            "match.`home_player_3`",
            "match.`home_player_4`",
            "match.`home_player_5`",
            "match.`home_player_6`",
            "match.`home_player_7`",
            "match.`home_player_8`",
            "match.`home_player_9`",
            "match.`home_player_10`",
            "match.`home_player_11`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "home team goal",
            "players age 30 years old and below"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`overall_rating`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`potential`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "players with the highest potential"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`attacking_work_rate`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "players tend to be attacking",
            "mates were doing attack moves"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`birthday`",
            "player_attributes.`finishing`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "finishing rate of 1",
            "eldest player"
        ]
    },
    {
        "tables": [
            "player",
            "country",
            "league",
            "match"
        ],
        "columns": [
            "player.`player_name`",
            "country.`name`",
            "league.`country_id`",
            "match.`country_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "players from Belgium"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes",
            "match",
            "country"
        ],
        "columns": [
            "player_attributes.`vision`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`",
            "player.`player_name`",
            "match.`country_id`",
            "country.`id`",
            "country.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "vision scores of 90 and above"
        ]
    },
    {
        "tables": [
            "player",
            "match",
            "country"
        ],
        "columns": [
            "player.`weight`",
            "match.`country_id`",
            "country.`id`",
            "country.`name`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "MAX",
            "AVG",
            "JOIN",
            "="
        ],
        "conditions": [
            "country",
            "players",
            "heaviest average weights"
        ]
    },
    {
        "tables": [
            "team_attributes",
            "team"
        ],
        "columns": [
            "team_attributes.`buildupplayspeedclass`",
            "team.`team_long_name`",
            "team_attributes.`team_api_id`",
            "team.`team_api_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "slow speed class team"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_short_name`",
            "team_attributes.`chancecreationpassingclass`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "team played safe",
            "creating chance of passing"
        ]
    },
    {
        "tables": [
            "player",
            "country",
            "league",
            "match"
        ],
        "columns": [
            "player.`height`",
            "country.`name`",
            "league.`country_id`",
            "match.`country_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "players from Italy"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`height`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            ">",
            "ASC"
        ],
        "conditions": [
            "top three football players",
            "over 180 cm tall",
            "in alphabetical order"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.`player_name`",
            "player.`birthday`"
        ],
        "sql_keywords": [
            "LIKE",
            ">"
        ],
        "conditions": [
            "born after the 1990s",
            "first name 'Aaron'"
        ]
    },
    {
        "tables": [
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`jumping`",
            "player_attributes.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "player 6's jumping score",
            "player 23's jumping score"
        ]
    },
    {
        "tables": [
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`player_api_id`",
            "player_attributes.`potential`",
            "player_attributes.`preferred_foot`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "top five football players' IDs",
            "among the lowest potential players",
            "prefer to use the right foot when attacking"
        ]
    },
    {
        "tables": [
            "player_attributes",
            "player"
        ],
        "columns": [
            "player_attributes.`crossing`",
            "player_attributes.`preferred_foot`",
            "player_attributes.`potential`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "AND"
        ],
        "conditions": [
            "highest potential score for crossing",
            "preferred to use left foot while attacking"
        ]
    },
    {
        "tables": [
            "player_attributes"
        ],
        "columns": [
            "player_attributes.`strength`",
            "player_attributes.`stamina`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "strength score more than 80",
            "stamina score more than 80"
        ]
    },
    {
        "tables": [
            "league",
            "country"
        ],
        "columns": [
            "league.`name`",
            "league.`country_id`",
            "country.`id`",
            "country.`name`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Poland Ekstraklasa"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`home_team_goal`",
            "match.`away_team_goal`",
            "match.`date`",
            "match.`league_id`",
            "league.`name`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "date: September 24, 2008",
            "league: Belgian Jupiler League",
            "match between home team and away team"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player.`player_api_id`",
            "player_attributes.`sprint_speed`",
            "player_attributes.`agility`",
            "player_attributes.`acceleration`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Alexis Blin's sprint speed score",
            "Alexis Blin's agility score",
            "Alexis Blin's acceleration score"
        ]
    },
    {
        "tables": [
            "team",
            "team_attributes"
        ],
        "columns": [
            "team.`team_long_name`",
            "team.`team_api_id`",
            "team_attributes.`buildupplayspeedclass`",
            "team_attributes.`team_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "KSV Cercle Brugge team",
            "speed class: slow, balanced, or fast"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`season`",
            "match.`league_id`",
            "league.`name`",
            "league.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "2015–2016 season",
            "Italian Serie A league"
        ]
    },
    {
        "tables": [
            "match",
            "league",
            "country"
        ],
        "columns": [
            "match.`home_team_goal`",
            "league.`name`",
            "league.`country_id`",
            "match.`league_id`",
            "country.`name`",
            "country.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "highest score",
            "home team",
            "Netherlands Eredivisie league"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`weight`",
            "player_attributes.`finishing`",
            "player_attributes.`curve`",
            "player.`player_api_id`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "JOIN"
        ],
        "conditions": [
            "finishing rate of the player",
            "curve score of the player",
            "heaviest weight"
        ]
    },
    {
        "tables": [
            "match",
            "league"
        ],
        "columns": [
            "match.`league_id`",
            "match.`season`",
            "league.`name`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "top 4 leagues",
            "most games",
            "2015-2016 season"
        ]
    },
    {
        "tables": [
            "team",
            "match"
        ],
        "columns": [
            "team.`team_long_name`",
            "match.`away_team_api_id`",
            "match.`away_team_goal`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "away team",
            "scored the most goals"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`player_name`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`",
            "player.`player_api_id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "player with the greatest overall strength"
        ]
    },
    {
        "tables": [
            "player",
            "player_attributes"
        ],
        "columns": [
            "player.`height`",
            "player.`id`",
            "player_attributes.`overall_rating`",
            "player_attributes.`player_api_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "players under 180 cm",
            "overall strength more than 70"
        ]
    },

    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`admission`"
        ],
        "sql_keywords": [
            "=",
            "COUNT",
            "GROUP BY",
            "DIVIDE"
        ],
        "conditions": [
            "in-patient",
            "outpatient",
            "male"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "COUNT"
        ],
        "conditions": [
            "gender is female",
            "birth year after 1930"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`birthday`",
            "patient.`admission`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "=",
            "COUNT",
            "SUM"
        ],
        "conditions": [
            "patient born between Year 1930 to 1940"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`diagnosis`",
            "patient.`admission`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "COUNT",
            "DIVIDE"
        ],
        "conditions": [
            "outpatient followed up treatment",
            "inpatient followed up treatment",
            "'SLE' diagnosed patient"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "laboratory.`date`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patient ID is 30609"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`sex`",
            "patient.`birthday`",
            "patient.`id`",
            "examination.`examination date`",
            "examination.`symptoms`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patient ID '163109'",
            "sex of patient",
            "birthday of patient",
            "date of examination",
            "symptom of patient"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`ldh`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "LDH beyond normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "examination.`rvvt`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "ID of patient",
            "age of patient",
            "positive degree of coagulation"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`id`",
            "patient.`sex`",
            "patient.`diagnosis`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "severe degree of thrombosis"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`t-cho`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            ">="
        ],
        "conditions": [
            "born in 1937",
            "total cholesterol beyond the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`alb`",
            "laboratory.`id`",
            "patient.`id`",
            "patient.`sex`",
            "patient.`diagnosis`"
        ],
        "sql_keywords": [
            "<",
            "JOIN",
            "="
        ],
        "conditions": [
            "albumin level lower than 3.5"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`id`",
            "laboratory.`tp`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "<",
            "JOIN"
        ],
        "conditions": [
            "female patient",
            "total protein not within the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`admission`",
            "patient.`birthday`",
            "examination.`acl igg`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "AVG",
            "JOIN"
        ],
        "conditions": [
            "in-patient",
            "age 50 and above"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`sex`",
            "patient.`description`",
            "patient.`admission`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "female patients",
            "came to the hospital in 1997",
            "immediately followed at the outpatient clinic"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`first date`",
            "patient.`birthday`"
        ],
        "sql_keywords": [
            "MIN",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "age of the youngest patient",
            "initial arrival at the hospital"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`thrombosis`",
            "examination.`examination date`",
            "examination.`id`",
            "patient.`id`",
            "patient.`sex`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "patients with the most serious thrombosis cases",
            "examined in 1997",
            "are women"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`birthday`",
            "laboratory.`tg`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "MAX",
            "MIN",
            "SUBTRACT"
        ],
        "conditions": [
            "youngest patient with a normal triglyceride recorded",
            "oldest patient with a normal triglyceride recorded"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`symptoms`",
            "examination.`diagnosis`",
            "patient.`id`",
            "patient.`birthday`"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "LIMIT",
            "IS NOT NULL"
        ],
        "conditions": [
            "youngest patient",
            "symptoms observed",
            "medical examination",
            "diagnosis"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`date`",
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "year concluded on December 31, 1998",
            "male patients",
            "average tested in the lab each month"
        ]
    },
    {
        "tables": [
            "laboratory",
            "examination",
            "patient"
        ],
        "columns": [
            "laboratory.`date`",
            "laboratory.`id`",
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`birthday`",
            "patient.`first date`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "oldest SJS patient",
            "medical laboratory work completed date",
            "age when initially arrived at the hospital"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`ua`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "male patients",
            "female patients",
            "abnormal uric acid counts"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`first date`",
            "examination.`examination date`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "SUBTRACT",
            "JOIN"
        ],
        "conditions": [
            "patients hadn't undergone a medical examination",
            "at least a year following their initial hospital visit"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "examination.`examination date`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "BETWEEN"
        ],
        "conditions": [
            "underage patients",
            "examined",
            "three-year period from 1990 to 1993"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`t-bil`",
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "gender is male",
            "elevated total bilirubin count"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`examination date`",
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`id`",
            "patient.`diagnosis`",
            "laboratory.`date`",
            "laboratory.`un`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "lab work done between 1/1/1985 and 12/31/1995"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`date`",
            "laboratory.`id`",
            "patient.`id`",
            "patient.`birthday`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "BETWEEN"
        ],
        "conditions": [
            "average age of patients",
            "as of year 1999",
            "examined in the laboratory",
            "October of the year 1991"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "examination.`examination date`",
            "examination.`diagnosis`",
            "laboratory.`hgb`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "patient with the highest hemoglobin count",
            "at the time of the examination"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`ana`",
            "examination.`examination date`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "patient id 3605340",
            "date 1996/12/2"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`t-cho`",
            "laboratory.`date`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "patient id 2927464",
            "date 1995-9-4",
            "total cholesterol status at normal level"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`sex`",
            "patient.`first date`",
            "patient.`diagnosis`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "first AORTITIS diagnosed patient"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`diagnosis`",
            "patient.`description`",
            "examination.`id`",
            "examination.`diagnosis`",
            "examination.`acl igm`",
            "examination.`examination date`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patient diagnosed with SLE on 1994/2/19",
            "anti-Cardiolipin antibody concentration status on 1993/11/12"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`gpt`",
            "laboratory.`date`",
            "patient.`sex`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patient's ALT glutamic pyruvic transaminase status is 9",
            "date is 1992-6-12"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`date`",
            "laboratory.`ua`",
            "patient.`birthday`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "EXACT MATCHING"
        ],
        "conditions": [
            "laboratory test of uric acid level as 8.4",
            "date of test: 1991-10-21"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "patient.`first date`",
            "patient.`diagnosis`",
            "patient.`id`",
            "laboratory.`id`",
            "laboratory.`date`"
        ],
        "sql_keywords": [
            "=",
            "COUNT"
        ],
        "conditions": [
            "patient first came to the hospital on 1991/6/13",
            "diagnosed with SJS",
            "Laboratory tests in 1995"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`examination date`",
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`diagnosis`",
            "patient.`id`",
            "patient.`first date`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patient diagnosed with SLE on 1997/1/27",
            "original diagnosis when first came to the hospital"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "examination.`symptoms`",
            "examination.`examination date`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patient's birthday is 1959/3/1",
            "examination date is 1993/9/27"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`birthday`",
            "laboratory.`date`",
            "laboratory.`t-cho`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "patient born on 1959/2/18",
            "decrease rate of total cholesterol",
            "from November to December",
            "in 1981"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`diagnosis`",
            "examination.`examination date`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "diagnosed with Behcet's",
            "exams between 01/01/197 and 12/31/1997"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`date`",
            "laboratory.`gpt`",
            "laboratory.`alb`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "BETWEEN",
            ">",
            "<",
            "AND"
        ],
        "conditions": [
            "examined between 1987/7/6 and 1996/1/31",
            "GPT level greater than 30",
            "ALB level less than 4"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "patient.`admission`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "gender is female",
            "birth year is 1964",
            "admitted to the hospital"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`thrombosis`",
            "examination.`ana pattern`",
            "examination.`acl igm`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "AVG",
            ">",
            "JOIN"
        ],
        "conditions": [
            "degree of thrombosis level 2",
            "ANA pattern of only S",
            "level of anti-Cardiolipin antibody (IgM) 20% higher than average"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`u-pro`",
            "laboratory.`ua`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "=",
            "AND"
        ],
        "conditions": [
            "proteinuria level within the normal range",
            "uric acid level below the normal range"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`sex`",
            "patient.`first date`",
            "patient.`diagnosis`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "male patients",
            "first presented to the hospital in 1981",
            "diagnosed with BEHCET"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`admission`",
            "laboratory.`date`",
            "laboratory.`t-bil`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "followed up at the outpatient clinic",
            "underwent a laboratory test in October 1991",
            "total blood bilirubin level within the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "examination.`ana pattern`",
            "patient.`sex`",
            "patient.`birthday`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "AND"
        ],
        "conditions": [
            "Exclude all P only ANA Pattern patients",
            "Women",
            "Born between 1980 and 1989"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`id`",
            "patient.`sex`",
            "patient.`diagnosis`",
            "laboratory.`crp`",
            "laboratory.`cre`",
            "laboratory.`ldh`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "diagnosed with PSS",
            "blood level of C-reactive protein 2+",
            "creatinine 1",
            "LDH 123"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`alb`",
            "laboratory.`plt`",
            "patient.`sex`",
            "patient.`diagnosis`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "AVG",
            "=",
            ">"
        ],
        "conditions": [
            "gender is female",
            "PLT greater than 400",
            "diagnosed with SLE"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`symptoms`",
            "examination.`diagnosis`",
            "patient.`diagnosis`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "patients with SLE disease"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`id`",
            "patient.`id`",
            "patient.`description`",
            "examination.`diagnosis`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "patient number 48473",
            "first documented medical information",
            "disease of the patient"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`sex`",
            "patient.`diagnosis`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "gender is female",
            "diagnosis is APS"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`date`",
            "laboratory.`tp`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "underwent testing in 1997",
            "protein levels outside the normal range"
        ]
    },
    {
        "tables": [
            "examination",
            "patient"
        ],
        "columns": [
            "examination.`symptoms`",
            "examination.`diagnosis`",
            "patient.`diagnosis`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "LIKE",
            "SUM",
            "DIVIDE",
            "MULTIPLY"
        ],
        "conditions": [
            "patients with signs of thrombocytopenia",
            "patients diagnosed with SLE"
        ]
    },
    {
        "tables": [
            "patient"
        ],
        "columns": [
            "patient.`birthday`",
            "patient.`diagnosis`",
            "patient.`sex`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "patients born in 1980",
            "diagnosed with RA",
            "are women"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`admission`",
            "patient.`diagnosis`",
            "examination.`examination date`",
            "examination.`diagnosis`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "gender is male",
            "underwent testing between 1995 and 1997",
            "diagnosed with Behcet disease",
            "did not stay in the hospital for treatment"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`wbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "<",
            "JOIN"
        ],
        "conditions": [
            "patients who were female",
            "white blood cells below 3.5"
        ]
    },
    {
        "tables": [
            "patient",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "patient.`first date`",
            "examination.`id`",
            "examination.`examination date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "patient number 821298",
            "arrival at the hospital",
            "first time",
            "evaluation began"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`ua`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "patient number 57266",
            "uric acid within a normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient",
            "examination"
        ],
        "columns": [
            "laboratory.`got`",
            "laboratory.`date`",
            "laboratory.`id`",
            "patient.`id`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            ">="
        ],
        "conditions": [
            "patient ID is 48473",
            "AST glutamic oxaloacetic transaminase (GOT) index is above the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`got`",
            "laboratory.`date`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "AST glutamic oxaloacetic transaminase (GOT) index within normal range",
            "laboratory examination in 1994"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`gpt`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "male patients",
            "history of ALT glutamic pylvic transaminase (GPT) exceed the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "patient.`birthday`",
            "laboratory.`gpt`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "JOIN"
        ],
        "conditions": [
            "ALT glutamic pyruvic transaminase beyond the normal range"
        ]
    },
    {
        "tables": [
            "laboratory"
        ],
        "columns": [
            "laboratory.`ldh`"
        ],
        "sql_keywords": [
            "<",
            "AVG"
        ],
        "conditions": [
            "lactate dehydrogenase (LDH) within the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`ldh`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "lactate dehydrogenase (LDH) between 100-300",
            "index above the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`alp`",
            "patient.`admission`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "alkaliphophatase (ALP) within normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`alp`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "patient born on April 1st, 1982",
            "alkaliphophatase (ALP) within normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`tp`"
        ],
        "sql_keywords": [
            "<",
            "JOIN"
        ],
        "conditions": [
            "total protein (TP) below the lower range of the normal index"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`tp`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "female patient",
            "total protein (TP) beyond the normal index"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`alb`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "<=",
            ">=",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "gender is male",
            "albumin not within range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`alb`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "patient born in 1982",
            "albumin within normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`ua`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "gender is female",
            "uric acid (UA) beyond the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`ua`",
            "laboratory.`date`",
            "patient.`id`",
            "patient.`sex`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "MAX",
            "AVG"
        ],
        "conditions": [
            "patients with normal uric acid"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`un`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "urea nitrogen (UN) within the borderline of passing"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "patient.`diagnosis`",
            "laboratory.`un`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "diagnosed with 'RA'",
            "within the UN normal index"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`cre`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "gender is male",
            "creatinine index out of the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`id`",
            "laboratory.`cre`"
        ],
        "sql_keywords": [
            "=",
            "SUM"
        ],
        "conditions": [
            "male patients with creatinine not within the normal range",
            "female patients with creatinine not within the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`t-bil`",
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "highest total bilirubin level recorded",
            "patient details with ID",
            "patient details with sex",
            "patient details with birthday"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`t-bil`",
            "patient.`id`",
            "patient.`sex`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "DISTINCT",
            ">="
        ],
        "conditions": [
            "group patients by sex",
            "total bilirubin (T-BIL) level not within the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`t-cho`"
        ],
        "sql_keywords": [
            "MIN",
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "oldest patient",
            "highest total cholesterol (T-CHO)"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`id`",
            "laboratory.`t-cho`"
        ],
        "sql_keywords": [
            "=",
            ">="
        ],
        "conditions": [
            "male patient",
            "high cholesterol"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`diagnosis`",
            "laboratory.`tg`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "triglyceride (TG) index greater than 100 of the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`tg`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "triglyceride (TG) level beyond the normal range",
            "age more than 50 years"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`admission`",
            "laboratory.`cpk`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "DISTINCT"
        ],
        "conditions": [
            "outpatient",
            "normal range of creatinine phosphokinase"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`cpk`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "BETWEEN",
            "=",
            "DISTINCT"
        ],
        "conditions": [
            "patient born between 1936-1956",
            "male patients",
            "creatinine phosphokinase beyond the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`glu`",
            "laboratory.`t-cho`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "blood glucose (GLU) not within normal range",
            "total cholesterol (T-CHO) within normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`description`",
            "laboratory.`glu`"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "patient's data first recorded in 1991",
            "blood glucose (GLU) index within normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`wbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "JOIN",
            "WHERE",
            "="
        ],
        "conditions": [
            "abnormal white blood cell count",
            "group by sex",
            "list by age in ascending order"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`rbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "<",
            "JOIN",
            "="
        ],
        "conditions": [
            "lower red blood cell"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "patient.`admission`",
            "laboratory.`rbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            ">=",
            "<=",
            "JOIN"
        ],
        "conditions": [
            "gender is female",
            "age 50 and above",
            "abnormal red blood cell count"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`admission`",
            "laboratory.`hgb`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "outpatients",
            "low hemoglobin level"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`hgb`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "diagnosed with SLE",
            "oldest",
            "normal hemoglobin level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`id`",
            "laboratory.`hct`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "HAVING",
            "JOIN"
        ],
        "conditions": [
            "ID of patient",
            "age of patient",
            "two or more laboratory examinations",
            "hematocrit level exceeded the normal range"
        ]
    },
    {
        "tables": [
            "laboratory"
        ],
        "columns": [
            "laboratory.`date`",
            "laboratory.`hct`"
        ],
        "sql_keywords": [
            "LIKE",
            "<",
            "AVG"
        ],
        "conditions": [
            "laboratory examinations in 1991",
            "average hematocrit level lower than the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`plt`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "SUM",
            "WHERE",
            "GROUP BY"
        ],
        "conditions": [
            "abnormal platelet level",
            "lower than normal range",
            "higher than normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`date`",
            "patient.`birthday`",
            "laboratory.`plt`",
            "patient.`id`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "WHERE",
            "AND"
        ],
        "conditions": [
            "laboratory examinations taken in 1984",
            "patients below 50 years old",
            "normal platelet level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "patient.`birthday`",
            "laboratory.`pt`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "patients older than 55 years old",
            "female",
            "abnormal prothrombin time (PT)"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`first date`",
            "laboratory.`id`",
            "laboratory.`pt`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "first visit to the hospital after year 1992",
            "prothrombin time (PT) level is normal"
        ]
    },
    {
        "tables": [
            "examination",
            "laboratory"
        ],
        "columns": [
            "examination.`examination date`",
            "laboratory.`aptt`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "examinations done after 1997/1/1",
            "result of inactivated partial prothrombin time"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "laboratory.`aptt`",
            "laboratory.`id`",
            "examination.`thrombosis`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "abnormal activated partial prothrombin time",
            "does not have thrombosis"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`wbc`",
            "laboratory.`fg`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "DISTINCT"
        ],
        "conditions": [
            "male patients",
            "normal level of white blood cells",
            "abnormal fibrinogen level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`fg`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            ">",
            "IS NULL"
        ],
        "conditions": [
            "born after 1980/1/1",
            "abnormal fibrinogen level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "laboratory.`u-pro`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "proteinuria level higher than normal"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`id`",
            "examination.`diagnosis`",
            "patient.`id`",
            "patient.`diagnosis`",
            "laboratory.`id`",
            "laboratory.`u-pro`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "INNER JOIN"
        ],
        "conditions": [
            "normal proteinuria level",
            "diagnosed with SLE"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`igg`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "Ig G higher than normal"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`symptoms`",
            "examination.`id`",
            "patient.`id`",
            "laboratory.`igg`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "IS NOT NULL"
        ],
        "conditions": [
            "normal Ig G level",
            "have symptoms"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`iga`",
            "patient.`diagnosis`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "BETWEEN",
            "JOIN",
            "="
        ],
        "conditions": [
            "highest Ig A within the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`iga`",
            "patient.`first date`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "JOIN"
        ],
        "conditions": [
            "normal Ig A level",
            "came to the hospital after 1990/1/1"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`igm`",
            "patient.`diagnosis`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "MAX",
            "COUNT"
        ],
        "conditions": [
            "abnormal Ig M level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`crp`",
            "patient.`description`",
            "patient.`id`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "abnormal C-reactive protein",
            "data not recorded"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`cre`",
            "patient.`birthday`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "creatinine level is abnormal",
            "age under 70"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`id`",
            "examination.`kct`",
            "laboratory.`id`",
            "laboratory.`ra`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "=",
            "JOIN"
        ],
        "conditions": [
            "Rheumatoid Factor is normal",
            "positive measure of degree of coagulation"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "patient.`birthday`",
            "laboratory.`ra`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "born after 1985-1-1",
            "normal Rheumatoid Factor"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`rf`",
            "patient.`id`",
            "patient.`birthday`"
        ],
        "sql_keywords": [
            "=",
            "<",
            "JOIN"
        ],
        "conditions": [
            "RF is normal",
            "age older than 60"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient",
            "examination"
        ],
        "columns": [
            "laboratory.`rf`",
            "examination.`thrombosis`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "RF is normal",
            "absence of thrombosis"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "laboratory.`c3`",
            "examination.`ana pattern`",
            "patient.`id`",
            "examination.`id`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN",
            "EXACT MATCH"
        ],
        "conditions": [
            "normal level of complement 3",
            "P pattern observed in the sheet of ANA examination"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "laboratory.`hct`",
            "examination.`acl iga`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "WHERE",
            "<",
            ">",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "Hematocrit level isn't normal",
            "highest anti-Cardiolipin antibody concentration"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "examination.`thrombosis`",
            "examination.`id`",
            "laboratory.`id`",
            "laboratory.`c4`"
        ],
        "sql_keywords": [
            "=",
            "DISTINCT"
        ],
        "conditions": [
            "patients have blood clots in veins",
            "normal level of complement 4"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`admission`",
            "laboratory.`rnp`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "normal level of anti-ribonuclear protein",
            "admitted to the hospital"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`rnp`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "NOT IN",
            "JOIN",
            "="
        ],
        "conditions": [
            "youngest patient",
            "abnormal anti-ribonuclear protein level"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "examination.`id`",
            "examination.`thrombosis`",
            "laboratory.`id`",
            "laboratory.`sm`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "COUNT"
        ],
        "conditions": [
            "patients with normal anti-SM",
            "patients without thrombosis"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`birthday`",
            "laboratory.`sm`"
        ],
        "sql_keywords": [
            "NOT IN",
            "MAX",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "abnormal anti-SM"
        ]
    },
    {
        "tables": [
            "examination",
            "laboratory",
            "patient"
        ],
        "columns": [
            "examination.`id`",
            "examination.`examination date`",
            "laboratory.`id`",
            "laboratory.`sc170`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "examination date after 1997/1/1",
            "normal anti-scl70"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient",
            "examination"
        ],
        "columns": [
            "laboratory.`sc170`",
            "patient.`sex`",
            "examination.`symptoms`",
            "laboratory.`id`",
            "patient.`id`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "=",
            "IS NULL"
        ],
        "conditions": [
            "normal anti-scl70",
            "female",
            "does not have any symptom"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`ssa`",
            "patient.`first date`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "=",
            "<"
        ],
        "conditions": [
            "normal anti-SSA",
            "came to the hospital before 2000"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`first date`",
            "laboratory.`ssa`"
        ],
        "sql_keywords": [
            "MIN",
            "NOT IN",
            "JOIN",
            "="
        ],
        "conditions": [
            "first patient with an abnormal anti-SSA",
            "patient came to the hospital"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`id`",
            "laboratory.`ssb`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "normal anti-SSB",
            "diagnosed with SLE"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`ssb`",
            "laboratory.`id`",
            "examination.`symptoms`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "IS NOT NULL",
            "IN"
        ],
        "conditions": [
            "anti-SSB are normal"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`ssb`",
            "laboratory.`centromea`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "EXACT MATCHING",
            "INTERSECT"
        ],
        "conditions": [
            "normal level of anti-centromere",
            "normal level of anti-SSB",
            "patients are male"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`dna`",
            "patient.`diagnosis`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "abnormal level of anti-DNA"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`dna`",
            "patient.`id`",
            "patient.`description`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "IS NULL",
            "<"
        ],
        "conditions": [
            "normal anti-DNA level",
            "data not recorded"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`igg`",
            "patient.`admission`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "normal level of IGG"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`got`",
            "laboratory.`id`",
            "patient.`diagnosis`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "abnormal level of glutamic oxaloacetic transaminase",
            "diagnosed with SLE"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`got`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "gender is male",
            "glutamic oxaloacetic transaminase in the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`got`",
            "patient.`birthday`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "abnormal level of glutamic oxaloacetic transaminase"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`birthday`",
            "laboratory.`gpt`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT",
            "JOIN",
            "MAX",
            "<"
        ],
        "conditions": [
            "patients' birthdays",
            "highest glutamic pyruvic transaminase",
            "glutamic pyruvic transaminase in the normal range"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`got`",
            "patient.`sex`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "normal glutamic pylvic transaminase level",
            "male"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient"
        ],
        "columns": [
            "laboratory.`ldh`",
            "patient.`first date`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "patient with the highest lactate dehydrogenase in the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`first date`",
            "laboratory.`date`",
            "laboratory.`ldh`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "WHERE",
            ">="
        ],
        "conditions": [
            "latest patient's medical data recorded",
            "abnormal level of lactate dehydrogenase"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`alp`",
            "patient.`admission`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "abnormal alkaliphophatase level",
            "admitted to the hospital"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`admission`",
            "laboratory.`id`",
            "laboratory.`alp`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "patients followed at the outpatient clinic",
            "normal level of alkaliphophatase"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "laboratory.`tp`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "<",
            "JOIN"
        ],
        "conditions": [
            "total protein lower than normal"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`diagnosis`",
            "patient.`id`",
            "laboratory.`tp`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "diagnosed with SJS",
            "normal level of total protein"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient",
            "examination"
        ],
        "columns": [
            "laboratory.`alb`",
            "laboratory.`id`",
            "examination.`examination date`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "albumin is the highest in the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`alb`",
            "laboratory.`tp`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "gender is male",
            "normal level of albumin",
            "normal level of total protein"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "examination.`acl igg`",
            "examination.`acl igm`",
            "examination.`acl iga`",
            "laboratory.`ua`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "JOIN"
        ],
        "conditions": [
            "female patient",
            "highest uric acid level in the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "examination.`ana`",
            "laboratory.`cre`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "<"
        ],
        "conditions": [
            "highest anti-nucleus antibody concentration level",
            "normal creatinine level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "laboratory.`cre`",
            "examination.`acl iga`"
        ],
        "sql_keywords": [
            "=",
            "MAX",
            "JOIN"
        ],
        "conditions": [
            "creatinine level is normal",
            "anti Cardiolipin antibody concentration level is the highest"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient",
            "examination"
        ],
        "columns": [
            "laboratory.`t-bil`",
            "laboratory.`id`",
            "examination.`ana pattern`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "INTERSECT"
        ],
        "conditions": [
            "total bilirubin is over the normal range",
            "peripheral pattern observed in the sheet of ANA examination"
        ]
    },
    {
        "tables": [
            "laboratory",
            "patient",
            "examination"
        ],
        "columns": [
            "laboratory.`t-bil`",
            "laboratory.`id`",
            "examination.`ana`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "anti-nucleus antibody concentration",
            "total bilirubin is the highest in the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "laboratory.`t-cho`",
            "examination.`kct`",
            "patient.`id`",
            "examination.`id`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "total cholesterol is higher than normal",
            "negative measure of degree of coagulation"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "laboratory.`t-cho`",
            "examination.`ana pattern`",
            "patient.`id`",
            "laboratory.`id`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "INNER JOIN"
        ],
        "conditions": [
            "total cholesterol is within the normal range",
            "P pattern observed in the sheet of ANA examination"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "laboratory.`tg`",
            "examination.`symptoms`",
            "laboratory.`id`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "IS NOT NULL"
        ],
        "conditions": [
            "normal level of triglyceride",
            "other symptoms observed"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`diagnosis`",
            "laboratory.`tg`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "highest level of triglyceride within the normal range"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "patient.`id`",
            "laboratory.`cpk`",
            "laboratory.`id`",
            "examination.`thrombosis`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "no thrombosis",
            "abnormal level of creatinine phosphokinase"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "laboratory.`cpk`",
            "laboratory.`id`",
            "examination.`rvvt`",
            "examination.`kct`",
            "examination.`lac`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "JOIN"
        ],
        "conditions": [
            "normal range of creatinine phosphokinase",
            "positive measure of degree of coagulation"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`birthday`",
            "laboratory.`glu`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "MIN",
            ">",
            "JOIN"
        ],
        "conditions": [
            "oldest patient",
            "blood glucose is abnormal"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "laboratory.`glu`",
            "examination.`thrombosis`",
            "patient.`id`",
            "examination.`id`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "normal blood glucose",
            "don't have thrombosis"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`admission`",
            "patient.`id`",
            "laboratory.`wbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "patients accepted to the hospital",
            "normal level of white blood cells"
        ]
    },
    {
        "tables": [
            "examination",
            "patient",
            "laboratory"
        ],
        "columns": [
            "examination.`diagnosis`",
            "examination.`id`",
            "patient.`diagnosis`",
            "patient.`id`",
            "laboratory.`wbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "diagnosed with SLE",
            "normal white blood cell level"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`admission`",
            "laboratory.`rbc`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "<",
            ">",
            "AND"
        ],
        "conditions": [
            "abnormal level of red blood cell",
            "followed at the outpatient clinic"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory",
            "examination"
        ],
        "columns": [
            "laboratory.`plt`",
            "examination.`symptoms`",
            "patient.`id`",
            "laboratory.`id`",
            "examination.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "normal platelet level",
            "other symptoms observed"
        ]
    },
    {
        "tables": [
            "laboratory",
            "examination",
            "patient"
        ],
        "columns": [
            "laboratory.`plt`",
            "examination.`diagnosis`",
            "laboratory.`id`",
            "examination.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "platelet level within the normal range",
            "diagnosed with MCTD"
        ]
    },
    {
        "tables": [
            "patient",
            "laboratory"
        ],
        "columns": [
            "patient.`id`",
            "patient.`sex`",
            "laboratory.`pt`",
            "laboratory.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "AVG"
        ],
        "conditions": [
            "gender is male",
            "prothrombin time is normal"
        ]
    },
    {
        "tables": [
            "patient",
            "examination",
            "laboratory"
        ],
        "columns": [
            "examination.`thrombosis`",
            "examination.`id`",
            "laboratory.`pt`",
            "laboratory.`id`",
            "patient.`id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "patients with severe thrombosis",
            "normal prothrombin time"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Angela Sanders's major"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`link_to_major`",
            "major.`college`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "students in the Student_Club",
            "students from the College of Engineering"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`department`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "students in the Student_Club",
            "students from the Art and Design Department"
        ]
    },
    {
        "tables": [
            "member",
            "event",
            "attendance"
        ],
        "columns": [
            "event.`event_name`",
            "event.`event_id`",
            "attendance.`link_to_event`",
            "attendance.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "students of the Student_Club",
            "attended the event 'Women's Soccer'"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`phone`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "students from the Student_Club",
            "attended the event 'Women's Soccer'"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`t_shirt_size`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_name`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "students from the Student_Club",
            "attended the event 'Women's Soccer'",
            "want a T-shirt",
            "T-shirt size is medium"
        ]
    },
    {
        "tables": [
            "event",
            "attendance"
        ],
        "columns": [
            "event.`event_name`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT 1"
        ],
        "conditions": [
            "highest attendance",
            "students from the Student_Club"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`position`",
            "member.`link_to_major`",
            "major.`college`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "vice president of the Student_Club"
        ]
    },
    {
        "tables": [
            "event",
            "member",
            "attendance"
        ],
        "columns": [
            "event.`event_name`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "events attended by Maya Mclean"
        ]
    },
    {
        "tables": [
            "event",
            "member",
            "attendance"
        ],
        "columns": [
            "event.`event_date`",
            "event.`event_id`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "events of the Student_Club",
            "attended by Sacha Harrison",
            "in 2019"
        ]
    },
    {
        "tables": [
            "event",
            "attendance"
        ],
        "columns": [
            "event.`event_id`",
            "event.`type`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "=",
            "COUNT",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "events attended by more than 10 members of the Student_Club",
            "events that are meetings"
        ]
    },
    {
        "tables": [
            "event",
            "attendance"
        ],
        "columns": [
            "event.`event_name`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "INTERSECT",
            "NOT IN"
        ],
        "conditions": [
            "attendance of over 20 students",
            "not fundraisers"
        ]
    },
    {
        "tables": [
            "event",
            "attendance"
        ],
        "columns": [
            "event.`event_id`",
            "event.`event_name`",
            "event.`event_date`",
            "event.`type`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "=",
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "average attendance",
            "meetings",
            "year 2020"
        ]
    },
    {
        "tables": [
            "expense"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`cost`"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "most expensive item",
            "spent in support of club events"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "members of the Student_Club",
            "majored in Environmental Engineering"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "members of the Student_Club",
            "attended the 'Laugh Out Loud' event"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`last_name`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "students who majored in Law",
            "students who majored in Constitutional Studies"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`county`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Sherri Ramsey's county of upbringing"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`college`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "major that Tyler Hewitt took"
        ]
    },
    {
        "tables": [
            "income",
            "member"
        ],
        "columns": [
            "income.`amount`",
            "income.`link_to_member`",
            "member.`member_id`",
            "member.`position`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "amount of the funds",
            "received by the Vice President"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`spent`",
            "budget.`category`",
            "event.`event_name`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Student_Club members",
            "spend on food",
            "September Meeting"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`position`",
            "member.`zip`",
            "zip_code.`city`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "city where the President of the Student_Club grew up",
            "state where the President of the Student_Club grew up"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "JOIN",
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "members of Student_Club",
            "grew up in Illinois state"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`spent`",
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Student_Club members",
            "spend on advertisement",
            "September Meeting"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`department`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "major that Pierce took",
            "major that Guidi took"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`amount`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "total budgeted amount",
            "all categories",
            "October Speaker event"
        ]
    },
    {
        "tables": [
            "expense",
            "budget",
            "event"
        ],
        "columns": [
            "event.`event_name`",
            "event.`event_date`",
            "event.`event_id`",
            "budget.`link_to_event`",
            "budget.`budget_id`",
            "expense.`link_to_budget`",
            "expense.`approved`",
            "expense.`expense_date`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "expense in October Meeting",
            "date: October 8, 2019",
            "approval status"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_date`",
            "expense.`link_to_member`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "LIKE",
            "UNION"
        ],
        "conditions": [
            "events in September",
            "events in October"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`spent`",
            "event.`event_date`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "SUBTRACT"
        ],
        "conditions": [
            "total amount spent in all events by the Student_Club in year 2019",
            "total amount spent in all events by the Student_Club in year 2020"
        ]
    },
    {
        "tables": [
            "event"
        ],
        "columns": [
            "event.`location`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "event name is 'Spring Budget Review'"
        ]
    },
    {
        "tables": [
            "expense"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_description`",
            "expense.`expense_date`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "item: Posters",
            "date: 2019/9/4"
        ]
    },
    {
        "tables": [
            "budget"
        ],
        "columns": [
            "budget.`amount`",
            "budget.`remaining`",
            "budget.`category`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "biggest budget for 'Food'"
        ]
    },
    {
        "tables": [
            "income"
        ],
        "columns": [
            "income.`notes`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "fundraising",
            "date: 2019/9/14"
        ]
    },
    {
        "tables": [
            "major"
        ],
        "columns": [
            "major.`college`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "majors in 'College of Humanities and Social Sciences'"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`phone`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name is Carlo Jacobs"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`county`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "hometown county for Adela O'Gallagher"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`link_to_event`",
            "budget.`remaining`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "budgets for 'November Meeting'",
            "budgets that exceeded the budget"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`amount`",
            "event.`event_name`",
            "event.`event_id`",
            "budget.`link_to_event`"
        ],
        "sql_keywords": [
            "SUM",
            "exact matching",
            "="
        ],
        "conditions": [
            "event name is 'September Speaker'"
        ]
    },
    {
        "tables": [
            "expense",
            "budget",
            "event"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`expense_date`",
            "expense.`link_to_budget`",
            "budget.`budget_id`",
            "budget.`link_to_event`",
            "event.`event_id`",
            "event.`status`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "event status",
            "items bought: Post Cards, Posters",
            "date: 2019/8/20"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`major_name`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Brent Thomason's major"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`t_shirt_size`",
            "member.`link_to_major`",
            "major.`major_name`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "club members from 'Business' major",
            "wear medium size t-shirt"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`type`",
            "zip_code.`zip_code`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "Christof Nielson's zip code type"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`position`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "hometown state for 'Sacha Harrison'"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`position`",
            "member.`link_to_major`",
            "major.`department`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "President of the club"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "income.`date_received`",
            "income.`source`",
            "income.`link_to_member`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Connor Hilton paid his/her dues"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "income.`date_received`",
            "income.`source`",
            "income.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "MIN",
            "=",
            "JOIN"
        ],
        "conditions": [
            "first one paid his/her dues"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`amount`",
            "budget.`category`",
            "event.`event_name`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "budget in Advertisement for 'Yearly Kickoff' meeting",
            "budget in Advertisement for 'October Meeting'",
            "'Yearly Kickoff' meeting budget more than 'October Meeting' budget"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`amount`",
            "budget.`category`",
            "event.`event_name`",
            "event.`event_id`",
            "budget.`link_to_event`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "budget for Parking",
            "total budget for the 'November Speaker'"
        ]
    },
    {
        "tables": [
            "expense"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_description`"
        ],
        "sql_keywords": [
            "SUM",
            "exact matching",
            "="
        ],
        "conditions": [
            "total cost of pizzas",
            "all the events"
        ]
    },
    {
        "tables": [
            "zip_code"
        ],
        "columns": [
            "zip_code.`city`",
            "zip_code.`county`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "cities in Orange County, Virginia"
        ]
    },
    {
        "tables": [
            "major"
        ],
        "columns": [
            "major.`department`",
            "major.`college`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "College of Humanities and Social Sciences"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`city`",
            "zip_code.`county`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Amy Firth's hometown"
        ]
    },
    {
        "tables": [
            "expense",
            "budget"
        ],
        "columns": [
            "expense.`expense_description`",
            "budget.`remaining`"
        ],
        "sql_keywords": [
            "=",
            "MIN",
            "JOIN"
        ],
        "conditions": [
            "budget with the lowest remaining"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "attended the event 'October Meeting'"
        ]
    },
    {
        "tables": [
            "major",
            "member"
        ],
        "columns": [
            "major.`college`",
            "member.`link_to_major`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most of the members"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`phone`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "phone number is 809-555-3360"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`amount`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "highest budget amount"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`cost`",
            "expense.`approved`",
            "expense.`link_to_member`",
            "expense.`link_to_budget`",
            "expense.`expense_date`",
            "expense.`expense_id`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`position`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "expenses incurred",
            "by the vice president"
        ]
    },
    {
        "tables": [
            "member",
            "event",
            "attendance"
        ],
        "columns": [
            "event.`event_name`",
            "event.`event_id`",
            "attendance.`link_to_event`",
            "attendance.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "event is 'Women's Soccer'"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "income.`link_to_member`",
            "income.`date_received`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "member is Casey Mason"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`zip`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "members' hometowns are from Maryland state"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`phone`",
            "member.`member_id`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "member with the phone number '954-555-6240'"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "major.`department`",
            "member.`link_to_major`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "JOIN",
            "=",
            "AND"
        ],
        "conditions": [
            "members of the 'School of Applied Sciences, Technology and Education' department"
        ]
    },
    {
        "tables": [
            "event",
            "budget"
        ],
        "columns": [
            "event.`event_name`",
            "event.`status`",
            "event.`event_id`",
            "budget.`spent`",
            "budget.`amount`",
            "budget.`link_to_event`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "event status is closed",
            "highest spend-to-budget ratio"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.`position`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "position of president"
        ]
    },
    {
        "tables": [
            "budget"
        ],
        "columns": [
            "budget.`spent`"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "highest amount of budget spend for an event"
        ]
    },
    {
        "tables": [
            "event"
        ],
        "columns": [
            "event.`type`",
            "event.`event_date`"
        ],
        "sql_keywords": [
            "=",
            "YEAR()"
        ],
        "conditions": [
            "meeting events",
            "held in 2020"
        ]
    },
    {
        "tables": [
            "budget"
        ],
        "columns": [
            "budget.`spent`",
            "budget.`category`"
        ],
        "sql_keywords": [
            "SUM",
            "exact matching",
            "="
        ],
        "conditions": [
            "money spent for food"
        ]
    },
    {
        "tables": [
            "member",
            "attendance"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "HAVING",
            "COUNT",
            "JOIN",
            "="
        ],
        "conditions": [
            "students have attended more than 7 events"
        ]
    },
    {
        "tables": [
            "member",
            "major",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "major.`major_name`",
            "event.`event_name`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "member.`link_to_major`",
            "event.`event_id`",
            "major.`major_id`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "students majored in interior design",
            "attended the Community Theater event"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`state`",
            "zip_code.`city`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "students from Georgetown, South Carolina"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "income.`amount`",
            "income.`link_to_member`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "income generated by Grant Gilmour"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "income.`amount`",
            "income.`link_to_member`"
        ],
        "sql_keywords": [
            "INNER JOIN",
            ">",
            "SELECT"
        ],
        "conditions": [
            "income more than $40"
        ]
    },
    {
        "tables": [
            "expense",
            "budget",
            "event"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`link_to_budget`",
            "budget.`budget_id`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Yearly Kickoff"
        ]
    },
    {
        "tables": [
            "member",
            "budget",
            "event",
            "expense"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "expense.`link_to_budget`",
            "expense.`link_to_member`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "student entrusted to manage the budget for the Yearly Kickoff"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "income.`amount`",
            "income.`source`",
            "income.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "MAX",
            "JOIN",
            "="
        ],
        "conditions": [
            "students",
            "generate the highest income",
            "full name",
            "income source"
        ]
    },
    {
        "tables": [
            "event",
            "expense",
            "budget"
        ],
        "columns": [
            "event.`event_name`",
            "expense.`cost`",
            "expense.`link_to_budget`",
            "budget.`budget_id`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "lowest cost"
        ]
    },
    {
        "tables": [
            "expense",
            "budget",
            "event"
        ],
        "columns": [
            "expense.`cost`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "total cost for all events",
            "percentage of cost for Yearly Kickoff event"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "major.`major_name`",
            "member.`link_to_major`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN",
            "SUM",
            "DIVIDE"
        ],
        "conditions": [
            "students majored in finance",
            "students majored in physics"
        ]
    },
    {
        "tables": [
            "income"
        ],
        "columns": [
            "income.`source`",
            "income.`amount`",
            "income.`date_received`"
        ],
        "sql_keywords": [
            "MAX",
            "BETWEEN",
            "="
        ],
        "conditions": [
            "source of funds",
            "received in September 2019",
            "based on their amount"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`email`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "role is Secretary",
            "belongs to Student_Club"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`member_id`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "major in 'Physics Teaching'"
        ]
    },
    {
        "tables": [
            "event",
            "attendance",
            "member"
        ],
        "columns": [
            "event.`event_name`",
            "event.`event_date`",
            "event.`event_id`",
            "attendance.`link_to_event`",
            "attendance.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "event name is 'Community Theater'",
            "year is 2019"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "member.`link_to_major`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_id`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "events attended by Luisa Guidi",
            "major of Luisa Guidi"
        ]
    },
    {
        "tables": [
            "budget"
        ],
        "columns": [
            "budget.`spent`",
            "budget.`category`",
            "budget.`event_status`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Student_Club",
            "spend on food",
            "typical event",
            "in the past"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`spent`",
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "MAX",
            "=",
            "JOIN"
        ],
        "conditions": [
            "event with the highest amount spent on advertisement"
        ]
    },
    {
        "tables": [
            "member",
            "event",
            "attendance"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "event.`event_name`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "Maya Mclean attended the 'Women's Soccer' event"
        ]
    },
    {
        "tables": [
            "event"
        ],
        "columns": [
            "event.`type`",
            "event.`event_id`",
            "event.`event_date`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "events held by Student_Club in 2019",
            "events related to 'Community Service'"
        ]
    },
    {
        "tables": [
            "event",
            "budget",
            "expense"
        ],
        "columns": [
            "event.`event_id`",
            "event.`event_name`",
            "budget.`link_to_event`",
            "budget.`budget_id`",
            "expense.`link_to_budget`",
            "expense.`expense_description`",
            "expense.`cost`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cost of posters",
            "'September Speaker' event"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.`t_shirt_size`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "t-shirt size",
            "ordered by club members"
        ]
    },
    {
        "tables": [
            "event",
            "budget"
        ],
        "columns": [
            "event.`event_name`",
            "event.`status`",
            "event.`event_id`",
            "budget.`remaining`",
            "budget.`link_to_event`"
        ],
        "sql_keywords": [
            "=",
            "MIN",
            "JOIN"
        ],
        "conditions": [
            "event is closed",
            "cost has exceeded the budget"
        ]
    },
    {
        "tables": [
            "event",
            "budget",
            "expense"
        ],
        "columns": [
            "event.`event_id`",
            "event.`event_name`",
            "budget.`link_to_event`",
            "budget.`budget_id`",
            "expense.`link_to_budget`",
            "expense.`expense_description`",
            "expense.`cost`",
            "expense.`approved`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "type of expenses for 'October Meeting' event",
            "total value of expenses approved for 'October Meeting' event"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "event.`event_name`",
            "budget.`amount`",
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "SUM",
            "ORDER BY",
            "JOIN",
            "="
        ],
        "conditions": [
            "amount budgeted for 'April Speaker' event",
            "list budgeted categories for 'April Speaker' event in ascending order based on amount budgeted"
        ]
    },
    {
        "tables": [
            "budget"
        ],
        "columns": [
            "budget.`amount`",
            "budget.`category`"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "category is Food",
            "highest budgeted amount"
        ]
    },
    {
        "tables": [
            "budget"
        ],
        "columns": [
            "budget.`amount`",
            "budget.`category`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "budgets for Advertising",
            "top three with the most budgeted amount"
        ]
    },
    {
        "tables": [
            "expense"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_description`"
        ],
        "sql_keywords": [
            "SUM",
            "exact matching",
            "="
        ],
        "conditions": [
            "calculate total cost",
            "spent for Parking"
        ]
    },
    {
        "tables": [
            "expense"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_date`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "total expense on 8/20/2019"
        ]
    },
    {
        "tables": [
            "member",
            "expense"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "member id is rec4BLdZHS2Blfp4v"
        ]
    },
    {
        "tables": [
            "member",
            "expense"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`",
            "expense.`expense_description`",
            "expense.`link_to_member`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "expenses incurred by Sacha Harrison"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`link_to_member`",
            "member.`member_id`",
            "member.`t_shirt_size`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "members who have X-Large size of tee shirt"
        ]
    },
    {
        "tables": [
            "expense",
            "member",
            "zip_code"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`member_id`",
            "member.`zip`",
            "zip_code.`zip_code`"
        ],
        "sql_keywords": [
            "<",
            "="
        ],
        "conditions": [
            "incurred less than 50USD"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`major_name`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Phillip Cullen has joined a major"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`position`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "members who joined major of Business"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`t_shirt_size`",
            "member.`link_to_major`",
            "major.`major_name`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "members of Business",
            "Medium size of tee shirt"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`remaining`",
            "budget.`link_to_event`",
            "event.`event_id`",
            "event.`type`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "remaining budget more than 30 USD"
        ]
    },
    {
        "tables": [
            "event",
            "budget"
        ],
        "columns": [
            "event.`location`",
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "events held at MU 215"
        ]
    },
    {
        "tables": [
            "event",
            "budget"
        ],
        "columns": [
            "event.`event_date`",
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "event date is 2020-03-24T12:00:00"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`position`",
            "member.`link_to_major`",
            "major.`major_id`",
            "major.`major_name`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`position`",
            "member.`link_to_major`",
            "major.`major_name`",
            "major.`major_id`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "members who are major Business"
        ]
    },
    {
        "tables": [
            "event",
            "budget"
        ],
        "columns": [
            "event.`location`",
            "event.`event_id`",
            "budget.`category`",
            "budget.`link_to_event`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "events held at MU 215"
        ]
    },
    {
        "tables": [
            "income"
        ],
        "columns": [
            "income.`amount`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "income amount of 50"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.`position`",
            "member.`t_shirt_size`"
        ],
        "sql_keywords": [
            "=",
            "COUNT"
        ],
        "conditions": [
            "t-shirt size is extra large"
        ]
    },
    {
        "tables": [
            "major"
        ],
        "columns": [
            "major.`college`",
            "major.`department`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "College of Agriculture and Applied Sciences",
            "department of School of Applied Sciences, Technology and Education"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`last_name`",
            "major.`major_name`",
            "major.`department`",
            "major.`college`"
        ],
        "sql_keywords": [
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "major in environmental engineering"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`category`",
            "event.`location`",
            "event.`type`",
            "budget.`spent`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "events located at MU 215",
            "guest speaker type",
            "0 budget spent"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code",
            "major"
        ],
        "columns": [
            "member.`position`",
            "member.`zip`",
            "member.`link_to_major`",
            "zip_code.`zip_code`",
            "zip_code.`city`",
            "zip_code.`state`",
            "major.`department`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "members enrolled under electrical and computer engineering department"
        ]
    },
    {
        "tables": [
            "event",
            "attendance",
            "member",
            "zip_code"
        ],
        "columns": [
            "event.`event_name`",
            "event.`type`",
            "event.`location`",
            "attendance.`link_to_event`",
            "attendance.`link_to_member`",
            "member.`member_id`",
            "member.`position`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`city`",
            "zip_code.`state`",
            "zip_code.`short_state`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "attended by the vice president of the Student_Club",
            "Student_Club located at 900 E. Washington St."
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`expense_date`",
            "expense.`link_to_member`",
            "member.`last_name`",
            "member.`position`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "student bought pizza on 09/10/2019"
        ]
    },
    {
        "tables": [
            "member",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`last_name`",
            "member.`position`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "members of the club",
            "attended the women's soccer event"
        ]
    },
    {
        "tables": [
            "income",
            "member"
        ],
        "columns": [
            "income.`amount`",
            "member.`t_shirt_size`",
            "member.`position`",
            "income.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "t-shirt size of medium",
            "amount 50 received by the Student_Club"
        ]
    },
    {
        "tables": [
            "zip_code"
        ],
        "columns": [
            "zip_code.`county`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "countries with zip codes that include post office boxes"
        ]
    },
    {
        "tables": [
            "zip_code"
        ],
        "columns": [
            "zip_code.`zip_code`",
            "zip_code.`county`",
            "zip_code.`state`",
            "zip_code.`type`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "zip codes with post office boxes",
            "country is San Juan Municipio",
            "state is Puerto Rico"
        ]
    },
    {
        "tables": [
            "event"
        ],
        "columns": [
            "event.`event_name`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "event type is 'game'",
            "event status is 'closed'",
            "event closed date is between 3/15/2019 and 3/20/2020"
        ]
    },
    {
        "tables": [
            "member",
            "expense",
            "attendance",
            "event"
        ],
        "columns": [
            "expense.`link_to_member`",
            "expense.`cost`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "membership status: paid",
            "amount paid: more than 50 dollars"
        ]
    },
    {
        "tables": [
            "member",
            "expense",
            "attendance",
            "event"
        ],
        "columns": [
            "member.`member_id`",
            "member.`first_name`",
            "member.`last_name`",
            "expense.`approved`",
            "expense.`expense_date`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "event.`event_id`",
            "event.`event_name`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN",
            "JOIN"
        ],
        "conditions": [
            "members approved between 1/10/2019 and 11/19/2019",
            "member attended the event",
            "link to the member's event"
        ]
    },
    {
        "tables": [
            "major",
            "member"
        ],
        "columns": [
            "member.`first_name`",
            "member.`link_to_major`",
            "major.`college`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name is Katy",
            "link to the major 'rec1N0upiVLy5esTO'"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`phone`",
            "major.`major_name`",
            "major.`college`"
        ],
        "sql_keywords": [
            "EXACT MATCH"
        ],
        "conditions": [
            "majored in business",
            "College of Agriculture and Applied Sciences"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_date`",
            "expense.`link_to_member`",
            "member.`email`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN",
            "JOIN"
        ],
        "conditions": [
            "paid more than 20 dollars",
            "from 9/10/2019 to 11/19/2019"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`link_to_major`",
            "member.`position`",
            "major.`major_name`",
            "major.`college`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "education major in the College of Education & Human Services"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`remaining`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "events that went over budget"
        ]
    },
    {
        "tables": [
            "event"
        ],
        "columns": [
            "event.`event_id`",
            "event.`location`",
            "event.`status`"
        ],
        "sql_keywords": [
            "BETWEEN"
        ],
        "conditions": [
            "event ID",
            "location",
            "status",
            "events conducted from November 2019 to March 2020"
        ]
    },
    {
        "tables": [
            "expense"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`cost`",
            "expense.`expense_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "expenses that spend more than fifty dollars on average"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`t_shirt_size`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "t-shirt size is extra large"
        ]
    },
    {
        "tables": [
            "zip_code"
        ],
        "columns": [
            "zip_code.`type`",
            "zip_code.`zip_code`"
        ],
        "sql_keywords": [
            "exact matching",
            "="
        ],
        "conditions": [
            "zip codes that are PO boxes"
        ]
    },
    {
        "tables": [
            "event",
            "budget"
        ],
        "columns": [
            "event.`event_name`",
            "event.`location`",
            "budget.`remaining`"
        ],
        "sql_keywords": [
            "INNER JOIN",
            ">",
            "="
        ],
        "conditions": [
            "events that underspend its budget"
        ]
    },
    {
        "tables": [
            "event",
            "expense",
            "budget"
        ],
        "columns": [
            "event.`event_name`",
            "event.`event_date`",
            "expense.`expense_description`",
            "expense.`cost`",
            "expense.`link_to_budget`",
            "budget.`link_to_event`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "expenses for pizza more than fifty dollars",
            "expenses for pizza less than a hundred dollars"
        ]
    },
    {
        "tables": [
            "expense",
            "member",
            "major"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "member.`member_id`",
            "major.`major_name`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "expense more than 100 dollars"
        ]
    },
    {
        "tables": [
            "income",
            "member",
            "zip_code",
            "event",
            "attendance"
        ],
        "columns": [
            "income.`link_to_member`",
            "member.`zip`",
            "zip_code.`city`",
            "zip_code.`county`",
            "event.`event_id`",
            "attendance.`link_to_event`",
            "attendance.`link_to_member`"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "HAVING",
            "COUNT",
            "INNER JOIN",
            "="
        ],
        "conditions": [
            "events with more than forty incomes"
        ]
    },
    {
        "tables": [
            "member",
            "expense",
            "attendance"
        ],
        "columns": [
            "member.`member_id`",
            "member.`first_name`",
            "member.`last_name`",
            "expense.`cost`",
            "expense.`link_to_member`",
            "attendance.`link_to_member`",
            "attendance.`link_to_event`",
            "expense.`link_to_budget`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "HAVING",
            "MAX",
            "JOIN"
        ],
        "conditions": [
            "members who incurred expenses in more than one event"
        ]
    },
    {
        "tables": [
            "expense",
            "member",
            "event"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`member_id`",
            "member.`position`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "JOIN"
        ],
        "conditions": [
            "position other than a member"
        ]
    },
    {
        "tables": [
            "event",
            "budget",
            "expense"
        ],
        "columns": [
            "event.`event_name`",
            "budget.`category`",
            "expense.`cost`",
            "expense.`link_to_budget`",
            "budget.`budget_id`",
            "budget.`link_to_event`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "events with parking cost less than average"
        ]
    },
    {
        "tables": [
            "expense",
            "budget",
            "event"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`link_to_budget`",
            "budget.`link_to_event`",
            "event.`event_id`",
            "event.`type`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "SUM",
            "COUNT"
        ],
        "conditions": [
            "percentage of the cost for the meeting events"
        ]
    },
    {
        "tables": [
            "expense",
            "budget"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`expense_description`",
            "expense.`link_to_budget`",
            "budget.`budget_id`",
            "budget.`category`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "budget for water",
            "budget for chips",
            "budget for cookies"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT",
            "JOIN",
            "MAX"
        ],
        "conditions": [
            "top five members",
            "spend the most money",
            "descending order of spending"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`phone`",
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "AVG",
            ">",
            "JOIN"
        ],
        "conditions": [
            "members who had to spend more than average on each expense"
        ]
    },
    {
        "tables": [
            "zip_code",
            "member"
        ],
        "columns": [
            "zip_code.`state`",
            "member.`position`",
            "member.`zip`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "members in New Jersey",
            "members in Vermont"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`link_to_major`",
            "major.`major_name`",
            "major.`department`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "major of Garrett Gerke",
            "department to which the major belongs"
        ]
    },
    {
        "tables": [
            "expense",
            "member"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`cost`",
            "expense.`link_to_member`",
            "member.`first_name`",
            "member.`last_name`",
            "member.`member_id`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "member spent money for water",
            "member spent money for veggie tray",
            "member spent money for supplies"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`last_name`",
            "member.`phone`",
            "major.`major_name`",
            "major.`major_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "students under the Elementary Education major"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "event.`event_name`",
            "budget.`category`",
            "budget.`amount`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "category for 'January Speaker' event",
            "amount budgeted for that category"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "event names budgeted for food"
        ]
    },
    {
        "tables": [
            "member",
            "income"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "income.`amount`",
            "income.`date_received`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "students who received funds",
            "date of 9/9/2019",
            "include the amount received"
        ]
    },
    {
        "tables": [
            "expense",
            "budget"
        ],
        "columns": [
            "expense.`expense_description`",
            "expense.`link_to_budget`",
            "budget.`budget_id`",
            "budget.`category`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "expense 'Posters'"
        ]
    },
    {
        "tables": [
            "member",
            "major"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`position`",
            "member.`link_to_major`",
            "major.`college`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "position of 'Secretary'",
            "list which college the club member belongs to"
        ]
    },
    {
        "tables": [
            "budget",
            "event"
        ],
        "columns": [
            "budget.`spent`",
            "budget.`category`",
            "budget.`link_to_event`",
            "event.`event_name`",
            "event.`event_id`"
        ],
        "sql_keywords": [
            "SUM",
            "JOIN",
            "=",
            "GROUP BY"
        ],
        "conditions": [
            "total amount spent on speaker gifts",
            "name of the event where speaker gifts were spent"
        ]
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`zip`",
            "zip_code.`zip_code`",
            "zip_code.`city`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "member",
            "zip_code"
        ],
        "columns": [
            "member.`first_name`",
            "member.`last_name`",
            "member.`position`",
            "zip_code.`zip_code`",
            "zip_code.`city`",
            "zip_code.`state`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "hometown of Lincolnton, North Carolina",
            "zip code of 28092"
        ]
    },
    {
        "tables": [
            "gasstations"
        ],
        "columns": [
            "gasstations.`country`",
            "gasstations.`segment`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "location in CZE",
            "has Premium gas"
        ]
    },
    {
        "tables": [
            "customers"
        ],
        "columns": [
            "customers.`currency`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customers who pay in EUR",
            "customers who pay in CZK"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`segment`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "year is 2012",
            "least consumption",
            "region is LAM"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`customerid`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "average monthly consumption",
            "customers in SME",
            "year 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "customers paying in CZK",
            "consumed the most gas",
            "in 2011"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`segment`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "<",
            "AND"
        ],
        "conditions": [
            "location is KAM",
            "consumption less than 30,000",
            "year is 2012"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "gas consumption",
            "CZK-paying customers",
            "EUR-paying customers",
            "year 2012"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "year",
            "most gas use",
            "paid in EUR"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "yearmonth.`consumption`",
            "yearmonth.`customerid`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "MIN",
            "JOIN",
            "SUM"
        ],
        "conditions": [
            "least consumption"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "year",
            "most consumption of gas",
            "paid in CZK"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`customerid`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "LIKE",
            "MAX",
            "JOIN",
            "BETWEEN"
        ],
        "conditions": [
            "gas consumption",
            "peak month",
            "SME customers",
            "year 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`segment`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN",
            "MIN",
            "GROUP BY",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "annual average consumption",
            "customers with the least amount of consumption paid in CZK",
            "year 2013",
            "comparison between SME and LAM",
            "comparison between LAM and KAM",
            "comparison between KAM and SME"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY",
            "ORDER BY",
            "JOIN",
            "MAX",
            "MIN"
        ],
        "conditions": [
            "segments: SME, LAM, KAM",
            "percentage increases in consumption paid in EUR",
            "time period: between 2012 and 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "customer 6",
            "between August and November 2013"
        ]
    },
    {
        "tables": [
            "gasstations"
        ],
        "columns": [
            "gasstations.`country`",
            "gasstations.`segment`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "number of 'discount' gas stations in the Czech Republic",
            "number of 'discount' gas stations in Slovakia"
        ]
    },
    {
        "tables": [
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "Customer 7 consumption in April 2013",
            "Customer 5 consumption in April 2013"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`amount`",
            "customers.`segment`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "=",
            "SUM",
            "GROUP BY",
            "JOIN",
            "WHERE"
        ],
        "conditions": [
            "More SMEs pay in Czech koruna than in euros"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`customerid`",
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "customer used the Euro as their currency",
            "highest consumption in October 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`segment`",
            "yearmonth.`customerid`",
            "yearmonth.`consumption`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "KAM's customers",
            "consumed the most"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`customerid`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "KAM customers",
            "consumption in total",
            "May 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`customerid`",
            "yearmonth.`consumption`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "LAM customer",
            "consumed more than 46.73"
        ]
    },
    {
        "tables": [
            "gasstations"
        ],
        "columns": [
            "gasstations.`country`",
            "gasstations.`segment`"
        ],
        "sql_keywords": [
            "=",
            "GROUP BY"
        ],
        "conditions": [
            "value for money gas stations",
            "total number of value for money gas stations in each country"
        ]
    },
    {
        "tables": [
            "customers"
        ],
        "columns": [
            "customers.`segment`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "KAM customers",
            "payment in euros"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`date`",
            "yearmonth.`consumption`",
            "yearmonth.`customerid`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "month is February",
            "year is 2012",
            "consumption more than 528.3"
        ]
    },
    {
        "tables": [
            "gasstations"
        ],
        "columns": [
            "gasstations.`country`",
            "gasstations.`segment`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "Slovakian gas stations",
            "premium gas stations"
        ]
    },
    {
        "tables": [
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`customerid`",
            "yearmonth.`consumption`",
            "yearmonth.`date`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "client ID",
            "consumed the most",
            "September 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`date`",
            "yearmonth.`consumption`",
            "yearmonth.`customerid`",
            "customers.`segment`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "client segment",
            "consumed the least",
            "September 2013"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`segment`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "MIN"
        ],
        "conditions": [
            "SME customer",
            "consumed the least",
            "June 2012"
        ]
    },
    {
        "tables": [
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`consumption`",
            "yearmonth.`date`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "monthly consumption",
            "year 2012"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`currency`",
            "yearmonth.`consumption`",
            "yearmonth.`customerid`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "SUM"
        ],
        "conditions": [
            "customers who use euro as their currency"
        ]
    },
    {
        "tables": [
            "yearmonth",
            "products",
            "transactions_1k"
        ],
        "columns": [
            "yearmonth.`date`",
            "yearmonth.`customerid`",
            "transactions_1k.`productid`",
            "products.`description`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "products consumed in September, 2013"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations",
            "yearmonth"
        ],
        "columns": [
            "gasstations.`country`",
            "transactions_1k.`date`",
            "transactions_1k.`gasstationid`",
            "yearmonth.`date`"
        ],
        "sql_keywords": [
            "LIKE",
            "=",
            "INTERSECT"
        ],
        "conditions": [
            "transactions taken place in June, 2013"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations",
            "customers"
        ],
        "columns": [
            "transactions_1k.`gasstationid`",
            "transactions_1k.`customerid`",
            "gasstations.`chainid`",
            "gasstations.`gasstationid`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "JOIN",
            "EXACT MATCH",
            "DISTINCT"
        ],
        "conditions": [
            "gas stations with transactions in euro"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "products",
            "customers"
        ],
        "columns": [
            "transactions_1k.`productid`",
            "products.`productid`",
            "products.`description`",
            "transactions_1k.`customerid`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "JOIN",
            "=",
            "INNER JOIN"
        ],
        "conditions": [
            "product description of products",
            "transactions in euro"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "transactions_1k.`date`",
            "transactions_1k.`price`",
            "yearmonth.`date`"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "transactions taken place in January, 2012"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "customers.`customerid`",
            "customers.`currency`",
            "yearmonth.`customerid`",
            "yearmonth.`consumption`"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "paid in euro",
            "monthly consumption over 1000"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "products",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`productid`",
            "transactions_1k.`gasstationid`",
            "products.`description`",
            "products.`productid`",
            "gasstations.`gasstationid`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "JOIN",
            "=",
            "WHERE"
        ],
        "conditions": [
            "transactions in gas stations",
            "location: Czech Republic"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`time`",
            "gasstations.`chainid`",
            "transactions_1k.`gasstationid`",
            "gasstations.`gasstationid`"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "transactions taken place in gas stations",
            "chain no. 11"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`transactionid`",
            "transactions_1k.`price`",
            "transactions_1k.`gasstationid`",
            "gasstations.`country`",
            "gasstations.`gasstationid`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "transactions in the gas station",
            "location: Czech Republic",
            "price over 1000"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`date`",
            "transactions_1k.`gasstationid`",
            "gasstations.`gasstationid`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "EXACT MATCHING",
            "="
        ],
        "conditions": [
            "transactions made in gas stations",
            "location: Czech Republic",
            "date after 2012/1/1"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`price`",
            "transactions_1k.`amount`",
            "transactions_1k.`gasstationid`",
            "gasstations.`country`",
            "gasstations.`gasstationid`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "transactions taken place in gas stations",
            "location: Czech Republic"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`price`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN",
            "GROUP BY",
            "AVG"
        ],
        "conditions": [
            "customers who paid in euro"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "transactions_1k.`price`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "date is 2012/8/25"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`date`",
            "transactions_1k.`time`",
            "transactions_1k.`gasstationid`",
            "gasstations.`gasstationid`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "MIN"
        ],
        "conditions": [
            "first paid customer",
            "gas station",
            "2012/8/25"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`time`",
            "transactions_1k.`date`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "currency used by the customer",
            "payment time is 16:25:00",
            "payment date is 2012/8/24"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "transactions_1k.`time`",
            "customers.`segment`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "customer segment",
            "date and time: 2012/8/23 21:20:00"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`transactionid`",
            "transactions_1k.`customerid`",
            "transactions_1k.`time`",
            "transactions_1k.`date`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "transactions paid in CZK",
            "morning of 2012/8/26"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "customers.`segment`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN",
            "="
        ],
        "conditions": [
            "earliest customer"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`date`",
            "transactions_1k.`time`",
            "transactions_1k.`gasstationid`",
            "gasstations.`gasstationid`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "deal date and time is 2012/8/24 12:42:00"
        ]
    },
    {
        "tables": [
            "transactions_1k"
        ],
        "columns": [
            "transactions_1k.`productid`",
            "transactions_1k.`date`",
            "transactions_1k.`time`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "transaction date and time is 2012/8/23 21:20:00"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "yearmonth",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "transactions_1k.`price`",
            "yearmonth.`customerid`",
            "yearmonth.`date`",
            "yearmonth.`consumption`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "customer paid 124.05 on 2012/8/24",
            "spending during January 2012"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`transactionid`",
            "transactions_1k.`time`",
            "transactions_1k.`gasstationid`",
            "transactions_1k.`date`",
            "gasstations.`country`",
            "gasstations.`gasstationid`"
        ],
        "sql_keywords": [
            "=",
            "BETWEEN"
        ],
        "conditions": [
            "transactions during 8:00-9:00",
            "date is 2012/8/26",
            "location is CZE"
        ]
    },
    {
        "tables": [
            "customers",
            "yearmonth"
        ],
        "columns": [
            "yearmonth.`date`",
            "yearmonth.`consumption`",
            "yearmonth.`customerid`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "customer spent 214582.17",
            "time: June 2013"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`cardid`",
            "transactions_1k.`gasstationid`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "card number is 667467"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "transactions_1k.`amount`",
            "transactions_1k.`gasstationid`",
            "customers.`customerid`",
            "gasstations.`gasstationid`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer spent 548.4",
            "date is 2012/8/24"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "JOIN"
        ],
        "conditions": [
            "currency used is EUR",
            "date is 2012/8/25"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "yearmonth",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`date`",
            "transactions_1k.`price`",
            "transactions_1k.`amount`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "customer paid 634.8 on 2012/8/25",
            "consumption decrease rate from Year 2012 to 2013"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`gasstationid`",
            "transactions_1k.`amount`",
            "transactions_1k.`price`",
            "gasstations.`gasstationid`"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "JOIN",
            "SUM"
        ],
        "conditions": [
            "highest amount of revenue"
        ]
    },
    {
        "tables": [
            "gasstations"
        ],
        "columns": [
            "gasstations.`segment`",
            "gasstations.`country`"
        ],
        "sql_keywords": [
            "EXACT MATCH",
            "="
        ],
        "conditions": [
            "segment = premium",
            "Country = SVK"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "yearmonth"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`amount`",
            "transactions_1k.`gasstationid`",
            "yearmonth.`customerid`",
            "yearmonth.`date`",
            "yearmonth.`consumption`"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "customer ID is 38508",
            "transactions at gas stations",
            "transactions in January 2012"
        ]
    },
    {
        "tables": [
            "products",
            "transactions_1k"
        ],
        "columns": [
            "products.`productid`",
            "products.`description`",
            "transactions_1k.`productid`",
            "transactions_1k.`amount`"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "top five best selling products"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`amount`",
            "transactions_1k.`price`",
            "customers.`customerid`",
            "customers.`currency`"
        ],
        "sql_keywords": [
            "=",
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "top spending customer",
            "average price per single item purchased by the top spending customer",
            "currency used"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "gasstations"
        ],
        "columns": [
            "transactions_1k.`productid`",
            "transactions_1k.`price`",
            "transactions_1k.`gasstationid`",
            "gasstations.`country`",
            "gasstations.`gasstationid`"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "country with gas station",
            "most expensive product id No.2",
            "one unit"
        ]
    },
    {
        "tables": [
            "transactions_1k",
            "yearmonth",
            "customers"
        ],
        "columns": [
            "transactions_1k.`customerid`",
            "transactions_1k.`amount`",
            "transactions_1k.`productid`",
            "transactions_1k.`price`",
            "yearmonth.`consumption`",
            "yearmonth.`date`",
            "yearmonth.`customerid`",
            "customers.`customerid`"
        ],
        "sql_keywords": [
            "=",
            ">",
            "JOIN"
        ],
        "conditions": [
            "paid more than 29.00 per unit",
            "product id No.5",
            "consumption status in August 2012"
        ]
    }
]