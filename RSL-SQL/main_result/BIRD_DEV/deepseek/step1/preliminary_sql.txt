SELECT MAX(frpm.`Free Meal Count (K-12)` / frpm.`Enrollment (K-12)`) AS highest_eligible_free_rate FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE schools.`County` = 'Alameda'
SELECT `frpm`.`CDSCode`, (`frpm`.`Free Meal Count (Ages 5-17)` / `frpm`.`Enrollment (Ages 5-17)`) AS `Eligible Free Rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`School Type` = 'Continuation' ORDER BY `Eligible Free Rate` ASC LIMIT 3
SELECT DISTINCT `schools`.`Zip` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`County Name` = 'Fresno' AND `frpm`.`District Name` = 'Fresno County Office of Education' AND `frpm`.`Charter School (Y/N)` = 1
SELECT `schools`.`MailStreet` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT `schools`.`Phone` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `frpm`.`Charter Funding Type` = 'Directly funded' AND `schools`.`OpenDate` > '2000-01-01'
SELECT COUNT(*) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 400 AND `schools`.`Virtual` = 'F'
SELECT `schools`.`School` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumTstTakr` > 500 AND `schools`.`Magnet` = 1
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT satscores.`NumTstTakr` FROM satscores INNER JOIN frpm ON satscores.`cds` = frpm.`CDSCode` ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1
SELECT COUNT(DISTINCT `satscores`.`cds`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 560 AND `schools`.`Charter` = 1 AND `schools`.`FundingType` = 'Directly funded'
SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` ORDER BY T2.`AvgScrRead` DESC LIMIT 1
SELECT `frpm`.`CDSCode` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE (`frpm`.`Enrollment (K-12)` + `frpm`.`Enrollment (Ages 5-17)`) > 500
SELECT MAX(frpm.`Free Meal Count (Ages 5-17)` / frpm.`Enrollment (Ages 5-17)`) FROM satscores INNER JOIN frpm ON satscores.`cds` = frpm.`CDSCode` WHERE satscores.`NumGE1500` / satscores.`NumTstTakr` > 0.3
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY (`satscores`.`NumGE1500` / `satscores`.`NumTstTakr`) DESC LIMIT 3
SELECT `schools`.`NCESSchool` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (Ages 5-17)` DESC LIMIT 5
SELECT T.District FROM ( SELECT S.`District`, AVG(SS.`AvgScrRead`) AS avg_score FROM `schools` AS S INNER JOIN `satscores` AS SS ON S.`CDSCode` = SS.`cds` WHERE S.`StatusType` = 'Active' GROUP BY S.`District` ) T ORDER BY T.avg_score DESC LIMIT 1
SELECT COUNT(*) FROM `satscores` AS `T1` INNER JOIN `schools` AS `T2` ON `T1`.`cds` = `T2`.`CDSCode` WHERE `T1`.`NumTstTakr` < 100 AND `T2`.`County` = 'Alameda'
SELECT `schools`.`CharterNum`, AVG(`satscores`.`AvgScrWrite`) AS avg_write_score FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrWrite` > 499 AND `schools`.`CharterNum` IS NOT NULL GROUP BY `schools`.`CharterNum` ORDER BY avg_write_score DESC
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`FundingType` = 'Directly funded' AND `satscores`.`NumTstTakr` <= 250 AND `schools`.`City` = 'Fresno'
SELECT `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` WHERE `schools`.`County` = 'Amador' AND `schools`.`Low Grade` = '9' AND `schools`.`High Grade` = '12'
SELECT COUNT(`frpm`.`CDSCode`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County Name` = 'Los Angeles' AND `frpm`.`Free Meal Count (K-12)` > 500 AND `frpm`.`FRPM Count (K-12)` < 700
SELECT s.`School` FROM `satscores` AS ss INNER JOIN `schools` AS s ON ss.`cds` = s.`CDSCode` WHERE s.`County` = 'Contra Costa' ORDER BY ss.`NumTstTakr` DESC LIMIT 1
SELECT `schools`.`School`, `schools`.`Street` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > 30
SELECT `schools`.`School` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE (`frpm`.`Free Meal Count (K-12)` / `frpm`.`Enrollment (K-12)`) > 0.1 AND `satscores`.`NumGE1500` > 0
SELECT `schools`.`School`, `schools`.`FundingType` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`County` = 'Riverside' GROUP BY `schools`.`School` HAVING AVG(`satscores`.`AvgScrMath`) > 400
SELECT `schools`.`School`, `schools`.`Street`, `schools`.`City`, `schools`.`State`, `schools`.`Zip` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Free Meal Count (Ages 5-17)` > 800 AND `schools`.`City` = 'Monterey' AND `schools`.`School Type` = 'High Schools (Public)'
SELECT s.`sname`, s.`AvgScrWrite`, sch.`Phone` FROM satscores AS s INNER JOIN schools AS sch ON s.`cds` = sch.`CDSCode` WHERE sch.`OpenDate` > '1991-01-01' OR sch.`ClosedDate` < '2000-01-01'
SELECT `schools`.`School`, `schools`.`DOCType` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM `frpm` WHERE `schools`.`FundingType` = 'Locally funded') AND `schools`.`FundingType` = 'Locally funded'
SELECT `schools`.`OpenDate` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 1
SELECT `schools`.`City`, MIN(`frpm`.`Enrollment (K-12)`) AS `MinEnrollment` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` GROUP BY `schools`.`City` ORDER BY `MinEnrollment` ASC LIMIT 5
SELECT `frpm`.`Free Meal Count (K-12)` / `frpm`.`Enrollment (K-12)` AS eligible_free_rate FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 2 OFFSET 8
SELECT `schools`.`School`, (`frpm`.`FRPM Count (K-12)` / `frpm`.`Enrollment (K-12)`) AS `Eligible Free or Reduced Price Meal Rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`SOC` = 66 ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 5
SELECT `schools`.`School`, `schools`.`Website` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000
SELECT `frpm`.`Free Meal Count (Ages 5-17)` / `frpm`.`Enrollment (Ages 5-17)` AS free_rate FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`AdmFName1` = 'Kacey' AND `schools`.`AdmLName1` = 'Gibson'
SELECT `schools`.`AdmEmail1` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 1
SELECT `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT `schools`.`Street`, `schools`.`City`, `schools`.`Zip`, `schools`.`State` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY (`satscores`.`NumGE1500` / `satscores`.`NumTstTakr`) ASC LIMIT 1
SELECT `schools`.`Website` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`County` = 'Los Angeles' AND `satscores`.`NumTstTakr` BETWEEN 2000 AND 3000
SELECT AVG(satscores.`NumTstTakr`) FROM schools INNER JOIN satscores ON schools.`CDSCode` = satscores.`cds` WHERE schools.`County` = 'Fresno' AND schools.`OpenDate` BETWEEN '1980-01-01' AND '1980-12-31'
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`District` = 'Fresno Unified' ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT T1.`School` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.cds WHERE T1.`Virtual` = 'F' AND T2.`AvgScrRead` IN (SELECT DISTINCT AVG(T2.`AvgScrRead`) OVER (PARTITION BY T1.`County`) AS avg_score FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.cds WHERE T1.`Virtual` = 'F' ORDER BY avg_score DESC LIMIT 5)
SELECT `schools`.`School Type`, `schools`.`Educational Option Type` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1
SELECT `satscores`.`AvgScrMath`, `schools`.`County` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY (`satscores`.`AvgScrMath` + `satscores`.`AvgScrRead` + `satscores`.`AvgScrWrite`) ASC LIMIT 1
SELECT AVG(satscores.`AvgScrWrite`), schools.`City` FROM satscores INNER JOIN schools ON satscores.`cds` = schools.`CDSCode` WHERE satscores.`NumGE1500` = (SELECT MAX(NumGE1500) FROM satscores)
SELECT `schools`.`School`, AVG(`satscores`.`AvgScrWrite`) AS avg_writing_score FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`AdmFName1` = 'Ricci' AND `schools`.`AdmLName1` = 'Ulrich' GROUP BY `schools`.`School`
SELECT `schools`.`School`, `frpm`.`Enrollment (K-12)` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`DOC` = 31 ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 1
SELECT COUNT(`CDSCode`) / 12.0 FROM `schools` WHERE `OpenDate` LIKE '1980-%' AND `DOC` = 52 AND `County` = 'Alameda'
SELECT COUNT(CASE WHEN `schools`.`DOC` = 54 THEN 1 END) * 1.0 / COUNT(CASE WHEN `schools`.`DOC` = 52 THEN 1 END) AS ratio FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`County` = 'Orange' AND `schools`.`StatusType` = 'Merged'
SELECT `schools`.`County`, `schools`.`School`, `schools`.`ClosedDate` FROM `schools` WHERE `schools`.`StatusType` = 'Closed' ORDER BY `schools`.`County`
SELECT `schools`.`Street`, `satscores`.`sname` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1 OFFSET 6
SELECT `schools`.`School`, `schools`.`MailStreet` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT COUNT(DISTINCT `satscores`.`cds`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE (`satscores`.`AvgScrRead` + `satscores`.`AvgScrMath` + `satscores`.`AvgScrWrite`) >= 1500 AND `schools`.`MailCity` = 'Lakeport'
SELECT SUM(satscores.`NumTstTakr`) FROM `schools` JOIN `satscores` ON schools.`CDSCode` = satscores.`cds` WHERE schools.`MailCity` = 'Fresno'
SELECT `schools`.`School`, `schools`.`MailZip` FROM `schools` WHERE `schools`.`AdmFName1` = 'Avetik' AND `schools`.`AdmLName1` = 'Atoian'
SELECT CAST(COUNT(CASE WHEN `schools`.`County` = 'Colusa' THEN `schools`.`CDSCode` ELSE NULL END) AS REAL) / COUNT(CASE WHEN `schools`.`County` = 'Humboldt' THEN `schools`.`CDSCode` ELSE NULL END) AS Ratio FROM `schools` WHERE `schools`.`MailState` = 'CA'
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `MailState` = 'CA' AND `MailCity` = 'San Joaquin' AND `StatusType` = 'Active'
SELECT `schools`.`Phone`, `schools`.`Ext` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrWrite` DESC LIMIT 1 OFFSET 332
SELECT `School`, `Phone`, `Ext` FROM `schools` WHERE `Zip` = '95203-3704'
SELECT `schools`.`Website` FROM `schools` WHERE (`schools`.`AdmFName1` = 'Mike' AND `schools`.`AdmLName1` = 'Larson') OR (`schools`.`AdmFName2` = 'Dante' AND `schools`.`AdmLName2` = 'Alvarez')
SELECT `Website` FROM `schools` WHERE `Virtual` = 'P' AND `Charter` = 1 AND `City` = 'San Joaquin'
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` WHERE `schools`.`Charter` = 1 AND `schools`.`DOC` = 52 AND `schools`.`City` = 'Hickman'
SELECT COUNT(*) FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `schools`.`Charter` = 0 AND (`frpm`.`Free Meal Count (K-12)` * 100.0 / `frpm`.`Enrollment (K-12)`) < 0.18
SELECT `schools`.`School`, `schools`.`City`, `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `schools` WHERE `schools`.`Charter` = 1 AND `schools`.`CharterNum` = '00D2'
SELECT COUNT(*) FROM `schools` WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4'
SELECT CAST(SUM(CASE WHEN `schools`.`FundingType` = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`schools`.`CDSCode`) FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `frpm`.`County Name` = 'Santa Clara'
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` WHERE `schools`.`FundingType` = 'Directly Funded' AND `schools`.`County` = 'Stanislaus' AND `schools`.`OpenDate` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` WHERE `schools`.`StatusType` = 'Closed' AND `schools`.`ClosedDate` LIKE '1989-%' AND `schools`.`City` = 'San Francisco'
SELECT `County` FROM `schools` WHERE `StatusType` = 'Closed' AND `ClosedDate` BETWEEN '1980-01-01' AND '1989-12-31' AND `SOC` = 11 GROUP BY `County` ORDER BY COUNT(`CDSCode`) DESC LIMIT 1
SELECT `schools`.`NCESDist` FROM `schools` WHERE `schools`.`SOC` = 31
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `StatusType` IN ('Active', 'Closed') AND `County` = 'Alpine' AND `School Type` = 'District Community Day School'
SELECT `schools`.`District` FROM `schools` WHERE `schools`.`Magnet` = 0 AND `schools`.`City` = 'Fresno'
SELECT SUM(`frpm`.`Enrollment (Ages 5-17)`) FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`EdOpsCode` = 'SSS' AND `schools`.`City` = 'Fremont' AND `frpm`.`Academic Year` = '2014-2015'
SELECT `frpm`.`Free Meal Count (Ages 5-17)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`MailStreet` = 'PO Box 1040' AND `schools`.`School` = 'Youth Authority School'
SELECT `Low Grade` FROM `schools` WHERE `NCESDist` = '0613360' AND `EdOpsCode` = 'SPECON' ORDER BY `Low Grade` ASC LIMIT 1
SELECT `schools`.`School` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`County Code` = '37' AND `frpm`.`NSLP Provision Status` = '2'
SELECT `schools`.`City` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`EILCode` = 'HS' AND `frpm`.`Low Grade` = '9' AND `frpm`.`High Grade` = '12' AND `frpm`.`NSLP Provision Status` = '2' AND `frpm`.`County Name` = 'Merced'
SELECT `schools`.`School`, (`frpm`.`FRPM Count (Ages 5-17)` / `frpm`.`Enrollment (Ages 5-17)` * 100) AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `schools`.`GSoffered` = 'K-9'
SELECT `GSoffered` FROM `schools` WHERE `City` = 'Adelanto' GROUP BY `GSoffered` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `County`, COUNT(`CDSCode`) AS `SchoolCount` FROM `schools` WHERE `Virtual` = 'F' AND `County` IN ('San Diego', 'Santa Barbara') GROUP BY `County` ORDER BY `SchoolCount` DESC LIMIT 1
SELECT `School`, `School Type`, `Latitude`, `Longitude` FROM `schools` ORDER BY `Latitude` DESC LIMIT 1
SELECT `schools`.`School`, `schools`.`City`, `schools`.`Low Grade` FROM `schools` WHERE `schools`.`State` = 'CA' ORDER BY `schools`.`Latitude` ASC LIMIT 1
SELECT `GSoffered` FROM `schools` ORDER BY ABS(`Longitude`) DESC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`CDSCode`) AS `magnet_schools_count`, `schools`.`City`, COUNT(`schools`.`CDSCode`) AS `schools_count` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`Magnet` = 1 AND `schools`.`GSoffered` = 'K-8' AND `frpm`.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY `schools`.`City`
SELECT `AdmFName1`, `District`, COUNT(`AdmFName1`) AS name_count FROM `schools` WHERE `AdmFName1` IS NOT NULL GROUP BY `AdmFName1`, `District` ORDER BY name_count DESC LIMIT 2
SELECT `frpm`.`Percent (%) Eligible Free (K-12)`, `schools`.`District Code` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`AdmFName1` = 'Alusine'
SELECT `schools`.`AdmLName1`, `schools`.`District`, `schools`.`County`, `schools`.`School` FROM `schools` WHERE `schools`.`CharterNum` = 40
SELECT `AdmEmail1`, `AdmEmail2`, `AdmEmail3` FROM `schools` WHERE `County` = 'San Bernardino' AND `City` = 'San Bernardino City Unified' AND `OpenDate` BETWEEN '2009-01-01' AND '2010-12-31' AND (`SOC` = 62 OR `DOC` = 54)
SELECT `schools`.`School`, `schools`.`AdmEmail1` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `district`.`A3` = 'East Bohemia'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `district`.`A3` = 'Prague' AND `loan`.`status` IN ('A', 'C')
SELECT CASE WHEN AVG(district.`A12`) > AVG(district.`A13`) THEN '1995' ELSE '1996' END AS higher_unemployment_year FROM district
SELECT COUNT(DISTINCT district.`district_id`) FROM district JOIN client ON district.`district_id` = client.`district_id` WHERE district.`A11` > 6000 AND district.`A11` < 10000 AND client.`gender` = 'F'
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`A3` = 'North Bohemia' AND `district`.`A11` > 8000
SELECT T1.`account_id`, (MAX(T3.`A11`) - MIN(T3.`A11`)) AS gap FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN district AS T3 ON T1.`district_id` = T3.`district_id` WHERE T1.`gender` = 'F' GROUP BY T1.`client_id` ORDER BY T1.`birth_date` ASC, T3.`A11` ASC LIMIT 1
SELECT `account`.`account_id` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` INNER JOIN `account` ON `client`.`client_id` = `account`.`account_id` ORDER BY `client`.`birth_date` DESC, `district`.`A11` DESC LIMIT 1
SELECT COUNT(*) FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `disp`.`type` = 'OWNER' AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT T1.`client_id` FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN account AS T3 ON T2.`account_id` = T3.`account_id` WHERE T3.`frequency` = 'POPLATEK PO OBRATU' AND T2.`type` = 'DISPONENT'
SELECT `account`.`account_id`, `account`.`district_id`, `account`.`frequency`, `account`.`date` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` BETWEEN '1997-01-01' AND '1997-12-31' AND `account`.`frequency` = 'POPLATEK TYDNE' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `account`.`account_id`, `loan`.`amount` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` > 12 AND STRFTIME('%Y', `account`.`date`) = '1993' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` < '1950-01-01' AND `district`.`A2` = 'Sokolov'
SELECT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE strftime('%Y', `trans`.`date`) = '1995' ORDER BY `trans`.`date` ASC LIMIT 1
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` < '1997-01-01' AND `trans`.`amount` > 3000
SELECT `client`.`client_id` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `card`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `account`.`district_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` = '1994-08-25'
SELECT MAX(T3.amount) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.issued = '1996-10-21'
SELECT `client`.`gender` FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` ORDER BY `client`.`birth_date`, `district`.`A11` DESC LIMIT 1
SELECT T1.amount FROM trans T1 INNER JOIN (SELECT T2.account_id, MIN(T2.date) AS first_trans_date FROM trans T2 INNER JOIN (SELECT account_id, MIN(date) AS account_open_date FROM account) T3 ON T2.account_id = T3.account_id WHERE T2.date > T3.account_open_date GROUP BY T2.account_id) T4 ON T1.account_id = T4.account_id AND T1.date = T4.first_trans_date INNER JOIN (SELECT account_id FROM loan ORDER BY amount DESC LIMIT 1) T5 ON T1.account_id = T5.account_id
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik' AND `client`.`gender` = 'F'
SELECT `disp`.`disp_id` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `trans`.`amount` = 5100 AND `trans`.`date` = '1998-09-02'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Litomerice' AND STRFTIME('%Y', `account`.`date`) = '1996'
SELECT district.`A2` FROM client INNER JOIN disp ON client.`client_id` = disp.`client_id` INNER JOIN account ON disp.`account_id` = account.`account_id` INNER JOIN district ON account.`district_id` = district.`district_id` WHERE client.`gender` = 'F' AND client.`birth_date` = '1976-01-29'
SELECT client.`birth_date` FROM client INNER JOIN disp ON client.`client_id` = disp.`client_id` INNER JOIN account ON disp.`account_id` = account.`account_id` INNER JOIN loan ON account.`account_id` = loan.`account_id` WHERE loan.`amount` = 98832 AND loan.`date` = '1996-01-03'
SELECT T1.`account_id` FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'Prague' ORDER BY T1.`date` LIMIT 1
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'south Bohemia'
SELECT ((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1998-12-27' AND status = 'A' ORDER BY date ASC LIMIT 1) AND date = '1998-12-27' ORDER BY date DESC LIMIT 1) - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22' ORDER BY date DESC LIMIT 1)) * 100.0 / (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ORDER BY date ASC LIMIT 1) AND date = '1993-03-22' ORDER BY date DESC LIMIT 1) AS increase_rate
SELECT (SUM(CASE WHEN `loan`.`status` = 'A' THEN `loan`.`amount` ELSE 0 END) * 100.0 / SUM(`loan`.`amount`)) AS percentage_fully_paid FROM `loan`
SELECT CAST(SUM(IIF(`loan`.`status` = 'C', 1, 0)) AS REAL) * 100 / COUNT(`loan`.`loan_id`) FROM `loan` WHERE `loan`.`amount` < 100000
SELECT `account`.`account_id`, `district`.`A2`, `district`.`A3` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` >= '1993-01-01' AND `account`.`date` < '1994-01-01' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `account`.`account_id`, `account`.`frequency` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'east Bohemia' AND `account`.`date` BETWEEN '1995-01-01' AND '2000-12-31'
SELECT `account`.`account_id`, `account`.`date` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Prachatice'
SELECT `district`.`A2`, `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = '4990'
SELECT `loan`.`account_id`, `district`.`A2`, `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT `loan`.`loan_id`, `district`.`A2`, `district`.`A11` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`duration` = 60
SELECT `district`.`A2`, ((`district`.`A13` - `district`.`A12`) / `district`.`A12`) * 100 AS unemployment_increment FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D'
SELECT CAST(COUNT(CASE WHEN `district`.`A2` = 'Decin' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE strftime('%Y', `account`.`date`) = '1993'
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `district`.`A2`, COUNT(`client`.`client_id`) AS female_count FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' GROUP BY `district`.`A2` ORDER BY female_count DESC LIMIT 9
SELECT d.`A2`, SUM(t.`amount`) AS total_withdrawals FROM `trans` AS t INNER JOIN `account` AS a ON t.`account_id` = a.`account_id` INNER JOIN `district` AS d ON a.`district_id` = d.`district_id` WHERE t.`type` = 'VYDAJ' AND t.`date` LIKE '1996-01%' GROUP BY d.`A2` ORDER BY total_withdrawals DESC LIMIT 10
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `district`.`A3` = 'South Bohemia' AND `card`.`card_id` IS NULL
SELECT T2.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'C' GROUP BY T3.A3 ORDER BY COUNT(T3.A3) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) FROM `loan` INNER JOIN `disp` ON `loan`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `district_id`, `A2` FROM `district` ORDER BY `A13` DESC
SELECT COUNT(`account`.`account_id`) FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` WHERE `district`.`A16` = (SELECT MAX(`A16`) FROM `district`)
SELECT COUNT(DISTINCT `trans`.`account_id`) FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`balance` < 0 AND `account`.`frequency` = 'POPLATEK MESICNE'
SELECT COUNT(*) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`amount` >= 250000 AND `account`.`frequency` = 'POPLATEK MESICNE' AND `loan`.`date` BETWEEN '1995-01-01' AND '1997-12-31' AND `loan`.`status` = 'A'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`status` = 'C' AND `account`.`district_id` = 1
SELECT COUNT(`client`.`client_id`) FROM `district` INNER JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`district_id` = (SELECT `district_id` FROM `district` ORDER BY `A15` DESC LIMIT 1 OFFSET 1)
SELECT COUNT(*) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Pisek'
SELECT `district`.`A2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`amount` > 10000 AND `trans`.`date` BETWEEN '1997-01-01' AND '1997-12-31' GROUP BY `district`.`A2`
SELECT `account`.`account_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`A2` = 'Pisek'
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold'
SELECT AVG(trans.`amount`) FROM `trans` JOIN `account` ON trans.`account_id` = account.`account_id` JOIN `disp` ON account.`account_id` = disp.`account_id` JOIN `card` ON disp.`disp_id` = card.`disp_id` WHERE trans.`operation` = 'VYBER KARTOU' AND STRFTIME('%Y', trans.`date`) = '2021'
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `trans`.`date`) = '1998' AND `trans`.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '1998')
SELECT DISTINCT c.`client_id` FROM `client` c INNER JOIN `disp` d ON c.`client_id` = d.`client_id` INNER JOIN `card` cd ON d.`disp_id` = cd.`disp_id` INNER JOIN `loan` l ON d.`account_id` = l.`account_id` WHERE c.`gender` = 'F' AND d.`type` = 'OWNER'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A3` = 'south Bohemia'
SELECT `account`.`account_id` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` WHERE `district`.`A2` = 'Tabor' AND `disp`.`type` = 'OWNER'
SELECT `disp`.`type` FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`A11` > 8000 AND `district`.`A11` <= 9000
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'North Bohemia' AND `trans`.`bank` = 'AB'
SELECT DISTINCT `district`.`A2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(T1.`A15`) FROM `district` AS T1 INNER JOIN `account` AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`A15` > 4000 AND T2.`date` >= '1997-01-01' GROUP BY T1.`A3`
SELECT COUNT(DISTINCT card.`card_id`) FROM card JOIN disp ON card.`disp_id` = disp.`disp_id` JOIN account ON disp.`account_id` = account.`account_id` WHERE card.`type` = 'classic' AND disp.`type` = 'OWNER'
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Hl.m. Praha' AND `client`.`gender` = 'M'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `card`)) AS PercentOfGold FROM `card` WHERE `type` = 'gold' AND `issued` < '1998-01-01'
SELECT `client`.`client_id`, `client`.`gender`, `client`.`birth_date` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `disp`.`type` = 'OWNER' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT district.`A15` FROM account INNER JOIN district ON account.`district_id` = district.`district_id` WHERE account.`account_id` = 532
SELECT `account`.`district_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333
SELECT `trans`.`trans_id`, `trans`.`amount`, `trans`.`date` FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`client_id` = 3356 AND `trans`.`operation` = 'VYBER'
SELECT COUNT(`loan`.`loan_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000
SELECT `card`.`type` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 13539
SELECT `district`.`A3` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT T1.`A2` FROM district AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN loan AS T3 ON T2.`account_id` = T3.`account_id` WHERE T3.`status` = 'A' GROUP BY T1.`A2` ORDER BY COUNT(T2.`account_id`) DESC LIMIT 1
SELECT `client`.`gender`, `client`.`birth_date` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `order`.`order_id` = 32423
SELECT `trans`.`trans_id`, `trans`.`account_id`, `trans`.`date`, `trans`.`type`, `trans`.`operation`, `trans`.`amount`, `trans`.`balance`, `trans`.`k_symbol`, `trans`.`bank`, `trans`.`account` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `account`.`district_id` = 5
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik'
SELECT T1.`client_id` FROM `client` AS T1 INNER JOIN `disp` AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN `card` AS T3 ON T2.`disp_id` = T3.`disp_id` WHERE T3.`type` = 'junior' AND T3.`issued` >= '1997-01-01'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`gender`) FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A11` > 10000
SELECT (SUM(CASE WHEN STRFTIME('%Y', loan.`date`) = '1997' THEN loan.`amount` ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', loan.`date`) = '1996' THEN loan.`amount` ELSE 0 END)) * 100.0 / SUM(CASE WHEN STRFTIME('%Y', loan.`date`) = '1996' THEN loan.`amount` ELSE 0 END) AS growth_rate FROM loan INNER JOIN account ON loan.`account_id` = account.`account_id` INNER JOIN disp ON account.`account_id` = disp.`account_id` INNER JOIN client ON disp.`client_id` = client.`client_id` WHERE client.`gender` = 'M' AND STRFTIME('%Y', loan.`date`) IN ('1996', '1997')
SELECT COUNT(*) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND `date` > '1995-12-31'
SELECT (SELECT `A16` FROM `district` WHERE `A3` = 'north Bohemia') - (SELECT `A16` FROM `district` WHERE `A3` = 'east Bohemia') AS difference
SELECT COUNT(*) FROM disp WHERE `account_id` BETWEEN 1 AND 10
SELECT `account`.`frequency`, `trans`.`k_symbol` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`account_id` = 3 AND `trans`.`amount` = 3539
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`disp_id` = 130 AND `disp`.`type` = 'OWNER'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `disp`.`type` = 'OWNER' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT l.`amount`, l.`status` FROM `loan` l JOIN `disp` d ON l.`account_id` = d.`account_id` JOIN `client` c ON d.`client_id` = c.`client_id` WHERE c.`client_id` = 992
SELECT SUM(T1.`amount`), T4.`gender` FROM `trans` AS T1 INNER JOIN `account` AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN `disp` AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN `client` AS T4 ON T3.`client_id` = T4.`client_id` WHERE T3.`client_id` = 4 AND T1.`trans_id` > 851 AND T3.`type` = 'OWNER' GROUP BY T4.`gender`
SELECT DISTINCT `card`.`type` FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `disp`.`client_id` = 9
SELECT SUM(`trans`.`amount`) FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`client_id` = 617 AND `trans`.`date` LIKE '1998-%'
SELECT `client`.`client_id`, `client`.`birth_date` FROM `client` JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`A3` = 'East Bohemia'
SELECT client.`client_id` FROM client INNER JOIN disp ON client.`client_id` = disp.`client_id` INNER JOIN loan ON disp.`account_id` = loan.`account_id` WHERE client.`gender` = 'F' ORDER BY loan.`amount` DESC LIMIT 3
SELECT COUNT(DISTINCT client.`client_id`) FROM client INNER JOIN disp ON client.`client_id` = disp.`client_id` INNER JOIN account ON disp.`account_id` = account.`account_id` INNER JOIN trans ON account.`account_id` = trans.`account_id` WHERE client.`gender` = 'M' AND client.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND trans.`k_symbol` = 'SIPO' AND trans.`amount` > 4000
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Beroun' AND `account`.`date` > '1996-12-31'
SELECT COUNT(*) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`gender` = 'F' AND `card`.`type` = 'junior'
SELECT CAST(COUNT(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM `client` INNER JOIN `account` ON `client`.`client_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`gender`) FROM `client` INNER JOIN `account` ON `client`.`client_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE'
SELECT COUNT(*) FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `disp`.`type` = 'OWNER' AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT `loan`.`account_id`, `loan`.`amount` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` > 24 AND `account`.`date` < '1997-01-01' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' ORDER BY `client`.`birth_date`, `district`.`A11` LIMIT 1
SELECT COUNT(*) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` LIKE '1920-%' AND `district`.`A3` = 'east Bohemia';
SELECT COUNT(`loan`.`account_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(`loan`.`amount`) FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `loan`.`status` = 'C' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `client`.`client_id`, `district`.`A2` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `disp`.`type` = 'OWNER'
SELECT T1.`client_id`, strftime('%Y', 'now') - strftime('%Y', T1.`birth_date`) AS age FROM `client` AS T1 INNER JOIN `disp` AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN `card` AS T3 ON T2.`disp_id` = T3.`disp_id` WHERE T3.`type` = 'gold' AND T2.`type` = 'OWNER'
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-' AND `atom`.`element` = 'cl'
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'o' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT `atom`.`atom_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = '-'
SELECT COUNT(DISTINCT `atom`.`molecule_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'na' AND `molecule`.`label` = '-'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT SUM(CASE WHEN `atom`.`element` = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(`atom`.`atom_id`) AS percentage FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '='
SELECT COUNT(`bond_id`) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `element` != 'br'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR004_8_9'
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '='
SELECT `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' GROUP BY `molecule`.`label` ORDER BY COUNT(`molecule`.`label`) DESC LIMIT 1
SELECT DISTINCT `bond`.`bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl'
SELECT T1.`atom_id`, T2.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '-'
SELECT T1.`atom_id`, T2.`atom_id2` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `molecule` AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE T3.`label` = '-'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `atom`.`element` ORDER BY COUNT(`atom`.`element`) ASC LIMIT 1
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`connected`.`atom_id` = 'TR004_8' AND `connected`.`atom_id2` = 'TR004_20') OR (`connected`.`atom_id` = 'TR004_20' AND `connected`.`atom_id2` = 'TR004_8')
SELECT DISTINCT `molecule`.`label` FROM `molecule` WHERE `molecule`.`label` NOT IN (SELECT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` != 'sn')
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`atom`.`element` = 'i' OR `atom`.`element` = 's') AND `bond`.`bond_type` = '-'
SELECT DISTINCT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT DISTINCT T1.atom_id FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.atom_id IN (SELECT atom_id FROM `atom` WHERE molecule_id = 'TR181')
SELECT CAST(COUNT(DISTINCT CASE WHEN `atom`.`element` != 'f' THEN `atom`.`molecule_id` END) AS REAL) * 100 / COUNT(DISTINCT `atom`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS percent FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = '#'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT T1.`atom_id`, T2.`atom_id2` FROM `connected` AS T1 INNER JOIN `connected` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`bond_id` = 'TR001_2_6' AND T1.`atom_id` != T2.`atom_id2`
SELECT SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END) AS difference FROM `molecule`
SELECT `connected`.`atom_id` FROM `connected` WHERE `connected`.`bond_id` = 'TR000_2_5'
SELECT `connected`.`bond_id` FROM `connected` WHERE `connected`.`atom_id2` = 'TR000_2'
SELECT T1.`molecule_id`, T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = ' = ' ORDER BY T1.`label` ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS percent FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR008'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(`molecule`.`molecule_id`) * 100 AS percent FROM `molecule`
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`atom`.`atom_id`) AS percent FROM `atom` WHERE `atom`.`molecule_id` = 'TR206'
SELECT `bond`.`bond_type` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR000'
SELECT `atom`.`element`, `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR060'
SELECT T1.`bond_type`, T2.`label` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`molecule_id` = 'TR010' GROUP BY T1.`bond_type` ORDER BY COUNT(T1.`bond_type`) DESC LIMIT 1
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond`.`bond_id`, `bond`.`bond_type` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR006' ORDER BY `bond`.`bond_type` ASC LIMIT 2
SELECT COUNT(`connected`.`bond_id`) FROM `connected` WHERE (`connected`.`atom_id` = 'TR009_12' OR `connected`.`atom_id2` = 'TR009_12') AND `connected`.`bond_id` IN (SELECT `bond`.`bond_id` FROM `bond` WHERE `bond`.`molecule_id` = 'TR009')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br'
SELECT bond.`bond_type`, atom1.`element` AS atom1_element, atom2.`element` AS atom2_element FROM bond INNER JOIN connected ON bond.`bond_id` = connected.`bond_id` INNER JOIN atom AS atom1 ON connected.`atom_id` = atom1.`atom_id` INNER JOIN atom AS atom2 ON connected.`atom_id2` = atom2.`atom_id` WHERE bond.`bond_id` = 'TR001_6_9'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT COUNT(`connected`.`bond_id`) FROM `connected` WHERE `connected`.`atom_id` LIKE 'TR%_19' OR `connected`.`atom_id2` LIKE 'TR%_19'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR004'
SELECT COUNT(`molecule`.`molecule_id`) FROM `molecule` WHERE `molecule`.`label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND `molecule`.`label` = '+'
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` INNER JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE (`atom1`.`element` = 'p' AND `atom2`.`element` = 'n') OR (`atom1`.`element` = 'n' AND `atom2`.`element` = 'p')
SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T1.bond_id) DESC LIMIT 1
SELECT CAST(COUNT(`bond`.`bond_id`) AS REAL) / COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'i'
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) + 0 = 45
SELECT `atom`.`element` FROM `atom` WHERE `atom`.`atom_id` NOT IN (SELECT `connected`.`atom_id` FROM `connected`)
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#' AND T3.molecule_id = 'TR041'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19'
SELECT T1.`molecule_id`, COUNT(T2.`bond_id`) AS DoubleBondCount FROM `molecule` AS T1 INNER JOIN `bond` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`bond_type` = ' = ' GROUP BY T1.`molecule_id` ORDER BY DoubleBondCount DESC LIMIT 1
SELECT `element` FROM `atom` WHERE `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '+') GROUP BY `element` ORDER BY COUNT(`atom_id`) ASC LIMIT 1
SELECT DISTINCT `connected`.`atom_id2` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 'pb'
SELECT DISTINCT `atom`.`element` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `bond`.`bond_type` = '#'
SELECT CAST(COUNT(`bond`.`bond_id`) AS REAL) * 100 / (SELECT COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` INNER JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` GROUP BY `atom1`.`element`, `atom2`.`element` ORDER BY COUNT(`bond`.`bond_id`) DESC LIMIT 1) AS 'percentage' FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` INNER JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE (`atom1`.`element`, `atom2`.`element`) = (SELECT `atom1`.`element`, `atom2`.`element` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` INNER JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` GROUP BY `atom1`.`element`, `atom2`.`element` ORDER BY COUNT(`bond`.`bond_id`) DESC LIMIT 1)
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) * 100 AS REAL) / COUNT(`bond`.`bond_id`) AS proportion FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `connected`.`atom_id2` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 's'
SELECT T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.element = 'sn'
SELECT COUNT(DISTINCT `atom`.`element`) FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND (`atom`.`element` = 'p' OR `atom`.`element` = 'br')
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `bond`.`molecule_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`atom`.`atom_id`) AS 'percentage' FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '-'
SELECT `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(`molecule`.`molecule_id`) FROM `molecule` WHERE `molecule`.`label` = '+' AND `molecule`.`molecule_id` BETWEEN 'TR000' AND 'TR030'
SELECT bond.`bond_type` FROM bond INNER JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE bond.`molecule_id` BETWEEN 'TR000' AND 'TR050'
SELECT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT MAX(`molecule`.`label`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'ca'
SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS has_both_elements FROM (SELECT 1 FROM `bond` AS b INNER JOIN `connected` AS c ON b.`bond_id` = c.`bond_id` INNER JOIN `atom` AS a ON c.`atom_id` = a.`atom_id` WHERE b.`bond_id` = 'TR001_1_8' AND a.`element` IN ('cl', 'c') GROUP BY a.`element` HAVING COUNT(DISTINCT a.`element`) = 2) AS subquery
SELECT DISTINCT T1.`molecule_id` FROM `molecule` AS T1 INNER JOIN `bond` AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN `atom` AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE T2.`bond_type` = '#' AND T1.`label` = '-' AND T3.`element` = 'c' LIMIT 2
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`molecule_id`) AS percentage FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR001'
SELECT `bond`.`molecule_id` FROM `bond` WHERE `bond`.`bond_type` = ' = '
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT `atom`.`element` FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `connected`.`bond_id` = 'TR000_1_2'
SELECT COUNT(*) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11'
SELECT `bond`.`bond_id`, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT `atom`.`element`, COUNT(`atom`.`atom_id`) AS `count` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND SUBSTR(`atom`.`atom_id`, 7, 1) = '4' GROUP BY `atom`.`element`
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`element`) AS ratio, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006' GROUP BY `molecule`.`label`
SELECT molecule.`label` FROM molecule INNER JOIN atom ON molecule.`molecule_id` = atom.`molecule_id` WHERE atom.`element` = 'ca'
SELECT T2.`bond_type` FROM `atom` AS T1 INNER JOIN `connected` AS T3 ON T1.`atom_id` = T3.`atom_id` INNER JOIN `bond` AS T2 ON T3.`bond_id` = T2.`bond_id` WHERE T1.`element` = 'c'
SELECT T1.element AS Element1, T2.element AS Element2 FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id = T1.atom_id INNER JOIN atom AS T2 ON T3.atom_id2 = T2.atom_id WHERE T3.bond_id = 'TR001_10_11'
SELECT CAST(COUNT(CASE WHEN T1.bond_type = '#' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS "percentage" FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR047'
SELECT `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR151' AND `atom`.`element` IN ('cl', 'br', 'i', 'sn', 'pb', 'te')
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND substr(`molecule`.`molecule_id`, 3, 3) >= 10 AND substr(`molecule`.`molecule_id`, 3, 3) <= 50
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `connected`.`bond_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = ' = ' AND `molecule`.`label` = '+'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+'
SELECT `bond`.`molecule_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_id` = 'TR000_1_2' AND `connected`.`atom_id` = 'TR000_1'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124' AND `label` = '+'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_2_4'
SELECT COUNT(`bond`.`bond_id`), `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`molecule_id` = 'TR006' AND `bond`.`bond_type` = ' = ' GROUP BY `molecule`.`label`
SELECT `molecule`.`molecule_id`, `atom`.`element` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `bond`.`bond_id`, `atom1`.`element` AS `atom1_element`, `atom2`.`element` AS `atom2_element` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` INNER JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE `bond`.`bond_type` = '-'
SELECT DISTINCT `molecule`.`label`, `atom`.`element` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR000_2_3'
SELECT COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `atom1` ON `connected`.`atom_id` = `atom1`.`atom_id` INNER JOIN `atom` AS `atom2` ON `connected`.`atom_id2` = `atom2`.`atom_id` WHERE `atom1`.`element` = 'cl' OR `atom2`.`element` = 'cl'
SELECT `atom`.`atom_id`, COUNT(DISTINCT `bond`.`bond_type`) AS bond_type_count FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` LEFT JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR346' GROUP BY `atom`.`atom_id`
SELECT COUNT(DISTINCT `bond`.`molecule_id`) AS TotalMoleculesWithDoubleBond, SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS CarcinogenicMolecules FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = ' = '
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` LEFT JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND (`bond`.`bond_type` != ' = ' OR `bond`.`bond_type` IS NULL)
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_2_4'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` WHERE `atom`.`molecule_id` = 'TR001'
SELECT COUNT(`bond_id`) FROM `bond` WHERE `bond_type` = '-'
SELECT DISTINCT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'cl' AND `molecule`.`label` = '+'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) / COUNT(`molecule`.`molecule_id`) AS percentage FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `molecule`.`molecule_id` FROM `bond` JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_3_4'
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `connected`.`atom_id` = 'TR000_1' AND `connected`.`atom_id2` = 'TR000_2'
SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id IN ('TR000_2', 'TR000_4') GROUP BY T2.label HAVING COUNT(DISTINCT T1.atom_id) = 2
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'n'
SELECT DISTINCT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = ' = '
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '=' AND `atom`.`molecule_id` = 'TR024'
SELECT T1.`molecule_id`, COUNT(T2.`atom_id`) AS atom_count FROM `molecule` AS T1 INNER JOIN `atom` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' GROUP BY T1.`molecule_id` ORDER BY atom_count DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(`molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'h' AND `bond`.`bond_type` = '#'
SELECT COUNT(`molecule`.`molecule_id`) FROM `molecule` WHERE `molecule`.`label` = '+'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`molecule_id` BETWEEN 'TR004' AND 'TR010' AND `bond`.`bond_type` = '-'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR008' AND `atom`.`element` = 'c'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR004_7' AND `molecule`.`label` = '-'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = ' = '
SELECT COUNT(`molecule`.`molecule_id`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT `atom`.`element`, `bond`.`bond_type` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR002'
SELECT `atom`.`atom_id` FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = ' = ' AND `atom`.`molecule_id` = 'TR012'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `name` FROM `cards` WHERE `borderColor` = 'borderless' AND (`cardKingdomFoilId` IS NULL OR `cardKingdomId` IS NULL)
SELECT `name` FROM `cards` WHERE `faceConvertedManaCost` = (SELECT MAX(`faceConvertedManaCost`) FROM `cards`)
SELECT `name` FROM `cards` WHERE `frameVersion` = '2015' AND `edhrecRank` < 100
SELECT `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'Banned' AND `legalities`.`format` = 'gladiator'
SELECT `cards`.`name`, `legalities`.`status` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Artifact' AND `cards`.`side` IS NULL AND `legalities`.`format` = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `cards`.`id`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Stephen Daniele'
SELECT r.`date`, r.`text` FROM `cards` AS c INNER JOIN `rulings` AS r ON c.`uuid` = r.`uuid` WHERE c.`name` = 'Sublime Epiphany' AND c.`number` = '74s'
SELECT `cards`.`name`, `cards`.`artist`, `cards`.`isPromo` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` GROUP BY `cards`.`uuid` ORDER BY COUNT(`rulings`.`uuid`) DESC LIMIT 1
SELECT `foreign_data`.`language` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'Annul' AND `cards`.`number` = '29'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid
SELECT `set_translations`.`translation`, `sets`.`totalSetSize` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `types`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy'
SELECT COUNT(*) FROM `cards` WHERE `power` = '*'
SELECT `promoTypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `borderColor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originalType` FROM `cards` WHERE `name` = 'Ancestor\'s Chosen'
SELECT `set_translations`.`language` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Angel of Mercy'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isTextless` = 0
SELECT r.`text` FROM `rulings` AS r INNER JOIN `cards` AS c ON r.`uuid` = c.`uuid` WHERE c.`name` = 'Condemn'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isStarter` = 1
SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`name` = 'Benalish Knight'
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Phyrexian'
SELECT CAST(COUNT(CASE WHEN `borderColor` = 'borderless' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'German' AND T1.`isReprint` = 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`isStorySpotlight` = 1
SELECT COUNT(`id`) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedManaCost` = 0
SELECT `layout` FROM `cards` WHERE `keywords` LIKE '%Flying%'
SELECT COUNT(*) FROM `cards` WHERE `originalType` = 'Summon - Angel' AND `subtypes` NOT LIKE '%Angel%'
SELECT `cards`.`id` FROM `cards` WHERE `cards`.`cardKingdomFoilId` IS NOT NULL AND `cards`.`cardKingdomId` IS NOT NULL
SELECT `cards`.`id` FROM `cards` WHERE `cards`.`duelDeck` = 'a'
SELECT `edhrecRank` FROM `cards` WHERE `frameVersion` = '2015'
SELECT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`availability` = 'paper' AND `foreign_data`.`language` = 'Japanese'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`borderColor` = 'white'
SELECT `cards`.`uuid`, `foreign_data`.`language` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy'
SELECT `rulings`.`text` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`name` = 'Beacon of Immortality'
SELECT COUNT(`cards`.`id`), `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = 'future' GROUP BY `legalities`.`status`
SELECT `cards`.`name`, `cards`.`colors` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`code` = 'OGW'
SELECT `cards`.`name`, `set_translations`.`language` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`setCode` = '10E' AND `cards`.`convertedManaCost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originalType` = 'Creature - Elf'
SELECT `cards`.`colors`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`originalType` = 'Artifact' AND `cards`.`colors` = 'B'
SELECT `cards`.`name` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'uncommon' GROUP BY `cards`.`name` ORDER BY MIN(`rulings`.`date`) ASC LIMIT 3
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'John Avon' AND `cardKingdomFoilId` IS NULL
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'UDON' AND `availability` LIKE '%mtgo%' AND `hand` = -1
SELECT COUNT(`id`) FROM `cards` WHERE `frameVersion` = '1993' AND `availability` = 'paper' AND `hasContentWarning` = 1
SELECT `cards`.`manaCost` FROM `cards` WHERE `layout` = 'normal' AND `frameVersion` = '2003' AND `borderColor` = 'black' AND `availability` = 'mtgo,paper'
SELECT SUM(CAST(SUBSTR(`manaCost`, 2, LENGTH(`manaCost`) - 2) AS INTEGER)) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `subtypes`, `supertypes` FROM `cards` WHERE `availability` LIKE '%arena%'
SELECT `set_translations`.`setCode` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'Spanish'
SELECT (COUNT(`cards`.`id`) * 1.0 / (SELECT COUNT(`cards`.`id`) FROM `cards` WHERE `frameEffects` = 'legendary')) * 100 AS percentage FROM `cards` WHERE `frameEffects` = 'legendary' AND `isOnlineOnly` = 1
SELECT CAST(SUM(CASE WHEN `cards`.`isStorySpotlight` = 1 AND `cards`.`isTextless` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) AS percentage FROM `cards`
SELECT `cards`.`name`, CAST(COUNT(CASE WHEN `foreign_data`.`language` = 'Spanish' THEN `foreign_data`.`uuid` ELSE NULL END) AS REAL) * 100 / COUNT(`foreign_data`.`uuid`) AS percentage_spanish FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` GROUP BY `cards`.`name`
SELECT `set_translations`.`language` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `sets`.`baseSetSize` = 309
SELECT COUNT(DISTINCT `set_translations`.`setCode`) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`block` = 'Commander' AND `set_translations`.`language` = 'Portuguese (Brasil)'
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'Legal'
SELECT `cards`.`name`, `foreign_data`.`name` AS `german_name`, `cards`.`subtypes`, `cards`.`supertypes` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`subtypes` IS NOT NULL AND `cards`.`supertypes` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(*) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `legalities`.`format` = 'premodern' AND `rulings`.`text` = 'This is a triggered mana ability.' AND `cards`.`side` IS NULL
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `cards`.`availability` = 'paper' AND `legalities`.`format` = 'pauper'
SELECT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`text` = 'Das perfekte Gegenmittel zu einer dichten Formation'
SELECT foreign_data.`name` FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE cards.`artist` = 'Matthew D. Wilson' AND cards.`layout` = 'normal' AND cards.`borderColor` = 'black' AND foreign_data.`language` = 'French'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`baseSetSize` = 180 AND `sets`.`block` = 'Ravnica'
SELECT CAST(SUM(CASE WHEN `cards`.`hasContentWarning` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'commander' AND `legalities`.`status` = 'legal'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' AND (`cards`.`power` IS NULL OR `cards`.`power` = '*') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN `cards`.`power` IS NULL OR `cards`.`power` = '*' THEN 1 END) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid`
SELECT CAST(SUM(CASE WHEN `sets`.`type` = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'Japanese'
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000
SELECT COUNT(`id`) FROM `cards` WHERE `isOversized` = 1 AND `isReprint` = 1 AND `isPromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promoTypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT `language` FROM `foreign_data` WHERE `multiverseid` = 149934
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `cardKingdomFoilId` ASC LIMIT 3
SELECT CAST(COUNT(CASE WHEN `cards`.`isTextless` = 1 AND `cards`.`layout` = 'normal' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`cards`.`isTextless`) FROM `cards`
SELECT `cards`.`number` FROM `cards` WHERE `cards`.`side` IS NULL AND `cards`.`subtypes` LIKE '%Angel%' AND `cards`.`subtypes` LIKE '%Wizard%'
SELECT `name` FROM `sets` WHERE `mtgoCode` IS NULL OR `mtgoCode` = '' ORDER BY `name` ASC LIMIT 3
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`mcmName` = 'Archenemy' AND `sets`.`code` = 'ARC'
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 5
SELECT `sets`.`language`, `sets`.`type` FROM `sets` WHERE `sets`.`id` = 206
SELECT `sets`.`id`, `sets`.`code` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `sets`.`code` ASC LIMIT 2
SELECT `sets`.`id` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`isForeignOnly` = 1 AND `sets`.`isFoilOnly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `sets`.`name`, `sets`.`baseSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Russian' ORDER BY `sets`.`baseSetSize` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `cards`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`isOnlineOnly`) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Chinese Simplified'
SELECT COUNT(*) FROM `sets` AS s INNER JOIN `set_translations` AS st ON s.`code` = st.`setCode` WHERE st.`language` = 'Japanese' AND (s.`mtgoCode` IS NULL OR s.`mtgoCode` = '')
SELECT `id` FROM `cards` WHERE `borderColor` = 'black'
SELECT `id` FROM `cards` WHERE `frameEffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `borderColor` = 'black' AND `isFullArt` = 1
SELECT `set_translations`.`language` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `sets`.`id` = 174
SELECT `sets`.`name` FROM `sets` JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`setCode` = 'ALL'
SELECT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2007-07-13'
SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `sets`.`code` FROM `sets` WHERE `sets`.`type` = 'expansion'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'boros'
SELECT `foreign_data`.`language`, `foreign_data`.`flavorText`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT CAST(SUM(CASE WHEN `cards`.`convertedManaCost` = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`convertedManaCost`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Abyssal Horror'
SELECT `sets`.`code` FROM `sets` WHERE `sets`.`type` = 'commander'
SELECT `foreign_data`.`name`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `foreign_data`.`language`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `isTextless` = 0
SELECT `manaCost` FROM `cards` WHERE `name` = 'Ancestor`s Chosen'
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `cards`.`name` FROM `cards` WHERE `cards`.`isPromo` = 1 AND `cards`.`side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseUrls` FROM `cards` WHERE `promoTypes` LIKE '%bundle%'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` LIKE '%arena,mtgo%'
SELECT `name`, `convertedManaCost` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameVersion` = '2003' ORDER BY `convertedManaCost` DESC LIMIT 3
SELECT `set_translations`.`translation` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `set_translations`.`language`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Angel of Mercy'
SELECT `cards`.`name` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`language` = 'Korean'
SELECT COUNT(*) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition' AND `cards`.`artist` = 'Adam Rex'
SELECT `baseSetSize` FROM `sets` WHERE `name` = 'Tenth Edition'
SELECT `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`name` = 'Eighth Edition' AND `set_translations`.`language` = 'Chinese Simplified'
SELECT COUNT(*) FROM `cards` INNER JOIN `sets` ON `cards`.`mtgoCode` = `sets`.`mtgoCode` WHERE `cards`.`name` = 'Angel of Mercy' AND `sets`.`mtgoCode` IS NOT NULL
SELECT sets.`releaseDate` FROM sets INNER JOIN cards ON sets.`code` = cards.`setCode` WHERE cards.`name` = 'Ancestor''s Chosen'
SELECT `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`block` = 'Ice Age' AND T2.`language` = 'Italian' AND T2.`translation` IS NOT NULL
SELECT `sets`.`isForeignOnly` FROM `sets` INNER JOIN `cards` ON `sets`.`code` = `cards`.`setCode` WHERE `cards`.`name` = 'Adarkar Valkyrie'
SELECT COUNT(*) FROM `set_translations` AS st INNER JOIN `sets` AS s ON st.`setCode` = s.`code` WHERE st.`language` = 'Italian' AND st.`translation` IS NOT NULL AND s.`baseSetSize` < 100
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`borderColor` = 'black'
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`number` = 4
SELECT COUNT(*) FROM `cards` WHERE `setCode` = 'Coldsnap' AND `convertedManaCost` > 5 AND (`power` = '*' OR `power` IS NULL)
SELECT `foreign_data`.`flavorText` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`language` = 'Italian'
SELECT `foreign_data`.`language` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`flavorText` IS NOT NULL
SELECT `foreign_data`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`language` = 'German'
SELECT `foreign_data`.`text` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian'
SELECT fd.`name` FROM `cards` AS c INNER JOIN `foreign_data` AS fd ON c.`uuid` = fd.`uuid` INNER JOIN `sets` AS s ON c.`setCode` = s.`code` WHERE s.`name` = 'Coldsnap' AND fd.`language` = 'Italian' ORDER BY c.`convertedManaCost` DESC LIMIT 1
SELECT rulings.`date` FROM rulings INNER JOIN cards ON rulings.`uuid` = cards.`uuid` WHERE cards.`name` = 'Reminisce'
SELECT CAST(SUM(CASE WHEN `cards`.`convertedManaCost` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap'
SELECT CAST(SUM(CASE WHEN `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` WHERE `name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2017-07-14'
SELECT `keyruneCode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmId` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmName` FROM `sets` WHERE `releaseDate` = '2017-06-09'
SELECT `sets`.`type` FROM `sets` WHERE `sets`.`name` = 'From the Vault: Lore'
SELECT `parentCode` FROM `sets` WHERE `name` = 'Commander 2014 Oversized'
SELECT `cards`.`id`, `cards`.`artist`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Jim Pavelec'
SELECT `sets`.`releaseDate` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Evacuation'
SELECT `sets`.`baseSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Rinascita di Alara'
SELECT `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Huitième édition'
SELECT `set_translations`.`translation` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `set_translations`.`language` = 'French' AND `sets`.`name` = 'Tendo Ice Bridge'
SELECT COUNT(*) FROM `set_translations` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Tenth Edition')
SELECT `set_translations`.`translation` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Fellwar Stone' AND `set_translations`.`language` = 'Japanese'
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Journey into Nyx Hero''s Path' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1
SELECT sets.`releaseDate` FROM sets INNER JOIN set_translations ON sets.`code` = set_translations.`setCode` WHERE set_translations.`translation` = 'Ola de frío'
SELECT `sets`.`type` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Samite Pilgrim'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'World Championship Decks 2004' AND `cards`.`convertedManaCost` = '3'
SELECT `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`name` = 'Mirrodin' AND `set_translations`.`language` = 'Chinese Simplified'
SELECT CAST(SUM(CASE WHEN `cards`.`isNonFoil` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `cards`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`uuid`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Portuguese (Brazil)'
SELECT `cards`.`availability` FROM `cards` WHERE `cards`.`artist` = 'Aleksi Briclot' AND `cards`.`isTextless` = 1
SELECT `id` FROM `sets` ORDER BY `baseSetSize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `cards`.`frameEffects` FROM `cards` WHERE `cards`.`cardKingdomFoilId` IS NOT NULL AND `cards`.`cardKingdomId` IS NOT NULL ORDER BY `cards`.`frameEffects` DESC LIMIT 1
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasFoil` = 0 AND `duelDeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalSetSize` DESC LIMIT 1
SELECT `cards`.`name`, `cards`.`manaCost` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'duel' ORDER BY `cards`.`manaCost` DESC LIMIT 10
SELECT `cards`.`originalReleaseDate`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' ORDER BY `cards`.`originalReleaseDate` ASC LIMIT 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Volkan Baǵa' AND T2.`language` = 'French'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT `format`, `name` FROM `legalities` INNER JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `status` = 'Banned' ORDER BY (SELECT COUNT(*) FROM `legalities` AS `l2` WHERE `l2`.`format` = `legalities`.`format` AND `l2`.`status` = 'Banned') DESC LIMIT 1
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`name` = 'Battlebond'
SELECT `cards`.`artist`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` GROUP BY `cards`.`artist` ORDER BY COUNT(`cards`.`artist`) ASC LIMIT 1
SELECT `legalities`.`status` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = '1997' AND `cards`.`artist` = 'D. Alexander Gregory' AND (`cards`.`hasContentWarning` = 1 OR `cards`.`artist` = 'Wizards of the Coast') AND `legalities`.`format` = 'legacy'
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`edhrecRank` = 1 AND `legalities`.`status` = 'Banned'
SELECT AVG(id) AS annual_average, (SELECT language FROM set_translations GROUP BY language ORDER BY COUNT(language) DESC LIMIT 1) AS common_language FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT DISTINCT `cards`.`artist` FROM `cards` WHERE `cards`.`borderColor` = 'black' AND `cards`.`availability` = 'arena'
SELECT `cards`.`uuid` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'oldschool' AND (`legalities`.`status` = 'banned' OR `legalities`.`status` = 'restricted')
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT r.`date`, r.`text` FROM `cards` c INNER JOIN `rulings` r ON c.`uuid` = r.`uuid` WHERE c.`artist` = 'Kev Walker' ORDER BY r.`date` DESC
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `sets`.`name` = 'Hour of Devastation' AND `legalities`.`status` = 'Legal'
SELECT `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Korean' AND NOT EXISTS (SELECT 1 FROM `set_translations` AS `st` WHERE `st`.`setCode` = `sets`.`code` AND `st`.`language` = 'Japanese')
SELECT `cards`.`frameVersion`, `cards`.`name`, `cards`.`artist`, `legalities`.`status` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' OR `legalities`.`status` = 'Banned'
SELECT `DisplayName`, `Reputation` FROM `users` WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') ORDER BY `Reputation` DESC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE strftime('%Y', `CreationDate`) = '2011'
SELECT COUNT(users.`Id`) FROM users WHERE users.`LastAccessDate` > '2014-09-01'
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT COUNT(*) FROM `users` WHERE `UpVotes` > 100 AND `DownVotes` > 1
SELECT COUNT(`users`.`Id`) FROM `users` WHERE `users`.`Views` > 10 AND strftime('%Y', `users`.`CreationDate`) > '2013'
SELECT COUNT(`posts`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT SUM(`posts`.`CommentCount`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `posts`.`AnswerCount` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' ORDER BY `posts`.`AnswerCount` DESC LIMIT 1
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(`posts`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'csgillespie' AND `posts`.`ParentId` IS NULL
SELECT DISTINCT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ClosedDate` IS NOT NULL
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` > 65 AND `posts`.`Score` >= 20
SELECT `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `posts`.`Body` FROM `tags` INNER JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` WHERE `tags`.`TagName` = 'bayesian'
SELECT `posts`.`Body` FROM `tags` INNER JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` ORDER BY `tags`.`Count` DESC LIMIT 1
SELECT COUNT(`badges`.`Id`) FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie';
SELECT COUNT(`badges`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `users`.`Id` ORDER BY COUNT(`badges`.`Id`) DESC LIMIT 1
SELECT AVG(`posts`.`Score`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT AVG(badge_count) FROM (SELECT COUNT(`badges`.`Id`) AS badge_count FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Views` > 200 GROUP BY `users`.`DisplayName`) AS badge_counts
SELECT (COUNT(DISTINCT CASE WHEN T2.Age > 65 THEN T1.Id END) * 100.0 / COUNT(DISTINCT T1.Id)) AS percentage FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5
SELECT COUNT(`votes`.`Id`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`Id` = 58 AND `votes`.`CreationDate` = '2010-07-19'
SELECT `CreationDate` FROM `votes` GROUP BY `CreationDate` ORDER BY COUNT(`Id`) DESC LIMIT 1;
SELECT COUNT(`Id`) FROM `badges` WHERE `Name` = 'Revival'
SELECT `posts`.`Title` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT `posts`.`CommentCount` FROM `posts` WHERE `posts`.`ViewCount` = 1910
SELECT `posts`.`FavoriteCount` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`UserId` = 3025 AND `comments`.`CreationDate` = '2014-04-23 20:29:39.0'
SELECT comments.`Text` FROM posts INNER JOIN comments ON posts.`Id` = comments.`PostId` WHERE posts.`ParentId` = 107829 AND posts.`CommentCount` = 1
SELECT `posts`.`ClosedDate` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`UserId` = '23853' AND `comments`.`CreationDate` = '2013-07-12 09:08:18.0'
SELECT `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 65041
SELECT COUNT(`posts`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'Tiago Pasqualini'
SELECT `users`.`DisplayName` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`Id` = 6347
SELECT COUNT(`votes`.`Id`) FROM `votes` INNER JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%data visualization%';
SELECT `badges`.`Name` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'
SELECT COUNT(`posts`.`Id`) / COUNT(`votes`.`Id`) FROM `posts` LEFT JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `posts`.`OwnerUserId` = 24
SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `Text` FROM `comments` WHERE `Score` = 17
SELECT `DisplayName` FROM `users` WHERE `WebsiteUrl` = 'http://stackoverflow.com'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'SilentGhost'
SELECT `users`.`DisplayName` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'thank you user93!'
SELECT `comments`.`Text` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'A Lion'
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Understanding what Dassault iSight is doing?'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'How does gentle boosting differ from AdaBoost?'
SELECT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Necromancer' LIMIT 10
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Open source tools for visualizing multi-dimensional data'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Vebjorn Ljosa'
SELECT SUM(`posts`.`Score`), `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Yevgeny'
SELECT T2.`Text` FROM `posts` AS T1 INNER JOIN `comments` AS T2 ON T1.`Id` = T2.`PostId` INNER JOIN `postHistory` AS T3 ON T1.`Id` = T3.`PostId` WHERE T1.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' AND T2.`UserId` = T3.`UserId`
SELECT SUM(`votes`.`BountyAmount`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `posts`.`Title` LIKE '%data%'
SELECT `users`.`DisplayName` FROM `votes` INNER JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`BountyAmount` = 50 AND `posts`.`Title` LIKE '%variance%'
SELECT posts.`Title`, comments.`Text`, AVG(posts.`ViewCount`) AS average_view_count FROM posts INNER JOIN tags ON posts.`Id` = tags.`ExcerptPostId` INNER JOIN comments ON posts.`Id` = comments.`PostId` WHERE tags.`TagName` = '<humor>' GROUP BY posts.`Title`, comments.`Text`
SELECT COUNT(`comments`.`Id`) FROM `comments` WHERE `comments`.`UserId` = 13
SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT `Id` FROM `users` ORDER BY `Views` LIMIT 1
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` GROUP BY `badges`.`UserId` HAVING COUNT(`badges`.`Name`) > 5
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` IN ('Teacher', 'Supporter') AND `users`.`Location` = 'New York'
SELECT `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 1
SELECT T1.`Id`, T1.`DisplayName` FROM `users` AS T1 INNER JOIN `postHistory` AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN `posts` AS T3 ON T2.`PostId` = T3.`Id` WHERE T1.`Views` >= 1000 GROUP BY T2.`PostId`, T2.`UserId` HAVING COUNT(T2.`PostId`) = 1
SELECT `users`.`Id`, `users`.`DisplayName`, `badges`.`Name`, `badges`.`Date` FROM `users` INNER JOIN `comments` ON `users`.`Id` = `comments`.`UserId` LEFT JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `users`.`Id` ORDER BY COUNT(`comments`.`Id`) DESC LIMIT 1
SELECT COUNT(*) FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'India' AND `badges`.`Name` = 'Teacher'
SELECT (CAST(SUM(CASE WHEN strftime('%Y', `badges`.`Date`) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 - CAST(SUM(CASE WHEN strftime('%Y', `badges`.`Date`) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) AS percentage_difference FROM `badges` WHERE `badges`.`Name` = 'Student'
SELECT postHistory.`PostHistoryTypeId`, COUNT(DISTINCT comments.`UserId`) FROM postHistory LEFT JOIN comments ON postHistory.`PostId` = comments.`PostId` WHERE postHistory.`PostId` = 3720 GROUP BY postHistory.`PostHistoryTypeId`
SELECT `posts`.`Id`, `posts`.`Title`, `posts`.`ViewCount` AS Popularity FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`RelatedPostId` WHERE `postLinks`.`PostId` = 61217
SELECT `posts`.`Score`, `postLinks`.`LinkTypeId` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`PostId` WHERE `posts`.`Id` = 395
SELECT `posts`.`Id`, `posts`.`OwnerUserId` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Score` > 60
SELECT SUM(`posts`.`FavoriteCount`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Id` = 686 AND strftime('%Y', `posts`.`CreaionDate`) = '2011'
SELECT SUM(`users`.`UpVotes`) / COUNT(`users`.`Id`) AS `average_up_votes`, SUM(`users`.`Age`) / COUNT(`users`.`Id`) AS `average_age` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` GROUP BY `users`.`Id` HAVING COUNT(`posts`.`Id`) > 10
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` WHERE `badges`.`Name` = 'Announcer'
SELECT `badges`.`Name` FROM `badges` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT COUNT(*) FROM `comments` WHERE `Score` > 60
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `Score` = 10
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT `users`.`Reputation` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Pierre'
SELECT `badges`.`Date` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'Rochester, NY'
SELECT CAST(SUM(CASE WHEN `badges`.`Name` = 'Teacher' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id`
SELECT CAST(COUNT(CASE WHEN users.`Age` BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(users.`Id`) FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE badges.`Name` = 'Organizer'
SELECT `comments`.`Score` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreationDate` = '2010-07-19 19:19:56.0'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:37:33.0'
SELECT `users`.`Age` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'Vienna, Austria'
SELECT COUNT(`users`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` BETWEEN 19 AND 65
SELECT SUM(users.`Views`) FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE badges.`Date` = '2010-07-19 19:39:08.0'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MIN(`Reputation`) FROM `users`)
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Sharpie'
SELECT COUNT(*) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` > 65
SELECT `DisplayName` FROM `users` WHERE `Id` = 30
SELECT COUNT(*) FROM `users` WHERE `Location` = 'New York, NY'
SELECT COUNT(*) FROM `votes` WHERE YEAR(`CreationDate`) = 2010
SELECT COUNT(`Id`) FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2010' THEN `Id` ELSE NULL END) AS REAL) / COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2011' THEN `Id` ELSE NULL END) FROM `votes`
SELECT `tags`.`TagName` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `users`.`DisplayName` = 'John Salvatier'
SELECT COUNT(`posts`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'Daniel Vassallo'
SELECT COUNT(`votes`.`Id`) FROM `users` INNER JOIN `votes` ON `users`.`Id` = `votes`.`UserId` WHERE `users`.`DisplayName` = 'Harlan';
SELECT `posts`.`Id` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'slashnick' ORDER BY `posts`.`AnswerCount` DESC LIMIT 1
SELECT T1.`OwnerUserId`, MAX(T1.`ViewCount`) AS max_view_count FROM `posts` AS T1 INNER JOIN `users` AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T1.`OwnerUserId` ORDER BY max_view_count DESC LIMIT 1
SELECT COUNT(`posts`.`Id`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `users`.`DisplayName` = 'Matt Parker' AND `votes`.`VoteTypeId` > 4
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `comments`.`Score` < 60 AND `users`.`DisplayName` = 'Neil McGuigan'
SELECT DISTINCT `tags`.`TagName` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `tags` ON `tags`.`TagName` = `posts`.`Tags` WHERE `users`.`DisplayName` = 'Mark Meckes' AND `posts`.`CommentCount` = 0
SELECT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Organizer'
SELECT CAST(SUM(CASE WHEN T1.`Tags` LIKE '%<r>%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.`Id`) FROM `posts` AS T1 INNER JOIN `users` AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Community'
SELECT (SELECT SUM(`posts`.`ViewCount`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Mornington') - (SELECT SUM(`posts`.`ViewCount`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Amos') AS difference
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Commentator' AND strftime('%Y', `badges`.`Date`) = '2014'
SELECT COUNT(`Id`) FROM `posts` WHERE `CreaionDate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `users`.`DisplayName`, `users`.`Age` FROM `users` ORDER BY `users`.`Views` DESC LIMIT 1
SELECT `posts`.`LastEditDate`, `posts`.`LastEditorUserId` FROM `posts` WHERE `posts`.`Title` = 'Detecting a given face in a database of facial images'
SELECT COUNT(`comments`.`Id`) FROM `comments` WHERE `comments`.`UserId` = 13 AND `comments`.`Score` < 60
SELECT DISTINCT p.`Title`, u.`DisplayName` FROM `comments` c INNER JOIN `posts` p ON c.`PostId` = p.`Id` INNER JOIN `users` u ON c.`UserId` = u.`Id` WHERE c.`Score` > 60
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'North Pole' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`FavoriteCount` > 150
SELECT `posts`.`Title`, COUNT(`postHistory`.`Id`) AS `HistoryCount`, MAX(`posts`.`LastEditDate`) AS `LastEditDate` FROM `posts` LEFT JOIN `postHistory` ON `posts`.`Id` = `postHistory`.`PostId` WHERE `posts`.`Title` = 'What is the best introductory Bayesian statistics textbook?' GROUP BY `posts`.`Title`
SELECT `users`.`LastAccessDate`, `users`.`Location` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Outliers'
SELECT `posts`.`Title` FROM `posts` WHERE `posts`.`Id` = (SELECT `postLinks`.`RelatedPostId` FROM `postLinks` INNER JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'How to tell if something happened in a data set which monitors a value over time')
SELECT `posts`.`Id`, `badges`.`Name` FROM `posts` INNER JOIN `badges` ON `posts`.`OwnerUserId` = `badges`.`UserId` WHERE `posts`.`UserDisplayName` = 'Samuel' AND YEAR(`posts`.`CreationDate`) = 2013 AND YEAR(`badges`.`Date`) = 2013
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, `users`.`Location` FROM `tags` INNER JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `tags`.`TagName` = 'hypothesis-testing'
SELECT T2.Title, T1.LinkTypeId FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.RelatedPostId = T2.Id WHERE T1.PostId = (SELECT Id FROM posts WHERE Title = 'What are principal component scores?')
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ParentId` IS NOT NULL ORDER BY `posts`.`Score` DESC LIMIT 1
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`VoteTypeId` = 8 ORDER BY `votes`.`BountyAmount` DESC LIMIT 1
SELECT `Title` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 5
SELECT COUNT(*) FROM `tags` WHERE `Count` BETWEEN 5000 AND 7000
SELECT `OwnerUserId` FROM `posts` ORDER BY `FavoriteCount` DESC LIMIT 1
SELECT `Age` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `posts`.`CreaionDate` >= '2011-01-01' AND `posts`.`CreaionDate` < '2012-01-01' AND `votes`.`BountyAmount` = 50
SELECT `Id` FROM `users` WHERE `Age` = (SELECT MIN(`Age`) FROM `users`)
SELECT SUM(`posts`.`Score`) FROM `posts` WHERE `posts`.`LasActivityDate` LIKE '2010-07-19%'
SELECT COUNT(`postLinks`.`Id`) / 12.0 AS average_monthly_links FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE YEAR(`postLinks`.`CreationDate`) = 2010 AND `posts`.`AnswerCount` <= 2
SELECT `posts`.`Id` FROM `posts` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `votes`.`UserId` = 1465 ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT `posts`.`Title` FROM `postLinks` INNER JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` ORDER BY `postLinks`.`CreationDate` ASC LIMIT 1
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `users`.`Id` ORDER BY COUNT(`badges`.`Name`) DESC LIMIT 1
SELECT MIN(`votes`.`CreationDate`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'chl'
SELECT `posts`.`CreaionDate` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`Age` = (SELECT MIN(`Age`) FROM `users`) ORDER BY `posts`.`CreaionDate` ASC LIMIT 1
SELECT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Autobiographer' ORDER BY `badges`.`Date` ASC LIMIT 1
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`Location` = 'United Kingdom' AND `posts`.`FavoriteCount` >= 4
SELECT AVG(`votes`.`PostId`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`Age` = (SELECT MAX(`Age`) FROM `users`)
SELECT `DisplayName` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT COUNT(`Id`) FROM `users` WHERE `Reputation` > 2000 AND `Views` > 1000
SELECT `users`.`DisplayName` FROM `users` WHERE `users`.`Age` BETWEEN 19 AND 65
SELECT COUNT(`posts`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'Jay Stevens' AND YEAR(`posts`.`CreaionDate`) = 2010
SELECT `posts`.`Id`, `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harvey Motulsky' ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `Id`, `Title` FROM `posts` ORDER BY `Score` DESC LIMIT 1;
SELECT AVG(`posts`.`Score`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'Stephen Turner'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ViewCount` > 20000 AND YEAR(`posts`.`CreaionDate`) = 2011
SELECT `posts`.`Id`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE STRFTIME('%Y', `posts`.`CreationDate`) = '2010' ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT CAST(COUNT(DISTINCT `posts`.`Id`) AS REAL) * 100 / COUNT(*) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`CreationDate` LIKE '2011-%' AND `users`.`Reputation` > 1000
SELECT COUNT(`users`.`Id`) FILTER (WHERE `users`.`Age` BETWEEN 13 AND 18) * 1.0 / COUNT(`users`.`Id`) AS percentage FROM `users`
SELECT `posts`.`ViewCount`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Text` = 'Computer Game Datasets'
SELECT COUNT(*) FROM posts WHERE `ViewCount` > (SELECT AVG(`ViewCount`) FROM posts)
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Score` = (SELECT MAX(`Score`) FROM `posts`)
SELECT COUNT(`posts`.`Id`) FROM `posts` WHERE `posts`.`ViewCount` > 35000 AND `posts`.`CommentCount` = 0
SELECT `users`.`DisplayName`, `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Id` = 183 ORDER BY `posts`.`LastEditDate` DESC LIMIT 1
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Emmett' ORDER BY `badges`.`Date` DESC LIMIT 1
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` INNER JOIN `votes` ON `users`.`Id` = `votes`.`UserId` WHERE `users`.`Age` BETWEEN 19 AND 65 AND `users`.`UpVotes` > 5000
SELECT JULIANDAY(`badges`.`Date`) - JULIANDAY(`users`.`CreationDate`) AS days_to_badge FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`DisplayName` = 'Zolomon'
SELECT COUNT(DISTINCT `posts`.`Id`) AS post_count, COUNT(DISTINCT `comments`.`Id`) AS comment_count FROM `users` LEFT JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` LEFT JOIN `comments` ON `users`.`Id` = `comments`.`UserId` WHERE `users`.`CreationDate` = (SELECT MAX(`CreationDate`) FROM `users`)
SELECT comments.`Text`, users.`DisplayName` FROM comments INNER JOIN posts ON comments.`PostId` = posts.`Id` INNER JOIN users ON comments.`UserId` = users.`Id` WHERE posts.`Title` = 'Analysing wind data with R' ORDER BY comments.`CreationDate` DESC LIMIT 10
SELECT COUNT(DISTINCT `badges`.`UserId`) FROM `badges` WHERE `badges`.`Name` = 'Citizen Patrol'
SELECT COUNT(`posts`.`Id`) FROM `tags` INNER JOIN `posts` ON `tags`.`ExcerptPostId` = `posts`.`Id` WHERE `tags`.`TagName` = 'careers'
SELECT `Reputation`, `Views` FROM `users` WHERE `DisplayName` = 'Jarrod Dixon'
SELECT COUNT(DISTINCT `comments`.`Id`) AS CommentCount, SUM(`posts`.`AnswerCount`) AS AnswerCount FROM `posts` LEFT JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Clustering 1D data'
SELECT `CreationDate` FROM `users` WHERE `DisplayName` = 'IrishStat'
SELECT COUNT(DISTINCT `votes`.`PostId`) FROM `votes` INNER JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` WHERE `votes`.`BountyAmount` >= 30
SELECT CAST(SUM(CASE WHEN `posts`.`Score` > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(*) FROM `posts` WHERE `Score` < 20
SELECT COUNT(`tags`.`Id`) FROM `tags` WHERE `tags`.`Id` < 15 AND `tags`.`Count` <= 20
SELECT `ExcerptPostId`, `WikiPostId` FROM `tags` WHERE `TagName` = 'sample'
SELECT `users`.`Reputation`, `users`.`UpVotes` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'fine, you win :)'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%linear regression%'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`ViewCount` BETWEEN 100 AND 150 ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT comments.`CreationDate`, users.`Age` FROM comments INNER JOIN users ON comments.`UserId` = users.`Id` WHERE comments.`Text` LIKE '%http://%'
SELECT COUNT(DISTINCT `comments`.`PostId`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` = 0 AND `posts`.`ViewCount` < 5
SELECT COUNT(`comments`.`Id`) FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`CommentCount` = 1 AND `comments`.`Score` = 0
SELECT COUNT(DISTINCT `users`.`Id`) FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` = 0 AND `users`.`Age` = 40
SELECT `comments`.`Id`, `comments`.`Text` FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Group differences on a five point Likert item'
SELECT users.`UpVotes` FROM comments INNER JOIN users ON comments.`UserId` = users.`Id` WHERE comments.`Text` = 'R is also lazy evaluated.'
SELECT comments.`Text` FROM comments JOIN users ON comments.`UserId` = users.`Id` WHERE users.`DisplayName` = 'Harvey Motulsky'
SELECT DISTINCT `users`.`DisplayName` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 1 AND 5 AND `users`.`DownVotes` = 0
SELECT CAST(COUNT(CASE WHEN `users`.`UpVotes` = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`comments`.`UserId`) FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 5 AND 10
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength' AND `superhero`.`height_cm` > 200
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` HAVING COUNT(`hero_power`.`power_id`) > 15
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Blond'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name`, `superhero`.`height_cm` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' ORDER BY `superhero`.`height_cm` DESC
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Sauron'
SELECT `superhero`.`superhero_name`, `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' GROUP BY `colour`.`colour` ORDER BY COUNT(`superhero`.`id`) DESC
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics';
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' AND `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics'
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T3.attribute_value ASC LIMIT 1
SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'
SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.superhero_name = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` INNER JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blond'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Intelligence' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Durability' AND `hero_attribute`.`attribute_value` < 50
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `hero_attribute` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `attribute` AS T4 ON T3.`attribute_id` = T4.`id` WHERE T2.`gender` = 'Female' AND T4.`attribute_name` = 'Strength' AND T3.`attribute_value` = 100
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`id` ORDER BY COUNT(`hero_power`.`power_id`) DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT CAST(COUNT(CASE WHEN T1.alignment_id = T3.id AND T3.alignment = 'Bad' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) AS percentage_bad_alignment, COUNT(CASE WHEN T1.alignment_id = T3.id AND T3.alignment = 'Bad' AND T1.publisher_id = T2.id AND T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS marvel_bad_alignment FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id
SELECT COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(T2.attribute_value) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Deathlok'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT DISTINCT T3.`power_name` FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `hero_power` AS T4 ON T1.`id` = T4.`hero_id` INNER JOIN `superpower` AS T3 ON T4.`power_id` = T3.`id` WHERE T2.`gender` = 'Male' LIMIT 5
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`height_cm` BETWEEN 170 AND 190 AND `colour`.`colour` = 'No Colour'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`id` = 56
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(*) FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Bad'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T1.race_id = (SELECT id FROM race WHERE race = 'Human') AND T1.height_cm = 185
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`height_cm` BETWEEN 150 AND 180
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Male' AND `superhero`.`weight_kg` > (SELECT 0.79 * AVG(`weight_kg`) FROM `superhero`)
SELECT T2.`power_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` GROUP BY T3.`power_name` ORDER BY COUNT(T3.`power_name`) DESC LIMIT 1
SELECT T2.`attribute_value` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`superhero_name` = 'Abomination'
SELECT T2.`power_name` FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `superpower` AS T3 ON T2.`power_id` = T3.`id` WHERE T1.`id` = 1
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'stealth'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT CAST(COUNT(`superhero`.`id`) AS REAL) / SUM(IIF(`skin_colour_id` = 1, 1, 0)) AS average FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `colour`.`id` = 1
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `attribute`.`attribute_name` = 'durability' AND `publisher`.`publisher_name` = 'Dark Horse Comics' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight'
SELECT `colour1`.`colour` AS `eyes`, `colour2`.`colour` AS `hair`, `colour3`.`colour` AS `skin` FROM `superhero` AS `T1` INNER JOIN `colour` AS `colour1` ON `T1`.`eye_colour_id` = `colour1`.`id` INNER JOIN `colour` AS `colour2` ON `T1`.`hair_colour_id` = `colour2`.`id` INNER JOIN `colour` AS `colour3` ON `T1`.`skin_colour_id` = `colour3`.`id` INNER JOIN `gender` AS `T2` ON `T1`.`gender_id` = `T2`.`id` INNER JOIN `publisher` AS `T3` ON `T1`.`publisher_id` = `T3`.`id` WHERE `T2`.`gender` = 'Female' AND `T3`.`publisher_name` = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name`, `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`hair_colour_id` = `superhero`.`skin_colour_id` AND `superhero`.`hair_colour_id` = `superhero`.`eye_colour_id`
SELECT T2.`race` FROM `superhero` AS T1 INNER JOIN `race` AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`superhero_name` = 'A-Bomb'
SELECT CAST(SUM(CASE WHEN `colour`.`colour` = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `gender`.`gender` = 'Female'
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id WHERE T1.superhero_name = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`superhero_name` = 'Amazo'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Hunter Zolomon'
SELECT `superhero`.`height_cm` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Amber'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Black' AND `hair_colour`.`colour` = 'Black'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength' AND `hero_attribute`.`attribute_value` = (SELECT MAX(`hero_attribute`.`attribute_value`) FROM `hero_attribute` JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength')
SELECT `race`.`race`, `alignment`.`alignment` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `superhero`.`superhero_name` = 'Cameron Hicks'
SELECT CAST(COUNT(CASE WHEN T1.gender = 'Female' THEN T2.id ELSE NULL END) AS REAL) / COUNT(T2.id) * 100 AS percent FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT (SELECT `weight_kg` FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT `weight_kg` FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS difference
SELECT AVG(`height_cm`) FROM `superhero`
SELECT `superpower`.`power_name` FROM `superhero` JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` WHERE T1.`race_id` = 21 AND T2.`id` = 1
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Brown'
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` = 1
SELECT CAST(SUM(CASE WHEN `colour`.`id` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id`
SELECT CAST(COUNT(CASE WHEN T1.gender_id = 2 THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.gender_id = 1 THEN 1 ELSE NULL END) AS RATIO FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Helen Parr'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`id` = 38
SELECT `race`.`race` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT T1.`alignment`, T3.`power_name` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` INNER JOIN hero_power AS T4 ON T1.`id` = T4.`hero_id` INNER JOIN superpower AS T3 ON T4.`power_id` = T3.`id` WHERE T1.`superhero_name` = 'Atom IV'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(T2.attribute_value) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.alignment_id = 3
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `alignment` AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`id` = 2 AND T3.`id` = 1
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT T3.`race` FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`hair_colour_id` = T2.`id` INNER JOIN `race` AS T3 ON T1.`race_id` = T3.`id` INNER JOIN `gender` AS T4 ON T1.`gender_id` = T4.`id` WHERE T2.`colour` = 'blue' AND T4.`gender` = 'male'
SELECT (CAST(COUNT(CASE WHEN `gender`.`id` = 2 THEN `superhero`.`id` ELSE NULL END) AS REAL) / COUNT(`superhero`.`id`)) * 100.0 AS percentage FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `alignment`.`id` = 2
SELECT COUNT(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE NULL END) - COUNT(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE NULL END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL
SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Ajax'
SELECT COUNT(*) FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `colour`.`colour` = 'Green' AND `alignment`.`alignment` = 'Bad'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT T3.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN superpower AS T4 ON T2.power_id = T4.id WHERE T4.power_name = 'Phoenix Force'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics' ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` <> 'Human' AND `publisher`.`publisher_name` = 'Dark Horse Comics';
SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.attribute_value = 100 AND T2.attribute_name = 'Speed'
SELECT COUNT(CASE WHEN T2.publisher_name = 'DC Comics' THEN T1.id ELSE NULL END) - COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) AS difference FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id
SELECT `attribute`.`attribute_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = 'Black Panther' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler'
SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'George Lucas'
SELECT CAST(SUM(CASE WHEN `alignment`.`alignment` = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%'
SELECT `hero_id` FROM `hero_attribute` ORDER BY `attribute_value` LIMIT 1
SELECT `superhero`.`full_name` FROM `superhero` WHERE `superhero`.`superhero_name` = 'Alien'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` < 100 AND `colour`.`colour` = 'Amber'
SELECT T2.`attribute_value` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `attribute` AS T3 ON T2.`attribute_id` = T3.`id` WHERE T1.`superhero_name` = 'Aquababy'
SELECT `superhero`.`weight_kg`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`id` = 40
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT `superhero`.`id` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Intelligence'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.height_cm > (SELECT AVG(height_cm) * 0.8 FROM superhero)
SELECT `drivers`.`driverRef` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 20 ORDER BY `qualifying`.`q1` DESC LIMIT 5
SELECT T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 19 ORDER BY T1.q2 LIMIT 1
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`location` = 'Shanghai'
SELECT races.`url` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE circuits.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Germany'
SELECT DISTINCT `circuits`.`name`, `races`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `constructors`.`name` = 'Renault'
SELECT COUNT(*) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2010 AND `circuits`.`country` NOT IN ('Asia', 'Europe')
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Spain'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Australian Grand Prix'
SELECT races.`url` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE circuits.`name` = 'Sepang International Circuit'
SELECT `races`.`time` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT circuits.`lat`, circuits.`lng` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE races.`name` = 'Abu Dhabi Grand Prix'
SELECT constructors.`nationality` FROM constructorResults INNER JOIN constructors ON constructorResults.`constructorId` = constructors.`constructorId` WHERE constructorResults.`raceId` = 24 AND constructorResults.`points` = 1
SELECT qualifying.`q1` FROM qualifying INNER JOIN drivers ON qualifying.`driverId` = drivers.`driverId` WHERE qualifying.`raceId` = 354 AND drivers.`forename` = 'Bruno' AND drivers.`surname` = 'Senna'
SELECT `drivers`.`nationality` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 355 AND `qualifying`.`q2` = '0:01:40'
SELECT `drivers`.`number` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 903 AND `qualifying`.`q3` LIKE '1:54%'
SELECT COUNT(`drivers`.`driverId`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'Bahrain Grand Prix' AND `races`.`year` = 2007 AND `results`.`time` IS NULL
SELECT `seasons`.`url` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`raceId` = 901
SELECT COUNT(DISTINCT `results`.`driverId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`date` = '2015-11-29' AND `results`.`statusId` = 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `results`.`raceId` = 592 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` ASC LIMIT 1
SELECT `drivers`.`url` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `lapTimes`.`raceId` = 161 AND `lapTimes`.`time` LIKE '1:27%'
SELECT `drivers`.`nationality` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`raceId` = 933 ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Malaysian Grand Prix'
SELECT constructors.`url` FROM constructorResults INNER JOIN constructors ON constructorResults.`constructorId` = constructors.`constructorId` WHERE constructorResults.`raceId` = 9 ORDER BY constructorResults.`points` DESC LIMIT 1
SELECT q.`q1` FROM `qualifying` AS q INNER JOIN `drivers` AS d ON q.`driverId` = d.`driverId` WHERE d.`driverRef` = 'di_grassi' AND q.`raceId` = 345
SELECT `drivers`.`nationality` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 347 AND `qualifying`.`q2` = '0:01:15'
SELECT `drivers`.`code` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 45 AND `qualifying`.`q3` LIKE '1:33%'
SELECT T1.`time` FROM `results` AS T1 INNER JOIN `drivers` AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN `races` AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`driverRef` = 'bruce_mclaren' AND T3.`raceId` = 743
SELECT drivers.forename, drivers.surname FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'San Marino Grand Prix' AND races.year = 2006 AND results.position = 2
SELECT seasons.`url` FROM races INNER JOIN seasons ON races.`year` = seasons.`year` WHERE races.`raceId` = 901
SELECT COUNT(DISTINCT `results`.`driverId`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `races`.`date` = '2015-11-29' AND `status`.`status` != 'Finished'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `results`.`raceId` = 872 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` DESC LIMIT 1
SELECT d.`forename`, d.`surname` FROM `lapTimes` AS lt INNER JOIN `drivers` AS d ON lt.`driverId` = d.`driverId` WHERE lt.`raceId` = 348 ORDER BY lt.`time` ASC LIMIT 1
SELECT `drivers`.`nationality` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT CAST((`results`.`fastestLapSpeed` - (SELECT `results`.`fastestLapSpeed` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceId` = 854)) * 100 / `results`.`fastestLapSpeed` AS REAL) AS percentage FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Paul' AND `drivers`.`surname` = 'di Resta' AND `results`.`raceId` = 853
SELECT CAST(SUM(CASE WHEN `results`.`statusId` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`driverId`) AS completion_rate FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`date` = '1983-07-16'
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix'
SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2005 ORDER BY `races`.`name` DESC
SELECT `races`.`name` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`year` = (SELECT MIN(`year`) FROM `races`) AND strftime('%m', `races`.`date`) = (SELECT strftime('%m', MIN(`date`)) FROM `races` WHERE `races`.`year` = (SELECT MIN(`year`) FROM `races`))
SELECT `races`.`name`, `races`.`date` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `seasons`.`year` = 1999 ORDER BY `races`.`round` DESC LIMIT 1
SELECT `seasons`.`year` FROM `seasons` INNER JOIN `races` ON `seasons`.`year` = `races`.`year` GROUP BY `seasons`.`year` ORDER BY MAX(`races`.`round`) DESC LIMIT 1
SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2017 AND `races`.`name` NOT IN (SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2000)
SELECT `circuits`.`name`, `circuits`.`location`, `circuits`.`country` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'European Grand Prix' ORDER BY `races`.`year` ASC LIMIT 1
SELECT MAX(`races`.`year`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Brands Hatch' AND `races`.`name` = 'British Grand Prix'
SELECT COUNT(DISTINCT T1.`year`) FROM `races` AS T1 INNER JOIN `circuits` AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`name` = 'Silverstone Circuit' AND T1.`name` LIKE '%British Grand Prix%'
SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN driverStandings AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2010 AND T1.name = 'Singapore Grand Prix' ORDER BY T2.position
SELECT `drivers`.`forename`, `drivers`.`surname`, `driverStandings`.`points` FROM `driverStandings` INNER JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` ORDER BY `driverStandings`.`points` DESC LIMIT 1
SELECT T3.`forename`, T3.`surname`, T1.`points` FROM `driverStandings` AS T1 INNER JOIN `races` AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN `drivers` AS T3 ON T1.`driverId` = T3.`driverId` WHERE T2.`year` = 2017 AND T2.`name` = 'Chinese Grand Prix' ORDER BY T1.`points` DESC LIMIT 3
SELECT `drivers`.`forename`, `drivers`.`surname`, `races`.`name`, MIN(`lapTimes`.`milliseconds`) AS best_lap_time FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` GROUP BY `lapTimes`.`raceId` ORDER BY best_lap_time ASC LIMIT 1
SELECT AVG(`lapTimes`.`milliseconds`) AS average_lap_time FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`year` = 2009 AND `races`.`name` = 'Malaysian Grand Prix'
SELECT CAST(SUM(CASE WHEN `results`.`position` > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`raceId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`surname` = 'Hamilton' AND `races`.`year` >= 2010
SELECT T1.`forename`, T1.`surname`, T1.`nationality`, MAX(T2.`points`) AS max_points FROM `drivers` AS T1 INNER JOIN `driverStandings` AS T2 ON T1.`driverId` = T2.`driverId` GROUP BY T1.`forename`, T1.`surname`, T1.`nationality` ORDER BY COUNT(T2.`wins`) DESC LIMIT 1
SELECT (strftime('%Y', 'now') - strftime('%Y', `dob`)) AS age, `forename`, `surname` FROM `drivers` WHERE `nationality` = 'Japanese' ORDER BY `dob` DESC LIMIT 1
SELECT `circuits`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`year` BETWEEN 1990 AND 2000 GROUP BY `circuits`.`circuitId` HAVING COUNT(`races`.`raceId`) = 4
SELECT `circuits`.`name`, `circuits`.`location`, `races`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `circuits`.`country` = 'USA' AND `races`.`year` = 2006
SELECT races.`name`, circuits.`name`, circuits.`location` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE races.`date` BETWEEN '2005-09-01' AND '2005-09-30'
SELECT `races`.`name`, `races`.`date` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Alex' AND `drivers`.`surname` = 'Yoong' AND `results`.`position` < 20
SELECT COUNT(*) FROM `results` AS T1 INNER JOIN `races` AS T2 ON T1.raceId = T2.raceId INNER JOIN `drivers` AS T3 ON T1.driverId = T3.driverId INNER JOIN `circuits` AS T4 ON T2.circuitId = T4.circuitId WHERE T3.driverRef = 'michael_schumacher' AND T4.circuitRef = 'sepang' AND T1.position = 1
SELECT `races`.`name`, `races`.`year` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'michael_schumacher' ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`results`.`points`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'eddie_irvine' AND `races`.`year` = 2000
SELECT T1.`forename`, T1.`surname`, T2.`name`, T3.`points` FROM `drivers` AS T1 INNER JOIN `races` AS T2 ON T1.`driverId` = (SELECT `driverId` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' LIMIT 1) INNER JOIN `results` AS T3 ON T2.`raceId` = T3.`raceId` AND T1.`driverId` = T3.`driverId` WHERE T2.`year` = (SELECT MIN(`year`) FROM `races` WHERE `raceId` IN (SELECT `raceId` FROM `results` WHERE `driverId` = T1.`driverId`)) LIMIT 1
SELECT `races`.`name`, `circuits`.`country` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2017 ORDER BY `races`.`date`
SELECT races.`name`, races.`year`, circuits.`location` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` ORDER BY races.`laps` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `circuits`.`country` = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'European Grand Prix'
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name`, `lat` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `circuits`.`country` FROM `circuits` ORDER BY `circuits`.`alt` DESC LIMIT 1
SELECT COUNT(`driverId`) FROM `drivers` WHERE `code` IS NULL
SELECT `drivers`.`nationality` FROM `drivers` ORDER BY `drivers`.`dob` LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson'
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`name`, `races`.`date`, `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT races.`time` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE circuits.`name` = 'Abu Dhabi Circuit' AND races.`year` = 2010
SELECT COUNT(*) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy' AND `races`.`name` LIKE '%Formula_1%'
SELECT `races`.`date` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `circuits`.`url` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`lapTimes`.`time`) FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT drivers.`driverRef` FROM races INNER JOIN results ON races.`raceId` = results.`raceId` INNER JOIN drivers ON results.`driverId` = drivers.`driverId` WHERE races.`name` = 'Canadian Grand Prix' AND races.`year` = 2007 AND results.`position` = 1 LIMIT 1
SELECT T2.`name` FROM drivers AS T1 INNER JOIN results AS T3 ON T1.`driverId` = T3.`driverId` INNER JOIN races AS T2 ON T3.`raceId` = T2.`raceId` WHERE T1.`driverRef` = 'hamilton'
SELECT T3.`name` FROM `drivers` AS T1 INNER JOIN `results` AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN `races` AS T3 ON T2.`raceId` = T3.`raceId` WHERE T1.`forename` = 'Lewis' AND T1.`surname` = 'Hamilton' ORDER BY T2.`rank` ASC LIMIT 1
SELECT MAX(`results`.`fastestLapSpeed`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT DISTINCT `races`.`year` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT results.`positionOrder` FROM drivers INNER JOIN results ON drivers.`driverId` = results.`driverId` INNER JOIN races ON results.`raceId` = races.`raceId` WHERE drivers.`forename` = 'Lewis' AND drivers.`surname` = 'Hamilton' AND races.`name` = 'Chinese Grand Prix' AND races.`year` = 2008
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 1989 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`grid` = 4
SELECT COUNT(DISTINCT `results`.`driverId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`time` IS NOT NULL
SELECT `lapTimes`.`lap`, `lapTimes`.`time`, `lapTimes`.`milliseconds` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'hamilton' AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT results.`time` FROM results INNER JOIN races ON results.`raceId` = races.`raceId` INNER JOIN drivers ON results.`driverId` = drivers.`driverId` WHERE races.`name` = 'Chinese Grand Prix' AND races.`year` = 2008 AND results.`position` = 2
SELECT T3.forename, T3.surname, T3.url FROM races AS T1 INNER JOIN driverStandings AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.position = 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`nationality` = 'British' AND `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix'
SELECT COUNT(DISTINCT `results`.`driverId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Chinese Grand Prix' AND `results`.`time` IS NOT NULL
SELECT SUM(`results`.`points`) FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT AVG(CAST(SUBSTR(`results`.`fastestLapTime`, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(`results`.`fastestLapTime`, 4, 2) AS INTEGER) + CAST(SUBSTR(`results`.`fastestLapTime`, 7) AS FLOAT) / 1000) AS avg_fastest_lap_time_seconds FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT CAST(COUNT(`results`.`raceId`) AS REAL) / (SELECT COUNT(`results`.`raceId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix') AS rate FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`time` IS NOT NULL
SELECT CAST((((strftime('%s', `results`.`time`) - strftime('%s', (SELECT `results`.`time` FROM `results` WHERE `results`.`raceId` = (SELECT `races`.`raceId` FROM `races` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008) ORDER BY `results`.`position` DESC LIMIT 1))) / strftime('%s', (SELECT `results`.`time` FROM `results` WHERE `results`.`raceId` = (SELECT `races`.`raceId` FROM `races` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008) ORDER BY `results`.`position` DESC LIMIT 1)))) * 100 AS REAL) AS percentage_faster FROM `results` WHERE `results`.`raceId` = (SELECT `races`.`raceId` FROM `races` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008) AND `results`.`position` = 1
SELECT COUNT(`circuitId`) FROM `circuits` WHERE `location` = 'Adelaide' AND `country` = 'Australia'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(`driverId`) FROM `drivers` WHERE `nationality` = 'British' AND STRFTIME('%Y', `dob`) > '1980'
SELECT MAX(`constructorStandings`.`points`) FROM `constructors` INNER JOIN `constructorStandings` ON `constructors`.`constructorId` = `constructorStandings`.`constructorId` WHERE `constructors`.`nationality` = 'British'
SELECT `constructors`.`name` FROM `constructors` INNER JOIN `constructorStandings` ON `constructors`.`constructorId` = `constructorStandings`.`constructorId` ORDER BY `constructorStandings`.`points` DESC LIMIT 1
SELECT `constructors`.`name` FROM `constructorResults` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 291 AND `constructorResults`.`points` = 0
SELECT COUNT(*) FROM `constructors` AS T1 INNER JOIN `constructorResults` AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'Japanese' AND T2.`points` = 0 GROUP BY T1.`constructorId` HAVING COUNT(T2.`raceId`) = 2
SELECT DISTINCT `constructors`.`name` FROM `constructorStandings` INNER JOIN `constructors` ON `constructorStandings`.`constructorId` = `constructors`.`constructorId` WHERE `constructorStandings`.`position` = 1
SELECT COUNT(*) FROM `constructors` AS T1 INNER JOIN `results` AS T2 ON T1.`constructorId` = T2.`constructorId` INNER JOIN `lapTimes` AS T3 ON T2.`raceId` = T3.`raceId` AND T2.`driverId` = T3.`driverId` WHERE T1.`nationality` = 'French' AND T3.`lap` > 50
SELECT CAST(SUM(CASE WHEN `results`.`time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`nationality` = 'Japanese' AND `races`.`year` BETWEEN 2007 AND 2009
SELECT AVG(CAST(SUBSTR(`results`.`time`, 1, 2) * 3600 + SUBSTR(`results`.`time`, 4, 2) * 60 + SUBSTR(`results`.`time`, 7, 2) + SUBSTR(`results`.`time`, 10) / 1000.0 AS REAL)) AS average_time_seconds FROM `races` JOIN `results` ON `races`.`raceId` = `results`.`raceId` JOIN `driverStandings` ON `results`.`raceId` = `driverStandings`.`raceId` AND `results`.`driverId` = `driverStandings`.`driverId` WHERE `driverStandings`.`position` = 1 AND `races`.`year` < 1975 AND `results`.`time` IS NOT NULL
SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob > '1975-12-31' AND T2.position = 2
SELECT COUNT(`drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`nationality` = 'Italian' AND `results`.`time` IS NULL
SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.milliseconds ASC LIMIT 1
SELECT `lapTimes`.`lap` FROM `lapTimes` INNER JOIN `results` ON `lapTimes`.`raceId` = `results`.`raceId` AND `lapTimes`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2009 AND `results`.`position` = 1 ORDER BY `lapTimes`.`time` ASC LIMIT 1
SELECT AVG(`results`.`fastestLapSpeed`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT `races`.`name`, `races`.`year` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `results`.`milliseconds` IS NOT NULL ORDER BY `results`.`milliseconds` ASC LIMIT 1
SELECT CAST(COUNT(CASE WHEN drivers.`dob` < '1985-01-01' AND lapTimes.`laps` > 50 THEN drivers.`driverId` END) AS REAL) * 100 / COUNT(drivers.`driverId`) FROM drivers INNER JOIN lapTimes ON drivers.`driverId` = lapTimes.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`year` BETWEEN 2000 AND 2005
SELECT COUNT(*) FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`nationality` = 'French' AND `lapTimes`.`milliseconds` < 120000
SELECT `code` FROM `drivers` WHERE `nationality` = 'America'
SELECT `raceId` FROM `races` WHERE `year` = '2009'
SELECT COUNT(DISTINCT `results`.`driverId`) FROM `results` WHERE `results`.`raceId` = 18
SELECT T1.`code`, T1.`number` FROM drivers AS T1 INNER JOIN (SELECT `driverId`, MAX(`dob`) AS max_dob FROM drivers GROUP BY `driverId` ORDER BY max_dob DESC LIMIT 3) AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'Dutch'
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND SUBSTR(`dob`, 1, 4) = '1980'
SELECT T1.`driverId`, T1.`driverRef`, T1.`forename`, T1.`surname`, T1.`dob`, T1.`nationality`, MIN(T2.`time`) AS earliest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'German' AND T1.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.`driverId` ORDER BY earliest_lap_time ASC LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1
SELECT `drivers`.`driverId`, `drivers`.`code` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`dob` LIKE '1971-%' ORDER BY `results`.`fastestLapTime` ASC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname`, MAX(`lapTimes`.`time`) AS latest_lap_time FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`nationality` = 'Spanish' AND `drivers`.`dob` < '1982-01-01' GROUP BY `drivers`.`driverId` ORDER BY latest_lap_time DESC LIMIT 10
SELECT T1.`year` FROM seasons AS T1 INNER JOIN races AS T2 ON T1.`year` = T2.`year` INNER JOIN results AS T3 ON T2.`raceId` = T3.`raceId` ORDER BY T3.`fastestLapTime` ASC LIMIT 1
SELECT T3.`year` FROM `lapTimes` AS T1 INNER JOIN `races` AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN `seasons` AS T3 ON T2.`year` = T3.`year` ORDER BY T1.`time` DESC LIMIT 1
SELECT `lapTimes`.`driverId` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `lapTimes`.`lap` = 1 ORDER BY `lapTimes`.`time` ASC LIMIT 5
SELECT COUNT(*) FROM `results` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `results`.`raceId` > 50 AND `results`.`raceId` < 100 AND `results`.`statusId` = 2 AND `results`.`time` IS NOT NULL
SELECT COUNT(`races`.`raceId`), `circuits`.`name`, `circuits`.`location`, `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Austria' GROUP BY `circuits`.`name`, `circuits`.`location`, `circuits`.`lat`, `circuits`.`lng`
SELECT T1.`raceId`, COUNT(T2.`resultId`) AS finishers FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`time` IS NOT NULL GROUP BY T1.`raceId` ORDER BY finishers DESC LIMIT 1
SELECT `drivers`.`driverRef`, `drivers`.`nationality`, `drivers`.`dob` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 23 AND `qualifying`.`q2` IS NOT NULL
SELECT T1.year, T1.date, T1.time, T2.driverRef FROM races AS T1 INNER JOIN (SELECT T3.driverId, T3.driverRef, MIN(T1.date) AS first_qualifying_date FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId GROUP BY T3.driverId) AS T2 ON T1.date = T2.first_qualifying_date INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId ORDER BY T3.dob DESC LIMIT 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `drivers`.`nationality` = 'American' AND `status`.`status` = 'Puncture'
SELECT constructors.`url` FROM constructors INNER JOIN constructorStandings ON constructors.`constructorId` = constructorStandings.`constructorId` WHERE constructors.`nationality` = 'Italian' ORDER BY constructorStandings.`points` DESC LIMIT 1
SELECT `constructors`.`url` FROM `constructors` INNER JOIN `constructorStandings` ON `constructors`.`constructorId` = `constructorStandings`.`constructorId` ORDER BY `constructorStandings`.`wins` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'French Grand Prix' AND `lapTimes`.`lap` = 3 ORDER BY `lapTimes`.`time` DESC LIMIT 1
SELECT `races`.`name`, `lapTimes`.`milliseconds` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`lap` = 1 ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`results`.`fastestLapTime`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2006 AND `races`.`name` = 'United States Grand Prix' AND `results`.`position` < 11
SELECT T1.`driverId`, T1.`forename`, T1.`surname`, AVG(T2.`duration`) AS avg_duration FROM `drivers` AS T1 INNER JOIN `pitStops` AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'German' AND 1980 < STRFTIME('%Y', T1.`dob`) AND STRFTIME('%Y', T1.`dob`) < 1985 GROUP BY T1.`driverId` ORDER BY avg_duration ASC LIMIT 3
SELECT drivers.`forename`, drivers.`surname`, results.`time` FROM results INNER JOIN races ON results.`raceId` = races.`raceId` INNER JOIN drivers ON results.`driverId` = drivers.`driverId` WHERE races.`name` = 'Canadian Grand Prix' AND races.`year` = 2008 AND results.`position` = 1
SELECT `constructors`.`constructorRef`, `constructors`.`url` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Singapore Grand Prix' ORDER BY `results`.`position` LIMIT 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND strftime('%Y', `dob`) BETWEEN '1981' AND '1991'
SELECT drivers.`forename` || ' ' || drivers.`surname` AS full_name, drivers.`url`, drivers.`dob` FROM drivers WHERE drivers.`nationality` = 'German' AND strftime('%Y', drivers.`dob`) BETWEEN '1971' AND '1985' ORDER BY drivers.`dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT SUM(`results`.`points`) AS total_points, `constructors`.`name`, `constructors`.`nationality` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`name` = 'Monaco Grand Prix' AND `races`.`year` BETWEEN 1980 AND 2010 GROUP BY `results`.`constructorId` ORDER BY total_points DESC LIMIT 1
SELECT AVG(`results`.`points`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Turkish Grand Prix'
SELECT T1.`year`, AVG(T2.`round`) FROM seasons AS T1 INNER JOIN races AS T2 ON T1.`year` = T2.`year` WHERE T2.`date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY T1.`year`
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `driverStandings`.`wins` FROM `driverStandings` INNER JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `driverStandings`.`raceId` = `races`.`raceId` ORDER BY `driverStandings`.`points` DESC LIMIT 1 OFFSET 90
SELECT T1.`name` FROM `races` AS T1 INNER JOIN `results` AS T2 ON T1.`raceId` = T2.`raceId` ORDER BY T2.`fastestLapTime` ASC LIMIT 1
SELECT circuits.`location`, circuits.`country` FROM `races` INNER JOIN `circuits` ON races.`circuitId` = circuits.`circuitId` WHERE races.`date` = (SELECT MAX(date) FROM `races`)
SELECT drivers.`forename`, drivers.`surname` FROM qualifying INNER JOIN races ON qualifying.`raceId` = races.`raceId` INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` INNER JOIN drivers ON qualifying.`driverId` = drivers.`driverId` WHERE races.`year` = 2008 AND circuits.`name` = 'Marina Bay Street Circuit' ORDER BY qualifying.`q3` LIMIT 1
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS full_name, `drivers`.`nationality`, `races`.`name` AS race_name FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` ORDER BY `drivers`.`dob` DESC LIMIT 1
SELECT COUNT(`results`.`statusId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `races`.`name` = 'Canadian Grand Prix' AND `status`.`status` = 'Accident' GROUP BY `results`.`driverId` ORDER BY COUNT(`results`.`statusId`) DESC LIMIT 1
SELECT T1.forename || ' ' || T1.surname AS full_name, T2.wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T1.dob LIMIT 1
SELECT MAX(`duration`) FROM `pitStops`
SELECT MIN(`lapTimes`.`time`) FROM `lapTimes`
SELECT MAX(`pitStops`.`duration`) FROM `pitStops` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT T1.lap FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.driverRef = 'hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix'
SELECT `drivers`.`forename`, `drivers`.`surname`, `pitStops`.`duration` FROM `pitStops` INNER JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 2011 AND `races`.`name` = 'Australian Grand Prix'
SELECT MIN(`lapTimes`.`time`) FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton' AND `lapTimes`.`raceId` IN (SELECT `raceId` FROM `races` WHERE `name` LIKE 'Formula_1%')
SELECT drivers.`forename`, drivers.`surname` FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` ORDER BY lapTimes.`milliseconds` ASC LIMIT 20
SELECT T1.`position` FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`driverRef` = 'hamilton' ORDER BY T1.`time` ASC LIMIT 1
SELECT MIN(`lapTimes`.`time`) FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit'
SELECT `circuits`.`name`, MIN(`lapTimes`.`time`) AS lap_record FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` WHERE `circuits`.`country` = 'Italy' GROUP BY `circuits`.`name`
SELECT `races`.`name` FROM `races` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` WHERE `races`.`circuitId` = (SELECT `circuitId` FROM `circuits` WHERE `name` = 'Austrian Grand Prix Circuit') ORDER BY `lapTimes`.`time` ASC LIMIT 1
SELECT pitStops.`duration` FROM pitStops INNER JOIN lapTimes ON pitStops.`raceId` = lapTimes.`raceId` AND pitStops.`driverId` = lapTimes.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE circuits.`name` = 'Austrian Grand Prix Circuit' ORDER BY lapTimes.`time` ASC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` WHERE `lapTimes`.`time` = '1:29.488'
SELECT AVG(`pitStops`.`milliseconds`) FROM `pitStops` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`driverRef` = 'hamilton'
SELECT AVG(`lapTimes`.`milliseconds`) FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy'
SELECT `Player`.`player_api_id` FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `player_name`, `height` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.potential ASC LIMIT 1
SELECT COUNT(`Player_Attributes`.`id`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` >= 60 AND `Player_Attributes`.`overall_rating` < 65 AND `Player_Attributes`.`defensive_work_rate` = 'low'
SELECT `Player`.`id`, `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`crossing` DESC LIMIT 5
SELECT L.`name` FROM League AS L INNER JOIN Match AS M ON L.`id` = M.`league_id` WHERE M.`season` = '2015/2016' GROUP BY L.`name` ORDER BY SUM(M.`home_team_goal` + M.`away_team_goal`) DESC LIMIT 1
SELECT `Team`.`team_long_name` FROM `Match` INNER JOIN `Team` ON `Match`.`home_team_api_id` = `Team`.`team_api_id` WHERE `Match`.`season` = '2015/2016' AND `Match`.`home_team_goal` < `Match`.`away_team_goal` GROUP BY `Team`.`team_long_name` ORDER BY COUNT(*) ASC LIMIT 1
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` GROUP BY `Player`.`player_name` ORDER BY MAX(`Player_Attributes`.`penalties`) DESC LIMIT 10
SELECT T2.`team_long_name` FROM `Match` AS T1 INNER JOIN `Team` AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` INNER JOIN `League` AS T3 ON T1.`league_id` = T3.`id` WHERE T3.`name` = 'Scotland Premier League' AND T1.`season` = '2009/2010' AND T1.`away_team_goal` > T1.`home_team_goal` GROUP BY T2.`team_long_name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.`team_long_name`, T2.`buildUpPlaySpeed` FROM `Team` AS T1 INNER JOIN `Team_Attributes` AS T2 ON T1.`team_api_id` = T2.`team_api_id` ORDER BY T2.`buildUpPlaySpeed` DESC LIMIT 4
SELECT L.`name` FROM `Match` AS M INNER JOIN `League` AS L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' GROUP BY L.`name` ORDER BY SUM(M.`home_team_goal` = M.`away_team_goal`) DESC LIMIT 1
SELECT STRFTIME('%Y', 'now') - STRFTIME('%Y', `Player`.`birthday`) AS age FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`sprint_speed` >= 97 AND STRFTIME('%Y', `Player_Attributes`.`date`) BETWEEN '2013' AND '2015'
SELECT L.`name`, COUNT(M.`id`) AS match_count FROM `Match` M INNER JOIN `League` L ON M.`league_id` = L.`id` GROUP BY M.`league_id` ORDER BY match_count DESC LIMIT 1
SELECT AVG(`height`) FROM `Player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `Player_Attributes`.`player_api_id` FROM `Player_Attributes` WHERE substr(`Player_Attributes`.`date`, 1, 4) = '2010' ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayPassing` > (SELECT SUM(`buildUpPlayPassing`) / COUNT(`team_long_name`) FROM `Team_Attributes` WHERE `buildUpPlayPassing` IS NOT NULL) AND strftime('%Y', `Team_Attributes`.`date`) = '2012'
SELECT CAST(SUM(CASE WHEN `Player_Attributes`.`preferred_foot` = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Player_Attributes`.`player_fifa_api_id`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_fifa_api_id` = `Player`.`player_fifa_api_id` WHERE STRFTIME('%Y', `Player`.`birthday`) BETWEEN '1987' AND '1992'
SELECT L.`name` FROM `Match` AS M INNER JOIN `League` AS L ON M.`league_id` = L.`id` GROUP BY L.`name` ORDER BY SUM(M.`home_team_goal` + M.`away_team_goal`) ASC LIMIT 5
SELECT CAST(SUM(`Player_Attributes`.`long_shots`) AS REAL) / COUNT(`Player_Attributes`.`player_fifa_api_id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_fifa_api_id` = `Player_Attributes`.`player_fifa_api_id` WHERE `Player`.`player_name` = 'Ahmed Samir Farag'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_fifa_api_id` = `Player_Attributes`.`player_fifa_api_id` WHERE `Player`.`height` > 180 GROUP BY `Player`.`player_name` ORDER BY AVG(`Player_Attributes`.`heading_accuracy`) DESC LIMIT 10
SELECT `Team`.`team_long_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayDribblingClass` = 'Normal' AND `Team_Attributes`.`date` >= '2014-01-01 00:00:00' AND `Team_Attributes`.`date` <= '2014-01-31 00:00:00' AND `Team_Attributes`.`chanceCreationPassing` < (SELECT AVG(`chanceCreationPassing`) FROM `Team_Attributes` WHERE `buildUpPlayDribblingClass` = 'Normal' AND `date` >= '2014-01-01 00:00:00' AND `date` <= '2014-01-31 00:00:00') ORDER BY `Team_Attributes`.`chanceCreationPassing` DESC
SELECT L.`name` FROM `Match` M INNER JOIN `League` L ON M.`league_id` = L.`id` WHERE M.`season` = '2009/2010' GROUP BY L.`name` HAVING AVG(M.`home_team_goal`) > AVG(M.`away_team_goal`)
SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `Player` WHERE `birthday` LIKE '1970-10%'
SELECT `Player_Attributes`.`attacking_work_rate` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Franco Zennaro'
SELECT `Team_Attributes`.`buildUpPlayPositioningClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'ADO Den Haag'
SELECT Player_Attributes.`heading_accuracy` FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player.`player_name` = 'Francois Affolter' AND Player_Attributes.`date` = '2014-09-18 00:00:00'
SELECT `Player_Attributes`.`overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `Player_Attributes`.`date`) = '2011' LIMIT 1
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' AND `League`.`name` = 'Scotland Premier League'
SELECT `Player_Attributes`.`preferred_foot` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player`.`birthday` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT COUNT(`Player`.`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`weight` < 130 AND `Player_Attributes`.`preferred_foot` = 'left'
SELECT `Team`.`team_short_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Risky'
SELECT `Player_Attributes`.`defensive_work_rate` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'David Wilson' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1
SELECT `Player`.`birthday` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands'
SELECT CAST(SUM(`Match`.`home_team_goal`) AS REAL) / COUNT(DISTINCT `Match`.`id`) AS average_home_team_goal FROM `Match` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Poland' AND `Match`.`season` = '2010/2011'
SELECT T1.player_name, AVG(T2.finishing) AS avg_finishing_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = (SELECT MAX(height) FROM Player) OR T1.height = (SELECT MIN(height) FROM Player) GROUP BY T1.player_name ORDER BY avg_finishing_rate DESC LIMIT 1
SELECT `player_name` FROM `Player` WHERE `height` > 180
SELECT COUNT(`id`) FROM `Player` WHERE strftime('%Y', `birthday`) > '1990'
SELECT COUNT(`Player`.`id`) FROM `Player` WHERE `Player`.`player_name` LIKE 'Adam %' AND `Player`.`weight` > 170
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` > 80 AND strftime('%Y', `Player_Attributes`.`date`) BETWEEN '2008' AND '2010'
SELECT `Player_Attributes`.`potential` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`preferred_foot` = 'left'
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeedClass` = 'Fast'
SELECT `Team_Attributes`.`buildUpPlayPassingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'CLB' LIMIT 1
SELECT `Team`.`team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayPassing` > 70
SELECT SUM(`t2`.`overall_rating`) / COUNT(`t2`.`id`) FROM `Player_Attributes` AS `t2` INNER JOIN `Player` AS `t1` ON `t2`.`player_api_id` = `t1`.`player_api_id` WHERE strftime('%Y', `t2`.`date`) >= '2010' AND strftime('%Y', `t2`.`date`) <= '2015' AND `t1`.`height` > 170
SELECT `player_name` FROM `Player` ORDER BY `height` ASC LIMIT 1
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Italy Serie A'
SELECT `Team`.`team_short_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeed` = 31 AND `Team_Attributes`.`buildUpPlayDribbling` = 53 AND `Team_Attributes`.`buildUpPlayPassing` = 32
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran'
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `Match`.`date`) BETWEEN '2008-08' AND '2008-10'
SELECT `Team`.`team_short_name` FROM `Match` INNER JOIN `Team` ON `Match`.`home_team_api_id` = `Team`.`team_api_id` WHERE `Match`.`home_team_goal` = 10
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`balance` = (SELECT MAX(`balance`) FROM `Player_Attributes`) AND `Player_Attributes`.`potential` = 61
SELECT (SUM(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T1.id ELSE NULL END)) - (SUM(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T1.id ELSE NULL END)) AS difference FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Abdou Diallo', 'Aaron Appindangoye')
SELECT `team_long_name` FROM `Team` WHERE `team_short_name` = 'GEN'
SELECT `player_name` FROM `Player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(`id`) FROM `Player_Attributes` WHERE `preferred_foot` = 'left' AND `attacking_work_rate` = 'low'
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Belgium Jupiler League'
SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Germany'
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986' AND `Player_Attributes`.`defensive_work_rate` = 'high'
SELECT P.`player_name` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY PA.`crossing` DESC LIMIT 1
SELECT T2.`heading_accuracy` FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` = 'Ariel Borysiuk'
SELECT COUNT(`Player`.`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`height` > 180 AND `Player_Attributes`.`volleys` > 70
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`volleys` > 70 AND `Player_Attributes`.`dribbling` > 70
SELECT COUNT(`Match`.`id`) FROM `Match` JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Match`.`season` = '2008/2009' AND `Country`.`name` = 'Belgium'
SELECT `Player_Attributes`.`long_passing` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player`.`birthday` ASC LIMIT 1
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Belgium Jupiler League' AND SUBSTR(`Match`.`date`, 1, 7) = '2009-04'
SELECT T2.`name` FROM `Match` AS T1 INNER JOIN `League` AS T2 ON T1.`league_id` = T2.`id` WHERE T1.`season` = '2008/2009' GROUP BY T2.`name` ORDER BY COUNT(T1.`id`) DESC LIMIT 1
SELECT CAST(SUM(`Player_Attributes`.`overall_rating`) AS REAL) / COUNT(DISTINCT `Player_Attributes`.`id`) AS average_overall_rating FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986'
SELECT (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Ariel Borysiuk')) - (SELECT `overall_rating` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT `player_api_id` FROM `Player` WHERE `player_name` = 'Paulin Puel')) AS difference
SELECT AVG(`Team_Attributes`.`buildUpPlaySpeed`) FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Heart of Midlothian'
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Pietro Marino'
SELECT SUM(`Player_Attributes`.`crossing`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Lennox'
SELECT MAX(`Team_Attributes`.`chanceCreationPassing`) AS highest_score, `Team_Attributes`.`chanceCreationPassingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Ajax'
SELECT `Player_Attributes`.`preferred_foot` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Abdou Diallo'
SELECT MAX(`Player_Attributes`.`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Dorlan Pabon'
SELECT AVG(`Match`.`away_team_goal`) FROM `Match` INNER JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Team`.`team_long_name` = 'Parma' AND `Country`.`name` = 'Italy'
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` = 77 AND `Player_Attributes`.`date` LIKE '2016-06-23%' ORDER BY `Player`.`birthday` ASC LIMIT 1
SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date LIKE '2016-02-04%'
SELECT `Player_Attributes`.`potential` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Francesco Parravicini' AND `Player_Attributes`.`date` = '2010-08-30 00:00:00'
SELECT `Player_Attributes`.`attacking_work_rate` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Francesco Migliore' AND `Player_Attributes`.`date` LIKE '2015-05-01%'
SELECT `Player_Attributes`.`defensive_work_rate` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Berigaud' AND `Player_Attributes`.`date` = '2013-02-22 00:00:00'
SELECT `Player_Attributes`.`date` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Constant' ORDER BY `Player_Attributes`.`crossing` DESC, `Player_Attributes`.`date` ASC LIMIT 1
SELECT `Team_Attributes`.`buildUpPlaySpeedClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Willem II' AND `Team_Attributes`.`date` = '2012-02-22'
SELECT `Team_Attributes`.`buildUpPlayDribblingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_short_name` = 'LEI' AND `Team_Attributes`.`date` = '2015-09-10 00:00:00'
SELECT `Team_Attributes`.`buildUpPlayPassingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'FC Lorient' AND `Team_Attributes`.`date` LIKE '2010-02-22%'
SELECT `Team_Attributes`.`chanceCreationPassingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'PEC Zwolle' AND `Team_Attributes`.`date` = '2013-09-20 00:00:00'
SELECT `Team_Attributes`.`chanceCreationCrossingClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hull City' AND `Team_Attributes`.`date` = '2010-02-22 00:00:00'
SELECT `Team_Attributes`.`defenceAggressionClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hannover 96' AND `Team_Attributes`.`date` LIKE '2015-09-10%'
SELECT AVG(`Player_Attributes`.`overall_rating`) AS avg_rating FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Marko Arnautovic' AND SUBSTR(`Player_Attributes`.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT CAST((SELECT `overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Landon Donovan' AND `Player_Attributes`.`date` <= '2013-07-12' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1) - (SELECT `overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Jordan Bowery' AND `Player_Attributes`.`date` <= '2013-07-12' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1) AS REAL) * 100 / (SELECT `overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Landon Donovan' AND `Player_Attributes`.`date` <= '2013-07-12' ORDER BY `Player_Attributes`.`date` DESC LIMIT 1)
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `Player` WHERE datetime('now') - datetime(`birthday`) > 34
SELECT SUM(`Match`.`home_team_goal`) FROM `Match` INNER JOIN `Player` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Lennon'
SELECT SUM(T1.`away_team_goal`) FROM `Match` AS T1 INNER JOIN `Player` AS T2 ON T1.`away_player_1` = T2.`player_api_id` OR T1.`away_player_2` = T2.`player_api_id` OR T1.`away_player_3` = T2.`player_api_id` OR T1.`away_player_4` = T2.`player_api_id` OR T1.`away_player_5` = T2.`player_api_id` OR T1.`away_player_6` = T2.`player_api_id` OR T1.`away_player_7` = T2.`player_api_id` OR T1.`away_player_8` = T2.`player_api_id` OR T1.`away_player_9` = T2.`player_api_id` OR T1.`away_player_10` = T2.`player_api_id` OR T1.`away_player_11` = T2.`player_api_id` WHERE T2.`player_name` IN ('Daan Smith', 'Filipe Ferreira')
SELECT SUM(`Match`.`home_team_goal`) FROM `Match` INNER JOIN `Player` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` WHERE (strftime('%Y', 'now') - strftime('%Y', `Player`.`birthday`)) < 31
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`attacking_work_rate` = 'high'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`finishing` = 1 ORDER BY `Player`.`birthday` LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Country` ON `Player`.`id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium'
SELECT `Player`.`player_name`, `Country`.`name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` INNER JOIN `Country` ON `Player`.`player_fifa_api_id` = `Country`.`id` WHERE `Player_Attributes`.`vision` > 89
SELECT Country.`name` FROM Player INNER JOIN Country ON Player.`id` = Country.`id` GROUP BY Country.`name` ORDER BY AVG(Player.`weight`) DESC LIMIT 1
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeedClass` = 'Slow'
SELECT `Team`.`team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Safe'
SELECT AVG(`Player`.`height`) FROM `Player` INNER JOIN `Country` ON `Player`.`id` = `Country`.`id` WHERE `Country`.`name` = 'Italy'
SELECT `player_name` FROM `Player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(`id`) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990'
SELECT (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 6) - (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 23) AS `jumping_difference`
SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`preferred_foot` = 'right' ORDER BY T1.`potential` ASC LIMIT 5
SELECT COUNT(*) FROM `Player_Attributes` AS `PA` INNER JOIN `Player` AS `P` ON `PA`.`player_api_id` = `P`.`player_api_id` WHERE `PA`.`crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes`) AND `PA`.`preferred_foot` = 'left'
SELECT CAST(SUM(CASE WHEN T1.strength > 80 AND T1.stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Poland Ekstraklasa'
SELECT `Match`.`home_team_goal`, `Match`.`away_team_goal` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`date` LIKE '2008-09-24%' AND `League`.`name` = 'Belgium Jupiler League'
SELECT `Player_Attributes`.`sprint_speed`, `Player_Attributes`.`agility`, `Player_Attributes`.`acceleration` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Alexis Blin'
SELECT `Team_Attributes`.`buildUpPlaySpeedClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'KSV Cercle Brugge'
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' AND `League`.`name` = 'Italy Serie A'
SELECT MAX(`Match`.`home_team_goal`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands' AND `League`.`name` = 'Eredivisie'
SELECT `Player_Attributes`.`finishing`, `Player_Attributes`.`curve` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`weight` = (SELECT MAX(`weight`) FROM `Player`)
SELECT L.`name`, COUNT(M.`id`) AS game_count FROM `Match` M INNER JOIN `League` L ON M.`league_id` = L.`id` WHERE M.`season` = '2015/2016' GROUP BY L.`name` ORDER BY game_count DESC LIMIT 4
SELECT T2.`team_long_name` FROM `Match` AS T1 INNER JOIN `Team` AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` ORDER BY T1.`away_team_goal` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `Player`.`height` < 180 AND `Player_Attributes`.`overall_rating` > 70 THEN `Player`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`Player`.`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id`
SELECT CAST(SUM(CASE WHEN `SEX` = 'M' AND `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) AS in_patient_percentage, CAST(SUM(CASE WHEN `SEX` = 'M' AND `Admission` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) AS out_patient_percentage, ABS(CAST(SUM(CASE WHEN `SEX` = 'M' AND `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) - CAST(SUM(CASE WHEN `SEX` = 'M' AND `Admission` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`)) AS deviation_percentage FROM `Patient`
SELECT CAST(SUM(CASE WHEN strftime('%Y', `Patient`.`Birthday`) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Patient`.`ID`) AS percentage FROM `Patient` WHERE `Patient`.`SEX` = 'F'
SELECT CAST(SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `Patient` WHERE `Birthday` BETWEEN '1930-01-01' AND '1940-12-31'
SELECT CAST(SUM(CASE WHEN `Patient`.`Admission` = '-' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `Patient`.`Admission` = '+' THEN 1 ELSE 0 END) AS ratio FROM `Patient` WHERE `Patient`.`Diagnosis` = 'SLE'
SELECT `Patient`.`Diagnosis`, `Laboratory`.`Date` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = '30609'
SELECT `Patient`.`SEX`, `Patient`.`Birthday`, `Examination`.`Examination Date`, `Examination`.`Symptoms` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = '163109'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` > '500'
SELECT T1.`ID`, strftime('%Y', 'now') - strftime('%Y', T1.`Birthday`) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RVVT` = '+'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Thrombosis` = 2
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1937' AND `Laboratory`.`T-CHO` >= '250'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` < 3.5
SELECT CAST(SUM(CASE WHEN T1.`SEX` = 'F' AND (T2.`TP` < '6.0' OR T2.`TP` > '8.5') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.`ID`) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID`
SELECT AVG(`Examination`.`aCL IgG`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= '50'
SELECT COUNT(*) FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Description`) = '1997' AND `Admission` = '-'
SELECT MIN(strftime('%Y', `First Date`) - strftime('%Y', `Birthday`)) FROM `Patient` WHERE `First Date` IS NOT NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = '1' AND `Patient`.`SEX` = 'F' AND strftime('%Y', `Examination`.`Examination Date`) = '1997'
SELECT MAX(strftime('%Y', `Patient`.`Birthday`)) - MIN(strftime('%Y', `Patient`.`Birthday`)) AS age_gap FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200
SELECT `Examination`.`Symptoms`, `Examination`.`Diagnosis` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Symptoms` IS NOT NULL ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT COUNT(`Patient`.`ID`) / 12.0 FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`Date` BETWEEN '1998-01-01' AND '1998-12-31'
SELECT `Laboratory`.`Date`, (strftime('%Y', `Patient`.`First Date`) - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' ORDER BY `Patient`.`Birthday` LIMIT 1
SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END) AS Ratio FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` LEFT JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE (`Examination`.`Examination Date` IS NULL OR strftime('%Y', `Examination`.`Examination Date`) - strftime('%Y', `Patient`.`First Date`) >= 1)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) < '18' AND strftime('%Y', `Examination`.`Examination Date`) BETWEEN '1990' AND '1993'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-BIL` >= '2.0'
SELECT `Examination`.`Diagnosis`, COUNT(`Examination`.`Diagnosis`) AS DiagnosisCount FROM `Examination` WHERE `Examination`.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `Examination`.`Diagnosis` ORDER BY DiagnosisCount DESC LIMIT 1
SELECT AVG(1999 - strftime('%Y', `Patient`.`Birthday`)) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1991-10-01' AND '1991-10-30'
SELECT T1.`Diagnosis`, (strftime('%Y', T2.`Examination Date`) - strftime('%Y', T1.`Birthday`)) AS Age FROM `Patient` AS T1 INNER JOIN `Examination` AS T2 ON T1.`ID` = T2.`ID` INNER JOIN `Laboratory` AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`) LIMIT 1
SELECT `ANA` FROM `Examination` WHERE `ID` = 3605340 AND `Examination Date` = '1996-12-02'
SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'Abnormal' END AS `Cholesterol Status` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04'
SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'AORTITIS' ORDER BY T2.`Examination Date` LIMIT 1
SELECT `Examination`.`aCL IgM` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Patient`.`Description` = '1994-02-19' AND `Examination`.`Examination Date` = '1993-11-12'
SELECT `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` = '1992-06-12' AND `Laboratory`.`GPT` = '9'
SELECT strftime('%Y', '1991-10-21') - strftime('%Y', `Patient`.`Birthday`) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` = '1991-10-21' AND `Laboratory`.`UA` = '8.4'
SELECT COUNT(`Laboratory`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` = '1991-06-13' AND `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`Date` LIKE '1995-%'
SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Examination Date` = '1997-01-27' AND T2.`Diagnosis` = 'SLE'
SELECT `Examination`.`Symptoms` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Birthday` = '1959-03-01' AND `Examination`.`Examination Date` = '1993-09-27'
SELECT (SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-11-%' THEN `Laboratory`.`T-CHO` END) - SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-12-%' THEN `Laboratory`.`T-CHO` END)) / SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-11-%' THEN `Laboratory`.`T-CHO` END) * 100 AS decrease_rate FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1959-02-18'
SELECT T1.`ID` FROM `Patient` AS T1 INNER JOIN `Examination` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'Behcet' AND T2.`Examination Date` >= '1997-01-01' AND T2.`Examination Date` <= '1997-12-31'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4
SELECT `ID` FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) = '1964' AND `Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Thrombosis` = 2 AND `Examination`.`ANA Pattern` = 'S' AND `Examination`.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM `Examination`)
SELECT (COUNT(CASE WHEN `Laboratory`.`UA` <= 6.5 THEN 1 END) * 100.0 / COUNT(CASE WHEN `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30 THEN 1 END)) AS percentage FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30
SELECT (COUNT(DISTINCT CASE WHEN `Patient`.`Diagnosis` = 'BEHCET' THEN `Patient`.`ID` END) * 100.0 / COUNT(DISTINCT `Patient`.`ID`)) AS BEHCET_Percentage FROM `Patient` WHERE `Patient`.`SEX` = 'M' AND strftime('%Y', `Patient`.`First Date`) = '1981'
SELECT DISTINCT T1.`ID` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`Date` LIKE '1991-10%' AND T2.`T-BIL` < 2.0
SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`ANA Pattern` != 'P' AND T2.SEX = 'F' AND T2.Birthday BETWEEN '1980-01-01' AND '1989-12-31'
SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'PSS' AND T3.`CRP` > 2 AND T3.`CRE` = 1 AND T3.`LDH` = 123
SELECT AVG(`Laboratory`.`ALB`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`PLT` > 400 AND `Patient`.`Diagnosis` = 'SLE'
SELECT `Examination`.`Symptoms` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' GROUP BY `Examination`.`Symptoms` ORDER BY COUNT(`Examination`.`Symptoms`) DESC LIMIT 1
SELECT `Patient`.`Description`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = 48473
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Examination`.`Diagnosis` = 'APS'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE YEAR(`Laboratory`.`Date`) = '1997' AND (`Laboratory`.`TP` <= 6 OR `Laboratory`.`TP` >= 8.5)
SELECT (CAST(SUM(CASE WHEN `Examination`.`Diagnosis` LIKE '%ITP%' THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN `Examination`.`Diagnosis` LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL)) * 100 AS proportion FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Symptoms` LIKE '%thrombocytopenia%'
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Patient`.`ID`) AS percentage FROM `Patient` WHERE strftime('%Y', `Patient`.`Birthday`) = '1980' AND `Patient`.`Diagnosis` = 'RA'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Examination`.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND `Examination`.`Diagnosis` = 'Behcet' AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`WBC` < 3.5
SELECT DATEDIFF(`Examination`.`Examination Date`, `Patient`.`First Date`) AS days_before_evaluation FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = 821298
SELECT CASE WHEN (SEX = 'M' AND UA > 8.0) OR (SEX = 'F' AND UA > 6.5) THEN 'Yes' ELSE 'No' END AS `Normal Range` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = 57266
SELECT `Laboratory`.`Date` FROM `Laboratory` WHERE `Laboratory`.`ID` = '48473' AND `Laboratory`.`GOT` >= 60
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` LIKE '1994-%' AND `Laboratory`.`GOT` < 60
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GPT` >= 60
SELECT DISTINCT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GPT` > 60 ORDER BY T1.`Birthday` ASC
SELECT AVG(`LDH`) FROM `Laboratory` WHERE `LDH` < 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` BETWEEN 600 AND 800
SELECT `Patient`.`Admission` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, `Laboratory`.`ALP` FROM `Patient` LEFT JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1982-04-01' AND `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Laboratory`.`TP`, (`Laboratory`.`TP` - 8.5) AS deviation FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`TP` > 8.5
SELECT T1.`ID`, T1.`Birthday` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND (T2.`ALB` <= 3.5 OR T2.`ALB` >= 5.5) ORDER BY T1.`Birthday` DESC
SELECT T1.`ID`, CASE WHEN T2.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS Albumin_Status FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE strftime('%Y', T1.`Birthday`) = '1982'
SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND T2.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID
SELECT AVG(`Laboratory`.`UA`) AS `average_UA_index` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`UA` < 8.0 AND `Patient`.`SEX` = 'M') OR (`Laboratory`.`UA` < 6.5 AND `Patient`.`SEX` = 'F') AND `Laboratory`.`Date` = (SELECT MAX(`Laboratory`.`Date`) FROM `Laboratory` AS `L2` WHERE `L2`.`ID` = `Laboratory`.`ID`)
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`UN` = 29
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'RA' AND `Laboratory`.`UN` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CRE` >= 1.5
SELECT (SUM(CASE WHEN `Patient`.`SEX` = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END)) AS result FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` >= 1.5
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory` WHERE `T-BIL` IS NOT NULL)
SELECT T1.`SEX`, GROUP_CONCAT(DISTINCT T1.`ID`) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.`SEX`
SELECT T1.`ID`, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = (SELECT MIN(`Birthday`) FROM Patient) AND T2.`T-CHO` = (SELECT MAX(`T-CHO`) FROM Laboratory WHERE `T-CHO` IS NOT NULL) LIMIT 1
SELECT SUM(CASE WHEN T2.deathdate IS NULL THEN ROUND((strftime('%J', date('now')) - strftime('%J', T2.birthdate)) / 365) ELSE ROUND((strftime('%J', T2.deathdate) - strftime('%J', T2.birthdate)) / 365) END) / COUNT(T2.ID) FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T2.ID = T1.ID WHERE T1.T-CHO >= 250 AND T2.SEX = 'M'
SELECT T1.`ID`, T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TG` > 300
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 50
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Patient`.`Birthday` BETWEEN '1936-01-01' AND '1956-12-31' AND `Laboratory`.`CPK` >= 250
SELECT `Patient`.`ID`, `Patient`.`SEX`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` >= 180 AND `Laboratory`.`T-CHO` < 250
SELECT T1.`ID`, T2.`GLU` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Description` LIKE '1991-%' AND T2.`GLU` < 180
SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`WBC` <= 3.5 OR T2.`WBC` >= 9.0 GROUP BY T1.`SEX` ORDER BY T1.`Birthday` ASC
SELECT `Patient`.`ID`, `Patient`.`Diagnosis`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS Age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RBC` < 3.5
SELECT P.`ID`, P.`Admission` FROM `Patient` AS P INNER JOIN `Laboratory` AS L ON P.`ID` = L.`ID` WHERE P.`SEX` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', P.`Birthday`)) >= 50 AND (L.`RBC` <= 3.5 OR L.`RBC` >= 6.0)
SELECT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`HGB` < 10
SELECT T1.`ID`, T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T3.`HGB` > 10 AND T3.`HGB` < 17 ORDER BY T1.`Birthday` ASC LIMIT 1
SELECT `Patient`.`ID`, strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` >= 52 GROUP BY `Patient`.`ID` HAVING COUNT(`Laboratory`.`ID`) > 2
SELECT AVG(`Laboratory`.`HCT`) FROM `Laboratory` WHERE `Laboratory`.`Date` LIKE '1991%' AND `Laboratory`.`HCT` < 29
SELECT SUM(CASE WHEN `Laboratory`.`PLT` < 100 THEN 1 ELSE 0 END) AS lower_than_normal, SUM(CASE WHEN `Laboratory`.`PLT` > 400 THEN 1 ELSE 0 END) AS higher_than_normal FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` <= 100 OR `Laboratory`.`PLT` >= 400
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 50 AND `Laboratory`.`PLT` BETWEEN 100 AND 400
SELECT (CAST(SUM(CASE WHEN `Laboratory`.`PT` >= 14 AND `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(`Laboratory`.`PT` >= 14)) * 100 AS percentage FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 55
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`First Date`) > '1992' AND `Laboratory`.`PT` < 14
SELECT COUNT(*) FROM `Examination` WHERE `Examination Date` > '1997-01-01'
SELECT COUNT(DISTINCT T1.`ID`) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` INNER JOIN `Examination` AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`APTT` > 45 AND T3.`Thrombosis` = 0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`WBC` > 3.5 AND `Laboratory`.`WBC` < 9.0 AND (`Laboratory`.`FG` <= 150 OR `Laboratory`.`FG` >= 450)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` > '1980-01-01' AND (`Laboratory`.`FG` < 150 OR `Laboratory`.`FG` > 450)
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` >= 30
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` >= 2000
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Patient`.`Symptoms` IS NOT NULL
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` BETWEEN 80 AND 500 ORDER BY `Laboratory`.`IGA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` > 80 AND `Laboratory`.`IGA` < 500 AND `Patient`.`First Date` >= '1990-01-01'
SELECT `Patient`.`Diagnosis`, COUNT(`Patient`.`Diagnosis`) AS `Diagnosis_Count` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGM` <= 40 OR `Laboratory`.`IGM` >= 400 GROUP BY `Patient`.`Diagnosis` ORDER BY `Diagnosis_Count` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRP` = '+' AND `Patient`.`Description` IS NULL
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 70
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` IN ('-', '+-') AND `Examination`.`KCT` = '+'
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE YEAR(`Patient`.`Birthday`) >= 1985 AND `Laboratory`.`RA` IN ('-', '+-')
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 60
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`RF` < 20 AND `Examination`.`Thrombosis` = '0'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`C3` > 35 AND `Examination`.`ANA Pattern` = 'P'
SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`HCT` <= 29 OR T2.`HCT` >= 52 ORDER BY T3.`aCL IgA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 1 AND `Laboratory`.`C4` > 10
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND (`Laboratory`.`RNP` = '-' OR `Laboratory`.`RNP` = '+-')
SELECT `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` NOT IN ('-', '+-') ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`SM` IN ('-', '+-') AND `Examination`.`Thrombosis` = 0
SELECT T1.`ID` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SM` NOT IN ('negative', '0') ORDER BY T1.`Birthday` DESC LIMIT 3
SELECT `Examination`.`ID` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`SC170` IN ('negative', '0')
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SC170` IN ('negative', '0') AND `Patient`.`SEX` = 'F' AND `Patient`.`Description` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSA` IN ('-', '+-') AND strftime('%Y', `Patient`.`First Date`) < '2000'
SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SSA` NOT IN ('negative', '0') ORDER BY T1.`First Date` LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`SSB` IN ('-', '+-') AND `Examination`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`SSB` IN ('negative', '0') AND `Examination`.`Symptoms` IS NOT NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CENTROMEA` IN ('-', '+-') AND `Laboratory`.`SSB` IN ('-', '+-') AND `Patient`.`SEX` = 'M'
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` >= 8
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` < 8 AND `Patient`.`Description` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Patient`.`Admission` = '+'
SELECT CAST(COUNT(DISTINCT `Laboratory`.`ID`) AS REAL) * 100 / (SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` WHERE `Laboratory`.`GOT` >= 60) AS percentage FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GOT` >= 60 AND `Patient`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GOT` < 60
SELECT MIN(`Patient`.`Birthday`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` >= 60
SELECT T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GPT` < 60 ORDER BY T2.`GPT` DESC LIMIT 3
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND `Patient`.`SEX` = 'M'
SELECT MIN(`Patient`.`First Date`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` < 500 ORDER BY `Laboratory`.`LDH` DESC LIMIT 1
SELECT MAX(`Laboratory`.`Date`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` >= 500 AND `Patient`.`First Date` = (SELECT MAX(`First Date`) FROM `Patient`)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` >= 300 AND `Patient`.`Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`ALP` < 300
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT COUNT(*) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`TP` > 6.0 AND `Laboratory`.`TP` < 8.5
SELECT `Date` FROM `Laboratory` WHERE `ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`ALB` > 3.5 AND `Laboratory`.`ALB` < 5.5 AND `Laboratory`.`TP` BETWEEN 6.0 AND 8.5
SELECT `Examination`.`aCL IgG`, `Examination`.`aCL IgM`, `Examination`.`aCL IgA` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` > 6.50 ORDER BY `Laboratory`.`UA` DESC LIMIT 1
SELECT MAX(`Examination`.`ANA`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` < 1.5
SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`CRE` < 1.5 AND T3.`aCL IgA` = (SELECT MAX(`aCL IgA`) FROM Examination)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 AND `Examination`.`ANA Pattern` LIKE '%P%'
SELECT `Laboratory`.`ANA` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`T-BIL` < 2.0 ORDER BY `Laboratory`.`T-BIL` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`T-CHO` >= 250 AND `Examination`.`KCT` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`T-CHO` < 250 AND `Examination`.`ANA Pattern` = 'P'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 AND `Laboratory`.`Symptoms` IS NOT NULL
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 ORDER BY `Laboratory`.`TG` DESC LIMIT 1
SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Thrombosis = 0 AND T3.CPK < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`CPK` < 250 AND (`Examination`.`KCT` = '+' OR `Examination`.`RVVT` = '+' OR `Examination`.`LAC` = '+')
SELECT MIN(`Patient`.`Birthday`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` > 180
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`GLU` < 180 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0) AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Patient`.`Diagnosis` IS NOT NULL
SELECT T1.`ID`, T2.`PLT` FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'MCTD' AND T2.`PLT` > 100 AND T2.`PLT` < 400
SELECT AVG(`Laboratory`.`PT`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`PT` < 14
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` IN (1, 2) AND `Laboratory`.`PT` < 14
SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`college` = 'College of Engineering'
SELECT CONCAT(`member`.`first_name`, ' ', `member`.`last_name`) AS full_name FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'Art and Design Department'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women\'s Soccer'
SELECT `member`.`phone` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`event_name` = 'Women\'s Soccer'
SELECT COUNT(*) FROM `attendance` AS `a` INNER JOIN `event` AS `e` ON `a`.`link_to_event` = `e`.`event_id` INNER JOIN `member` AS `m` ON `a`.`link_to_member` = `m`.`member_id` WHERE `e`.`event_name` = 'Women\'s Soccer' AND `m`.`t_shirt_size` = 'Medium'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` GROUP BY `event`.`event_id` ORDER BY COUNT(`attendance`.`link_to_event`) DESC LIMIT 1
SELECT major.`college` FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE member.`position` = 'Vice President'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Maya' AND `member`.`last_name` = 'Mclean'
SELECT COUNT(DISTINCT T1.`event_id`) FROM `event` AS T1 INNER JOIN `attendance` AS T2 ON T1.`event_id` = T2.`link_to_event` INNER JOIN `member` AS T3 ON T2.`link_to_member` = T3.`member_id` WHERE T3.`first_name` = 'Sacha' AND T3.`last_name` = 'Harrison' AND strftime('%Y', T1.`event_date`) = '2019'
SELECT COUNT(DISTINCT `event`.`event_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 10
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` <> 'Fundraiser' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 20
SELECT CAST(COUNT(`attendance`.`link_to_member`) AS REAL) / COUNT(DISTINCT `event`.`event_id`) AS average_attendance FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `expense`.`cost` = (SELECT MAX(`cost`) FROM `expense`)
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Laugh Out Loud'
SELECT `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'
SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'
SELECT income.`amount` FROM income INNER JOIN member ON income.`link_to_member` = member.`member_id` WHERE member.`position` = 'Vice President'
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Food'
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'President'
SELECT `member`.`first_name` || ' ' || `member`.`last_name` AS full_name FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Advertisement'
SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name IN ('Pierce', 'Guidi') GROUP BY T2.department
SELECT SUM(`budget`.`amount`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'October Speaker'
SELECT `expense`.`expense_id`, `expense`.`approved` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'October Meeting' AND `event`.`event_date` = '2019-10-08'
SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (STRFTIME('%m', T1.expense_date) = '09' OR STRFTIME('%m', T1.expense_date) = '10')
SELECT SUM(CASE WHEN SUBSTR(`event`.`event_date`, 1, 4) = '2019' THEN `budget`.`spent` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`event`.`event_date`, 1, 4) = '2020' THEN `budget`.`spent` ELSE 0 END) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event`
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT `expense`.`cost` FROM `expense` INNER JOIN `event` ON `expense`.`expense_date` = `event`.`event_date` WHERE `expense`.`expense_description` = 'Posters' AND `event`.`event_date` = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT `zip_code`.`county` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Adela' AND `member`.`last_name` = 'O\'Gallagher'
SELECT COUNT(*) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'November Meeting' AND `budget`.`remaining` < 0
SELECT SUM(`budget`.`amount`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'September Speaker'
SELECT `event`.`status` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Post Cards, Posters' AND `expense`.`expense_date` = '2019-08-20'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Brent' AND `member`.`last_name` = 'Thomason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `zip_code`.`type` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Christof' AND `member`.`last_name` = 'Nielson'
SELECT major.`major_name` FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE member.`position` = 'Vice President'
SELECT `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT major.`department` FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE member.`position` = 'President'
SELECT income.`date_received` FROM member INNER JOIN income ON member.`member_id` = income.`link_to_member` WHERE member.`first_name` = 'Connor' AND member.`last_name` = 'Hilton' AND income.`source` = 'Dues'
SELECT `member`.`first_name`, `member`.`last_name` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`source` = 'Dues' ORDER BY `income`.`date_received` LIMIT 1
SELECT CAST(SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `budget`.`amount` ELSE 0 END) AS REAL) / SUM(CASE WHEN `event`.`event_name` = 'October Meeting' THEN `budget`.`amount` ELSE 0 END) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Advertisement'
SELECT (SUM(CASE WHEN `budget`.`category` = 'Parking' THEN `budget`.`amount` ELSE 0 END) / SUM(`budget`.`amount`)) * 100 AS percentage FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'November Speaker'
SELECT SUM(`expense`.`cost`) FROM `expense` WHERE `expense`.`expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `zip_code`.`city`) FROM `zip_code` WHERE `zip_code`.`county` = 'Orange County' AND `zip_code`.`state` = 'Virginia'
SELECT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `budget`.`remaining` = (SELECT MIN(`remaining`) FROM `budget`)
SELECT `member`.`first_name`, `member`.`last_name`, `member`.`email`, `member`.`position`, `member`.`t_shirt_size`, `member`.`phone`, `member`.`zip`, `member`.`link_to_major` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting'
SELECT T.college FROM ( SELECT M.`link_to_major`, COUNT(M.`member_id`) AS num, J.`college` FROM `member` AS M INNER JOIN `major` AS J ON M.`link_to_major` = J.`major_id` GROUP BY M.`link_to_major` ) T ORDER BY T.num DESC LIMIT 1
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `expense`.`expense_description`, `expense`.`expense_date`, `expense`.`cost` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`event_name` = 'Women\'s Soccer'
SELECT income.`date_received` FROM income INNER JOIN member ON income.`link_to_member` = member.`member_id` WHERE member.`first_name` = 'Casey' AND member.`last_name` = 'Mason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(DISTINCT `attendance`.`link_to_event`) FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` WHERE `member`.`phone` = '954-555-6240'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' ORDER BY (`budget`.`spent` / `budget`.`amount`) DESC LIMIT 1
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'President'
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(`event_id`) FROM `event` WHERE `type` = 'Meeting' AND STRFTIME('%Y', `event_date`) = '2020'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` GROUP BY `member`.`member_id` HAVING COUNT(`attendance`.`link_to_event`) > 7
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `major`.`major_name` = 'Interior Design' AND `event`.`event_name` = 'Community Theater'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Georgetown' AND `zip_code`.`state` = 'South Carolina'
SELECT COUNT(`income`.`amount`) FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `member`.`first_name` = 'Grant' AND `member`.`last_name` = 'Gilmour'
SELECT `member`.`first_name`, `member`.`last_name` FROM `income` JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`amount` > 40
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `member`.`first_name`, `member`.`last_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `member` ON `budget`.`budget_id` = `member`.`member_id` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT member.`first_name`, member.`last_name`, income.`source` FROM member INNER JOIN income ON member.`member_id` = income.`link_to_member` WHERE income.`amount` = (SELECT MAX(income.`amount`) FROM income)
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` ORDER BY `expense`.`cost` LIMIT 1
SELECT CAST(SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `expense`.`cost` ELSE 0 END) AS REAL) * 100 / SUM(`expense`.`cost`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT CAST(SUM(CASE WHEN `major`.`major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `major`.`major_name` = 'Physics' THEN 1 ELSE 0 END) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT `source`, SUM(`amount`) AS total_amount FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY `source` ORDER BY total_amount DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Physics Teaching'
SELECT COUNT(DISTINCT `attendance`.`link_to_member`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`event_name` = 'Community Theater' AND YEAR(`event`.`event_date`) = 2019
SELECT COUNT(T1.`link_to_event`) AS event_count, T4.`major_name` FROM attendance AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN event AS T3 ON T1.`link_to_event` = T3.`event_id` INNER JOIN major AS T4 ON T2.`link_to_major` = T4.`major_id` WHERE T2.`first_name` = 'Luisa' AND T2.`last_name` = 'Guidi' GROUP BY T4.`major_name`
SELECT SUM(`budget`.`spent`) / COUNT(`budget`.`spent`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Food' AND `event`.`event_status` = 'Closed'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Advertisement' ORDER BY `budget`.`spent` DESC LIMIT 1
SELECT COUNT(*) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'
SELECT CAST(SUM(CASE WHEN `event`.`type` = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event`.`event_id`) FROM `event` WHERE `event`.`event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT expense.`cost` FROM event INNER JOIN budget ON event.`event_id` = budget.`link_to_event` INNER JOIN expense ON budget.`budget_id` = expense.`link_to_budget` WHERE event.`event_name` = 'September Speaker' AND expense.`expense_description` = 'Posters'
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' AND `budget`.`remaining` < 0 ORDER BY `budget`.`remaining` LIMIT 1
SELECT `expense`.`expense_description`, SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'October Meeting' AND `expense`.`approved` = 'true' GROUP BY `expense`.`expense_description`
SELECT `budget`.`category`, SUM(`budget`.`amount`) AS amount_budgeted FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'April Speaker' GROUP BY `budget`.`category` ORDER BY amount_budgeted ASC
SELECT `budget_id`, `category`, MAX(`amount`) AS max_amount FROM `budget` WHERE `category` = 'Food'
SELECT `budget_id`, `category`, `amount` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_date` = '2019-08-20'
SELECT `member`.`first_name`, `member`.`last_name`, SUM(`expense`.`cost`) AS total_cost FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `member`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `member`.`first_name`, `member`.`last_name`
SELECT `expense`.`expense_description` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT `expense`.`expense_description`, `expense`.`expense_date`, `expense`.`cost`, `member`.`first_name`, `member`.`last_name` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT `member`.`zip` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`cost` < 50
SELECT major.`major_name` FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE member.`first_name` = 'Phillip' AND member.`last_name` = 'Cullen'
SELECT `member`.`position` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `event`.`type` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 30
SELECT `type` FROM `event` WHERE `location` = 'MU 215'
SELECT `type` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT CAST(SUM(CASE WHEN `member`.`position` = 'Member' AND `major`.`major_name` = 'Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT `type` FROM `event` WHERE `location` = 'MU 215'
SELECT COUNT(*) FROM `income` WHERE `amount` = 50
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'Member' AND `t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `member`.`last_name`, `major`.`department`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `budget`.`category` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `major`.`department` = 'Electrical and Computer Engineering Department' AND `member`.`position` = 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`type` = 'Social' AND `member`.`position` = 'Vice President' AND `event`.`location` = '900 E. Washington St'
SELECT `member`.`last_name`, `member`.`position` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`expense_date` = '2019-09-10'
SELECT `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `member`.`position` = 'Member' AND `event`.`event_name` = 'Women\'s Soccer'
SELECT CAST(COUNT(CASE WHEN `income`.`amount` = 50 THEN 1 END) AS REAL) * 100 / COUNT(`member`.`member_id`) FROM `member` LEFT JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `member`.`t_shirt_size` = 'Medium'
SELECT DISTINCT `state` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code`.`zip_code` FROM `zip_code` WHERE `zip_code`.`type` = 'PO Box' AND `zip_code`.`county` = 'San Juan Municipio' AND `zip_code`.`state` = 'Puerto Rico'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT `attendance`.`link_to_event` FROM `expense` INNER JOIN `attendance` ON `expense`.`link_to_member` = `attendance`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT DISTINCT `member`.`member_id`, `member`.`first_name`, `member`.`last_name`, `attendance`.`link_to_event` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` WHERE `expense`.`approved` = 'true' AND `expense`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Katy' AND `member`.`link_to_major` = 'rec1N0upiVLy5esTO'
SELECT `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences'
SELECT `member`.`email` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `expense`.`cost` > 20
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'education' AND `major`.`college` = 'College of Education & Human Services'
SELECT CAST(SUM(CASE WHEN `budget`.`remaining` < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event`.`event_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_id`, `expense_description`, `cost` FROM `expense` WHERE `cost` > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT CAST(SUM(CASE WHEN `zip_code`.`type` = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `zip_code`
SELECT `event`.`event_name`, `event`.`location` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` INNER JOIN `expense` ON `event`.`event_id` = `expense`.`link_to_event` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`major_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `expense`.`cost` > 100
SELECT DISTINCT `zip_code`.`city`, `zip_code`.`county` FROM `event` INNER JOIN `income` ON `event`.`event_id` = `income`.`link_to_event` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `event`.`event_id` IN (SELECT `link_to_event` FROM `income` GROUP BY `link_to_event` HAVING COUNT(`income_id`) > 40)
SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN budget AS T3 ON T2.`link_to_budget` = T3.`budget_id` GROUP BY T1.`member_id` HAVING COUNT(DISTINCT T3.`link_to_event`) > 1 ORDER BY SUM(T2.`cost`) DESC LIMIT 1
SELECT SUM(`expense`.`cost`) / COUNT(DISTINCT `event`.`event_id`) AS average_amount_paid FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `event` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` != 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `budget`.`category` = 'Parking' AND `expense`.`cost` < (SELECT SUM(`expense`.`cost`) / COUNT(`event`.`event_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `budget`.`category` = 'Parking')
SELECT CAST(SUM(expense.`cost`) AS REAL) * 100 / (SELECT COUNT(DISTINCT event.`event_id`) FROM event WHERE event.`type` = 'Meeting') FROM event INNER JOIN budget ON event.`event_id` = budget.`link_to_event` INNER JOIN expense ON budget.`budget_id` = expense.`link_to_budget` WHERE event.`type` = 'Meeting'
SELECT `budget`.`budget_id`, MAX(`expense`.`cost`) AS max_cost FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `expense`.`expense_description` = 'Water, chips, cookies' GROUP BY `budget`.`budget_id` ORDER BY max_cost DESC LIMIT 1
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` GROUP BY `member`.`member_id` ORDER BY SUM(`expense`.`cost`) DESC LIMIT 5
SELECT `member`.`first_name`, `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`cost` > (SELECT AVG(`cost`) FROM `expense`)
SELECT CAST(SUM(CASE WHEN `zip_code`.`state` = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) - CAST(SUM(CASE WHEN `zip_code`.`state` = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'Member'
SELECT T1.major_name, T1.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Garrett' AND T2.last_name = 'Gerke'
SELECT `member`.`first_name`, `member`.`last_name`, `expense`.`cost` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`expense_description` = 'Water, Veggie tray, supplies'
SELECT `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Elementary Education'
SELECT `budget`.`category`, `budget`.`amount` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'January Speaker'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`amount` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`date_received` = '2019-09-09'
SELECT `budget`.`category` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `expense`.`expense_description` = 'Posters' LIMIT 1
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Secretary'
SELECT `event`.`event_name`, SUM(`budget`.`spent`) AS total_amount_spent FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Speaker Gifts' GROUP BY `event`.`event_name`
SELECT `zip_code`.`city` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT `member`.`first_name`, `member`.`last_name`, `member`.`position` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Lincolnton' AND `zip_code`.`state` = 'North Carolina' AND `zip_code`.`zip_code` = '28092'
SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Premium'
SELECT CAST(SUM(IIF(`customers`.`Currency` = 'EUR', 1, 0)) AS REAL) / CAST(SUM(IIF(`customers`.`Currency` = 'CZK', 1, 0)) AS REAL) FROM `customers`
SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date BETWEEN 201201 AND 201212 ORDER BY T2.Consumption ASC LIMIT 1
SELECT AVG(`yearmonth`.`Consumption`) / 12 AS avg_monthly_consumption FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND `yearmonth`.`Date` BETWEEN 201301 AND 201312
SELECT T1.`CustomerID`, T1.`Segment`, T1.`Currency`, SUM(T2.`Consumption`) AS TotalConsumption FROM `customers` AS T1 INNER JOIN `yearmonth` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Currency` = 'CZK' AND T2.`Date` BETWEEN 201101 AND 201112 GROUP BY T1.`CustomerID` ORDER BY TotalConsumption DESC LIMIT 1
SELECT COUNT(`customers`.`CustomerID`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' AND `yearmonth`.`Date` BETWEEN 201201 AND 201212 AND `yearmonth`.`Consumption` < 30000
SELECT (SELECT SUM(ym.Consumption) FROM yearmonth ym INNER JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'CZK' AND ym.Date BETWEEN 201201 AND 201212) - (SELECT SUM(ym.Consumption) FROM yearmonth ym INNER JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Currency = 'EUR' AND ym.Date BETWEEN 201201 AND 201212) AS DifferenceInConsumption
SELECT `yearmonth`.`Date` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' ORDER BY `yearmonth`.`Consumption` DESC LIMIT 1
SELECT T.Segment FROM ( SELECT T1.Segment, SUM(T2.Consumption) AS total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ) AS T ORDER BY T.total_consumption ASC LIMIT 1
SELECT SUBSTR(`yearmonth`.`Date`, 1, 4) AS Year, SUM(`yearmonth`.`Consumption`) AS TotalConsumption FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1
SELECT `yearmonth`.`Date` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND `yearmonth`.`Date` BETWEEN 201301 AND 201312 ORDER BY `yearmonth`.`Consumption` DESC LIMIT 1
WITH SegmentConsumption AS (SELECT c.`Segment`, y.`CustomerID`, SUM(y.`Consumption`) AS TotalConsumption FROM `customers` c JOIN `yearmonth` y ON c.`CustomerID` = y.`CustomerID` WHERE y.`Date` BETWEEN 201301 AND 201312 GROUP BY c.`Segment`, y.`CustomerID`), MinConsumption AS (SELECT `Segment`, MIN(TotalConsumption) AS MinConsumption FROM SegmentConsumption GROUP BY `Segment`), AnnualAverage AS (SELECT sc.`Segment`, SUM(sc.TotalConsumption) / COUNT(sc.`CustomerID`) AS AnnualAverage FROM SegmentConsumption sc JOIN MinConsumption mc ON sc.`Segment` = mc.`Segment` AND sc.TotalConsumption = mc.MinConsumption GROUP BY sc.`Segment`) SELECT (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'SME') - (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'LAM') AS SME_LAM_Difference, (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'LAM') - (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'KAM') AS LAM_KAM_Difference, (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'KAM') - (SELECT AnnualAverage FROM AnnualAverage WHERE `Segment` = 'SME') AS KAM_SME_Difference;
SELECT c.`Segment`, ((MAX(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2013' THEN y.`Consumption` END) - MAX(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2012' THEN y.`Consumption` END)) / MAX(CASE WHEN SUBSTR(y.`Date`, 1, 4) = '2013' THEN y.`Consumption` END) * 100) AS PercentageIncrease FROM `customers` c JOIN `yearmonth` y ON c.`CustomerID` = y.`CustomerID` WHERE c.`Currency` = 'EUR' AND c.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY c.`Segment` ORDER BY PercentageIncrease DESC LIMIT 1;
SELECT SUM(`yearmonth`.`Consumption`) FROM `yearmonth` WHERE `yearmonth`.`CustomerID` = 6 AND `yearmonth`.`Date` BETWEEN 201308 AND 201311
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Value for money') - (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'SVK' AND `Segment` = 'Value for money')
SELECT T1.Consumption - T2.Consumption AS Difference FROM yearmonth AS T1 JOIN yearmonth AS T2 ON T1.Date = '201304' AND T2.Date = '201304' WHERE T1.CustomerID = 7 AND T2.CustomerID = 5
SELECT SUM(CASE WHEN `customers`.`Currency` = 'CZK' THEN 1 ELSE 0 END) - SUM(CASE WHEN `customers`.`Currency` = 'EUR' THEN 1 ELSE 0 END) AS Difference FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` WHERE `customers`.`Segment` = 'SME'
SELECT customers.`CustomerID`, MAX(yearmonth.`Consumption`) FROM customers INNER JOIN yearmonth ON customers.`CustomerID` = yearmonth.`CustomerID` WHERE customers.`Segment` = 'LAM' AND customers.`Currency` = 'EUR' AND yearmonth.`Date` = '201310'
SELECT T1.`CustomerID`, MAX(T2.`Consumption`) AS MaxConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'KAM' GROUP BY T1.`CustomerID` ORDER BY MaxConsumption DESC LIMIT 1
SELECT SUM(yearmonth.`Consumption`) FROM yearmonth INNER JOIN customers ON yearmonth.`CustomerID` = customers.`CustomerID` WHERE yearmonth.`Date` = 201305 AND customers.`Segment` = 'KAM'
SELECT (COUNT(CASE WHEN y.`Consumption` > 46.73 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM `customers` c INNER JOIN `yearmonth` y ON c.`CustomerID` = y.`CustomerID` WHERE c.`Segment` = 'LAM'
SELECT `Country`, COUNT(*) AS Total FROM `gasstations` WHERE `Segment` = 'Value for money' GROUP BY `Country`
SELECT CAST(SUM(IIF(`customers`.`Currency` = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(`customers`.`CustomerID`) FROM `customers` WHERE `customers`.`Segment` = 'KAM'
SELECT CAST(SUM(IIF(yearmonth.`Consumption` > 528.3, 1, 0)) AS REAL) * 100 / COUNT(yearmonth.`CustomerID`) FROM yearmonth WHERE SUBSTR(yearmonth.`Date`, 1, 6) = '201202'
SELECT CAST(SUM(CASE WHEN `gasstations`.`Segment` = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `gasstations` WHERE `gasstations`.`Country` = 'SVK'
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' ORDER BY `Consumption` DESC LIMIT 1
SELECT T.Segment FROM ( SELECT T1.Segment, SUM(T2.Consumption) AS total_consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.Segment ) AS T ORDER BY T.total_consumption ASC LIMIT 1
SELECT T1.`CustomerID` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' AND T2.`Date` = '201206' ORDER BY T2.`Consumption` ASC LIMIT 1
SELECT MAX(`Consumption`) FROM `yearmonth` WHERE `Date` LIKE '2012%'
SELECT MAX(SUM(`yearmonth`.`Consumption`) / 12) AS BiggestMonthlyConsumption FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' GROUP BY `customers`.`CustomerID`
SELECT T1.`Description` FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` INNER JOIN yearmonth AS T3 ON T2.`CustomerID` = T3.`CustomerID` WHERE T3.`Date` = '201309'
SELECT DISTINCT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` LIKE '2013-06-%'
SELECT DISTINCT `gasstations`.`ChainID` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `customers`.`Currency` = 'EUR'
SELECT `products`.`Description` FROM `transactions_1k` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR'
SELECT AVG(transactions_1k.`Amount` * transactions_1k.`Price`) FROM transactions_1k WHERE transactions_1k.`Date` LIKE '2012-01-%'
SELECT COUNT(DISTINCT `customers`.`CustomerID`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND `yearmonth`.`Consumption` > 1000
SELECT T3.`Description` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN products AS T3 ON T1.`ProductID` = T3.`ProductID` WHERE T2.`Country` = 'CZE'
SELECT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11
SELECT COUNT(`transactions_1k`.`TransactionID`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE' AND `transactions_1k`.`Price` > 1000
SELECT COUNT(`transactions_1k`.`TransactionID`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE' AND `transactions_1k`.`Date` > '2012-01-01'
SELECT AVG(T1.`Price`) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE'
SELECT AVG(T2.`Price`) FROM `customers` AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Currency` = 'EUR'
SELECT T1.`CustomerID`, T1.`Segment`, T1.`Currency`, SUM(T2.`Amount` * T2.`Price`) AS TotalPayment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '2012-08-25' GROUP BY T1.`CustomerID` ORDER BY TotalPayment DESC LIMIT 1
SELECT g.`Country` FROM `transactions_1k` AS t INNER JOIN `gasstations` AS g ON t.`GasStationID` = g.`GasStationID` WHERE t.`Date` = '2012-08-25' ORDER BY t.`Time` ASC LIMIT 1
SELECT `customers`.`Currency` FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Time` = '16:25:00'
SELECT T2.`Segment` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` = '2012-08-23' AND T1.`Time` = '21:20:00'
SELECT COUNT(`transactions_1k`.`TransactionID`) FROM `transactions_1k` JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-26' AND `transactions_1k`.`Time` < '13:00:00' AND `gasstations`.`Currency` = 'CZK'
SELECT `customers`.`Segment` FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` ORDER BY `transactions_1k`.`Date`, `transactions_1k`.`Time` LIMIT 1
SELECT T2.`Country` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`Date` = '2012-08-24' AND T1.`Time` = '12:42:00'
SELECT `ProductID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00'
SELECT T1.Date, T1.Amount FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-01-01' AND T1.Amount = 124.05
SELECT COUNT(`transactions_1k`.`TransactionID`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-26' AND `transactions_1k`.`Time` BETWEEN '08:00:00' AND '09:00:00' AND `gasstations`.`Country` = 'CZE'
SELECT `customers`.`Currency` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `yearmonth`.`Date` = '201306' AND `yearmonth`.`Consumption` = 214582.17
SELECT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`CardID` = 667467
SELECT T3.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T1.Amount = 548.4 AND T1.Date = '2012-08-24'
SELECT CAST(COUNT(DISTINCT CASE WHEN T1.Currency = 'EUR' THEN T1.CustomerID END) AS REAL) * 100 / COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'
SELECT (SUM(CASE WHEN y.`Date` = '201207' THEN y.Consumption ELSE 0 END) - SUM(CASE WHEN y.`Date` = '201302' THEN y.Consumption ELSE 0 END)) / SUM(CASE WHEN y.`Date` = '201207' THEN y.Consumption ELSE 0 END) AS consumption_decrease_rate FROM transactions_1k t INNER JOIN yearmonth y ON t.CustomerID = y.CustomerID WHERE t.Price = 634.8 AND t.Date = '2012-08-25'
SELECT T1.`GasStationID`, SUM(T1.`Amount` * T1.`Price`) AS Revenue FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` GROUP BY T1.`GasStationID` ORDER BY Revenue DESC LIMIT 1
SELECT CAST(SUM(IIF(`gasstations`.`Segment` = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(`gasstations`.`Segment`) FROM `gasstations` WHERE `gasstations`.`Country` = 'SVK'
SELECT SUM(T1.`Amount` * T1.`Price`) AS total_spent_at_gas_stations, (SELECT SUM(T2.`Consumption`) FROM `yearmonth` AS T2 WHERE T2.`CustomerID` = 38508 AND T2.`Date` = '201201') AS spent_in_january_2012 FROM `transactions_1k` AS T1 WHERE T1.`CustomerID` = 38508
SELECT `products`.`Description` FROM `transactions_1k` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` GROUP BY `products`.`Description` ORDER BY SUM(`transactions_1k`.`Amount`) DESC LIMIT 5
SELECT T1.`CustomerID`, T1.`Currency`, SUM(T2.`Price`) / SUM(T2.`Amount`) AS `AveragePricePerItem` FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` GROUP BY T1.`CustomerID` ORDER BY SUM(T2.`Price`) DESC LIMIT 1
SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1
SELECT ym.`Consumption` FROM transactions_1k AS t INNER JOIN yearmonth AS ym ON t.`CustomerID` = ym.`CustomerID` WHERE t.`ProductID` = 5 AND t.`Price` / t.`Amount` > 29.00 AND ym.`Date` = '201208'
