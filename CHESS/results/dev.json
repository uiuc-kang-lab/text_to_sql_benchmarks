{
    "26": "SELECT S.School AS `School Name`, S.Street || ', ' || S.City || ', ' || S.State || ', ' || S.Zip AS `Full Communication Address`  FROM frpm F  INNER JOIN schools S ON F.CDSCode = S.CDSCode  WHERE F.`School Type` = 'High Schools (Public)'  AND F.`County Name` = 'Monterey'  AND F.`FRPM Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 AND T1.`Enrollment (K-12)` = (SELECT MIN(`Enrollment (K-12)`) FROM frpm WHERE `Charter School (Y/N)` = 1)\t----- bird -----\tcalifornia_schools",
    "42": "SELECT T2.EdOpsName FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath IS NOT NULL)\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT T2.`District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 0 AND T1.City = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "111": "SELECT COUNT(T1.account_id) FROM account AS T1 WHERE T1.district_id IN (SELECT T2.district_id FROM district AS T2 WHERE T2.A2 = 'Litomerice') AND STRFTIME('%Y', T1.date) = '1996'\t----- bird -----\tfinancial",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial",
    "177": "SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM disp WHERE client_id = 4) AND trans_id > 851 ORDER BY trans_id ASC LIMIT 1) AS balance, (SELECT gender FROM client WHERE client_id = 4) AS gender\t----- bird -----\tfinancial",
    "180": "SELECT T1.client_id, T3.account_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE STRFTIME('%Y', T1.birth_date) BETWEEN '1983' AND '1987' AND T4.A3 = 'east Bohemia'\t----- bird -----\tfinancial",
    "226": "SELECT ROUND((SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) * 1.0 / COUNT(bond_id)) * 100, 5) AS percent FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM (     SELECT A.element, COUNT(*) AS element_count     FROM molecule M     INNER JOIN atom A ON M.molecule_id = A.molecule_id     WHERE M.label = '+'     GROUP BY A.element ) AS ElementCounts WHERE element_count = (     SELECT MIN(element_count)     FROM (         SELECT A.element, COUNT(*) AS element_count         FROM molecule M         INNER JOIN atom A ON M.molecule_id = A.molecule_id         WHERE M.label = '+'         GROUP BY A.element     ) AS InnerElementCounts )\t----- bird -----\ttoxicology",
    "255": "SELECT ROUND((SELECT COUNT(bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '+') * 100.0 / (SELECT COUNT(bond_id) FROM bond WHERE bond_type = '-'), 5)\t----- bird -----\ttoxicology",
    "268": "SELECT DISTINCT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON (T1.atom_id = T2.atom_id OR T1.atom_id2 = T2.atom_id) WHERE T1.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "272": "SELECT `molecule_id` FROM `molecule` WHERE `label` = '-' AND `molecule_id` IN (SELECT `molecule_id` FROM `bond` WHERE `bond_type` = '#') AND `molecule_id` IN (SELECT `molecule_id` FROM `atom` WHERE `element` = 'c')\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(bond.bond_id) AS double_bond_count, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR006' AND bond.bond_type = '='\t----- bird -----\ttoxicology",
    "305": "SELECT bond_id, atom_id, atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '-') AND atom_id < atom_id2\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id) AS total_molecules, COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id END) AS carcinogenic_molecules FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT `molecule_id` FROM `molecule` WHERE `label` = '-' AND `molecule_id` IN (SELECT `molecule_id` FROM `atom` GROUP BY `molecule_id` HAVING COUNT(`atom_id`) > 5)\t----- bird -----\ttoxicology",
    "353": "SELECT T2.name, T2.totalSetSize FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian'\t----- bird -----\tcard_games",
    "378": "SELECT DISTINCT uuid FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(DISTINCT id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "406": "SELECT DISTINCT C.id FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid WHERE C.types = 'Creature' AND L.status = 'Legal'\t----- bird -----\tcard_games",
    "416": "SELECT (SELECT COUNT(*) FROM `cards` AS `C` INNER JOIN `foreign_data` AS `F` ON `C`.`uuid` = `F`.`uuid` WHERE (`C`.`power` IS NULL OR `C`.`power` = '*') AND `F`.`language` = 'French') * 100.0 / (SELECT COUNT(*) FROM `cards` WHERE `power` IS NULL OR `power` = '*') AS percentage\t----- bird -----\tcard_games",
    "428": "SELECT T1.name, T2.translation FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games",
    "442": "SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')\t----- bird -----\tcard_games",
    "445": "SELECT C.name, FD.type, FD.language, FD.flavorText FROM cards AS C JOIN foreign_data AS FD ON C.uuid = FD.uuid WHERE C.watermark = 'Color Pie'\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL;\t----- bird -----\tcard_games",
    "484": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap' AND T2.convertedManaCost = (     SELECT MAX(T2.convertedManaCost)     FROM cards AS T2     INNER JOIN sets AS T3 ON T2.setCode = T3.code     WHERE T3.name = 'Coldsnap' )\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "503": "SELECT T2.type FROM sets AS T2 WHERE T2.code = (SELECT T1.setCode FROM cards AS T1 WHERE T1.name = 'Samite Pilgrim')\t----- bird -----\tcard_games",
    "522": "SELECT DISTINCT C.name, L.format  FROM cards AS C  INNER JOIN legalities AS L ON C.uuid = L.uuid  WHERE C.edhrecRank = 1 AND L.status = 'Banned'\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT T1.name, T3.format  FROM cards AS T1  INNER JOIN sets AS T2 ON T1.setCode = T2.code  INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid  WHERE T2.name = 'Hour of Devastation'  AND T3.status = 'Legal'\t----- bird -----\tcard_games",
    "543": "SELECT AnswerCount FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') ORDER BY AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(*) FROM votes WHERE PostId IN (SELECT Id FROM posts WHERE Title LIKE '%data visualization%')\t----- bird -----\tcodebase_community",
    "589": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users)\t----- bird -----\tcodebase_community",
    "598": "SELECT      ((Count_2010 * 100.0 / Total_Count) - (Count_2011 * 100.0 / Total_Count)) AS Percentage_Difference  FROM (     SELECT          (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND STRFTIME('%Y', Date) = '2010') AS Count_2010,         (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND STRFTIME('%Y', Date) = '2011') AS Count_2011,         (SELECT COUNT(*) FROM badges WHERE Name = 'Student') AS Total_Count )\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60 AND OwnerUserId IS NOT NULL\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) FROM comments WHERE score > 60;\t----- bird -----\tcodebase_community",
    "610": "SELECT DISTINCT T2.Name FROM badges AS T2 WHERE T2.UserId IN (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users))\t----- bird -----\tcodebase_community",
    "620": "SELECT DISTINCT T2.Id, T2.Views FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "646": "SELECT DISTINCT P.Title, C.UserDisplayName  FROM comments AS C  INNER JOIN posts AS P ON C.PostId = P.Id  WHERE C.Score > 60 AND C.UserDisplayName IS NOT NULL\t----- bird -----\tcodebase_community",
    "648": "SELECT U.DisplayName, U.WebsiteUrl FROM users AS U INNER JOIN posts AS P ON U.Id = P.OwnerUserId WHERE P.FavoriteCount > 150 AND U.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND T1.id IN (SELECT T3.hero_id FROM hero_attribute AS T3 INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Strength' AND T3.attribute_value = 100)\t----- bird -----\tsuperhero",
    "772": "SELECT C1.colour AS eye_colour, C2.colour AS hair_colour, C3.colour AS skin_colour FROM superhero AS S INNER JOIN gender AS G ON S.gender_id = G.id INNER JOIN publisher AS P ON S.publisher_id = P.id INNER JOIN colour AS C1 ON S.eye_colour_id = C1.id INNER JOIN colour AS C2 ON S.hair_colour_id = C2.id INNER JOIN colour AS C3 ON S.skin_colour_id = C3.id WHERE G.gender = 'Female' AND P.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'Amber')\t----- bird -----\tsuperhero",
    "801": "SELECT (CAST(SUM(CASE WHEN G.gender = 'Male' THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN G.gender = 'Female' THEN 1 ELSE 0 END)) AS male_to_female_ratio FROM superhero AS S INNER JOIN gender AS G ON S.gender_id = G.id\t----- bird -----\tsuperhero",
    "824": "SELECT T1.superhero_name  FROM superhero AS T1  INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id  WHERE T2.power_id = (SELECT id FROM superpower WHERE power_name = 'Wind Control')  ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "829": "SELECT ABS((SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero",
    "846": "SELECT DISTINCT D.driverRef FROM qualifying Q INNER JOIN drivers D ON Q.driverId = D.driverId WHERE Q.raceId = 20 AND Q.q1 IS NOT NULL AND NOT EXISTS (   SELECT 1   FROM qualifying Q2   WHERE Q2.driverId = Q.driverId   AND Q2.raceId = Q.raceId   AND Q2.q2 IS NOT NULL )\t----- bird -----\tformula_1",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29') AND statusId IN (SELECT statusId FROM status WHERE status = 'Finished' OR status LIKE '+%Lap%')\t----- bird -----\tformula_1",
    "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T1.year = (SELECT MIN(year) FROM races WHERE name = 'European Grand Prix')\t----- bird -----\tformula_1",
    "898": "SELECT T1.forename || ' ' || T1.surname AS name, (STRFTIME('%Y', 'now') - STRFTIME('%Y', T1.dob)) AS age FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT T2.name FROM circuits AS T2 WHERE T2.circuitId IN (SELECT T1.circuitId FROM races AS T1 WHERE T1.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId HAVING COUNT(T1.raceId) = 4)\t----- bird -----\tformula_1",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.name = 'Yas Marina Circuit'\t----- bird -----\tformula_1",
    "928": "SELECT T3.driverRef FROM drivers AS T3 WHERE T3.driverId = (SELECT T1.driverId FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2007 AND T1.positionOrder = 1)\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = (SELECT `raceId` FROM `races` WHERE `name` = 'Australian Grand Prix' AND `year` = 2008) AND `statusId` IN (SELECT `statusId` FROM `status` WHERE `status` = 'Finished' OR `status` LIKE '+%Lap%')\t----- bird -----\tformula_1",
    "938": "SELECT T4.forename, T4.surname, T4.url FROM drivers AS T4 WHERE T4.driverId = (SELECT T3.driverId FROM races AS T1 INNER JOIN results AS T3 ON T1.raceId = T3.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T3.positionOrder = 1)\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "970": "SELECT D.driverId FROM drivers D INNER JOIN lapTimes L ON D.driverId = L.driverId WHERE D.nationality = 'German' AND STRFTIME('%Y', D.dob) BETWEEN '1980' AND '1990' GROUP BY D.driverId ORDER BY MIN(L.milliseconds) ASC LIMIT 3\t----- bird -----\tformula_1",
    "985": "SELECT `driverId` FROM `lapTimes` AS `T1` WHERE `T1`.`lap` = 3 AND `T1`.`raceId` IN (SELECT `raceId` FROM `races` WHERE `name` = 'French Grand Prix') ORDER BY `T1`.`time` DESC LIMIT 1\t----- bird -----\tformula_1",
    "987": "SELECT AVG((CAST(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':') - 1) AS INTEGER) * 60000) + (CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1, 2) AS INTEGER) * 1000) + CAST(SUBSTR(fastestLapTime, INSTR(fastestLapTime, '.') + 1) AS INTEGER)) AS fastestLapMilliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND position <= 5\t----- bird -----\tformula_1",
    "1004": "SELECT T1.forename, T1.surname, COUNT(T2.resultId) AS wins FROM drivers AS T1 LEFT JOIN results AS T2 ON T1.driverId = T2.driverId AND T2.position = 1 WHERE T1.dob = (SELECT MIN(dob) FROM drivers) GROUP BY T1.forename, T1.surname\t----- bird -----\tformula_1",
    "1039": "SELECT SUM(PA.long_shots) * 1.0 / COUNT(PA.player_fifa_api_id) AS average_long_shots FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id WHERE P.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "1042": "SELECT T2.name FROM League AS T2 INNER JOIN Match AS T1 ON T2.id = T1.league_id WHERE T1.season = '2009/2010' GROUP BY T2.name HAVING SUM(T1.home_team_goal) / COUNT(DISTINCT T1.id) > SUM(T1.away_team_goal) / COUNT(DISTINCT T1.id)\t----- bird -----\teuropean_football_2",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT T1.name FROM League AS T1 WHERE T1.country_id IN (SELECT T2.id FROM Country AS T2 WHERE T2.name = 'Germany')\t----- bird -----\teuropean_football_2",
    "1118": "SELECT DISTINCT player_name FROM Player WHERE (julianday('now') - julianday(birthday)) / 365.25 >= 35\t----- bird -----\teuropean_football_2",
    "1145": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT `Diagnosis`, COUNT(`Diagnosis`) AS `occurrences` FROM `Patient` WHERE `ID` IN (SELECT `ID` FROM `Laboratory` WHERE `Date` BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY `Diagnosis` ORDER BY `occurrences` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (SELECT COUNT(DISTINCT `ID`) FROM `Examination` WHERE `Symptoms` LIKE '%thrombocytopenia%' AND `Diagnosis` LIKE '%SLE%') * 100.0 / (SELECT COUNT(DISTINCT `ID`) FROM `Examination` WHERE `Symptoms` LIKE '%thrombocytopenia%')\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT      (SELECT COUNT(*)       FROM `Laboratory` AS `T1`       INNER JOIN `Patient` AS `T2`       ON `T1`.`ID` = `T2`.`ID`       WHERE `T2`.`SEX` = 'F' AND `T1`.`UA` > 6.5) * 100.0 /      (SELECT COUNT(*)       FROM `Patient` AS `T2`       WHERE `T2`.`SEX` = 'F') AS percentage\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT DISTINCT P.ID, P.Diagnosis, (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS Age FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('negative', '0') AND STRFTIME('%Y', T1.`First Date`) < '2000'\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('negative', '0') ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT 100.0 * (SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.GOT >= 60 AND P.Diagnosis = 'SLE') / (SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L WHERE L.GOT >= 60) AS percentage\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.ALP >= 300 AND P.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'\t----- bird -----\tstudent_club",
    "1355": "SELECT state FROM zip_code WHERE zip_code = (SELECT zip FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison')\t----- bird -----\tstudent_club",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1514": "SELECT DISTINCT T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT T4.Country  FROM transactions_1k AS T1  INNER JOIN gasstations AS T4 ON T1.GasStationID = T4.GasStationID  WHERE T1.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.CardID = 667467)\t----- bird -----\tdebit_card_specializing"
}