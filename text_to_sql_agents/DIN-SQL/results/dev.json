{
    "26": "SELECT s.School AS SchoolName, s.Street || ', ' || s.City || ', ' || s.State || ' ' || s.Zip AS FullAddress FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.County Name = 'Monterey' AND f.School Type = 'High Schools (Public)' AND f.FRPM Count (Ages 5-17) > 800;\t----- bird -----\tcalifornia_schools",
    "35": "SELECT s.AdmEmail1 FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.\"Charter School (Y/N)\" = 1 ORDER BY f.\"Enrollment (K-12)\" ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.EdOpsName FROM satscores ss JOIN schools s ON ss.cds = s.CDSCode WHERE ss.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores);\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT \"District\" FROM schools WHERE \"Magnet\" = 0 AND \"City\" = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "111": "SELECT COUNT(*) AS num_accounts FROM account JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND strftime('%Y', account.date) = '1996';\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2 AS district_name, district.A3 AS district_region FROM account JOIN district ON account.district_id = district.district_id WHERE strftime('%Y', account.date) = '1993' AND account.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) AS high_level_owner_cards FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "177": "SELECT t.balance AS balance_after_transaction, c.gender AS account_owner_gender FROM trans t JOIN disp d ON t.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE t.trans_id = 851 AND c.client_id = 4;\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, d.account_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id JOIN district dis ON a.district_id = dis.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND dis.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "226": "SELECT CAST(100.0 * SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) / COUNT(bond_id) AS DECIMAL(10, 5)) AS percent FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY element HAVING COUNT(element) = ( SELECT MIN(element_count) FROM ( SELECT COUNT(element) AS element_count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' GROUP BY element ) )\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(b.bond_id) AS DECIMAL(10, 5)) AS percentage_single_bonds_carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-' AND m.label = '+';\t----- bird -----\ttoxicology",
    "268": "SELECT a1.element AS element1, a2.element AS element2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' AND b.bond_type = '#' AND a.element = 'c';\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) AS double_bond_count, m.label AS carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.molecule_id = 'TR006' AND b.bond_type = '=' GROUP BY m.label;\t----- bird -----\ttoxicology",
    "305": "SELECT c.bond_id, c.atom_id, c.atom_id2 FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '-' AND c.atom_id < c.atom_id2;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS total_molecules_with_double_bond, SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_molecules FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '='\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "353": "SELECT sets.name, sets.totalSetSize FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.language = 'Italian';\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(DISTINCT id) AS powerful_white_bordered_cards FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "406": "SELECT c.id FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.types LIKE '%Creature%' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "416": "SELECT (CAST(COUNT(CASE WHEN fd.language = 'French' THEN 1 END) AS REAL) / COUNT(*)) * 100 AS percentage_french_without_power FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE (c.power IS NULL OR c.power = '*')\t----- bird -----\tcard_games",
    "428": "SELECT sets.name, set_translations.translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5;\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "445": "SELECT c.name AS card_name, fd.type, fd.language, fd.flavorText FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.watermark = 'Color Pie';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "484": "SELECT fd.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN sets s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedManaCost = ( SELECT MAX(c2.convertedManaCost) FROM cards c2 JOIN sets s2 ON c2.setCode = s2.code WHERE s2.name = 'Coldsnap' )\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "503": "SELECT s.type FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "522": "SELECT c.name, l.format FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "528": "SELECT c.name, l.format FROM cards c JOIN sets s ON c.setCode = s.code JOIN legalities l ON c.uuid = l.uuid WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "543": "SELECT p.AnswerCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT users.DisplayName FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(c.Id) AS comment_count FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "569": "SELECT SUM(votes.Id) AS total_votes FROM posts JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data visualization%';\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users);\t----- bird -----\tcodebase_community",
    "598": "WITH badge_counts AS ( SELECT SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS count_2010, SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS count_2011, COUNT(*) AS total_count FROM badges WHERE Name = 'Student' ) SELECT (CAST(count_2010 AS FLOAT) / total_count * 100) - (CAST(count_2011 AS FLOAT) / total_count * 100) AS percentage_difference FROM badge_counts;\t----- bird -----\tcodebase_community",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60 AND OwnerUserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) AS number_of_users FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(*) AS positive_comment_count FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "610": "SELECT Name FROM badges WHERE UserId IN ( SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users) )\t----- bird -----\tcodebase_community",
    "620": "SELECT DISTINCT u.DisplayName, u.Views FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Date = '2010-07-19 19:39:08';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) AS NumberOfUsers FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "646": "SELECT p.Title, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score > 60;\t----- bird -----\tcodebase_community",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150 AND users.WebsiteUrl IS NOT NULL;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "717": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT superhero.id) AS female_superheroes_with_strength_100 FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100;\t----- bird -----\tsuperhero",
    "772": "SELECT eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id JOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "781": "SELECT superhero.height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber';\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN gender.gender = 'Male' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END), 0) AS male_to_female_ratio FROM superhero JOIN gender ON superhero.gender_id = gender.id;\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
    "829": "SELECT ABS( (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') ) AS difference;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "840": "SELECT ha.attribute_value FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "846": "SELECT d.driverRef FROM qualifying q JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 20 AND q.q2 IS NULL;\t----- bird -----\tformula_1",
    "855": "SELECT races.url FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT results.driverId) AS finished_drivers FROM results JOIN races ON results.raceId = races.raceId JOIN status ON results.statusId = status.statusId WHERE races.date = '2015-11-29' AND (status.status = 'Finished' OR status.status LIKE '+%Lap%');\t----- bird -----\tformula_1",
    "888": "SELECT circuits.name AS circuit_name, circuits.location, circuits.country FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name LIKE '%European Grand Prix%' ORDER BY races.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename, surname, (strftime('%Y', 'now') - strftime('%Y', dob)) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT c.name FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY r.circuitId HAVING COUNT(r.raceId) = 4;\t----- bird -----\tformula_1",
    "922": "SELECT r.time FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.year = 2010 AND c.name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
    "928": "SELECT d.driverRef FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2007 AND res.positionOrder = 1;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(*) AS finished_drivers_count FROM results JOIN races ON results.raceId = races.raceId JOIN status ON results.statusId = status.statusId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND (status.status = 'Finished' OR status.status LIKE '+%Lap%');\t----- bird -----\tformula_1",
    "938": "SELECT d.forename, d.surname, d.url FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE r.year = 2008 AND r.name = 'Australian Grand Prix' AND res.positionOrder = 1;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "970": "SELECT d.driverId FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'German' AND strftime('%Y', d.dob) BETWEEN '1980' AND '1990' GROUP BY d.driverId ORDER BY MIN(lt.milliseconds) ASC LIMIT 3;\t----- bird -----\tformula_1",
    "985": "SELECT lt.driverId FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId WHERE r.name = 'French Grand Prix' AND lt.lap = 3 ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(milliseconds) AS average_fastest_lap_time FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2006 AND races.name = 'United States Grand Prix' AND results.position <= 5;\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, SUM(r.wins) AS total_wins FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "1039": "SELECT AVG(long_shots) AS average_long_shots FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag' );\t----- bird -----\teuropean_football_2",
    "1042": "SELECT l.name FROM League l JOIN Match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.id HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1048": "SELECT pa.overall_rating FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1056": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', birthday)) >= 35;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name, COUNT(Match.id) AS match_count FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY match_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1157": "SELECT Patient.ID, Patient.SEX, Examination.Diagnosis FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT p.Diagnosis, COUNT(*) AS occurrences FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY p.Diagnosis ORDER BY occurrences DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY \"First Date\" ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT (CAST(SUM(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END)) * 100 AS proportion_of_SLE FROM Examination WHERE Symptoms LIKE '%thrombocytopenia%';\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (CAST(COUNT(CASE WHEN UA > 6.5 THEN 1 END) AS FLOAT) / COUNT(*)) * 100 AS percentage_above_normal FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT p.ID, p.SEX, p.Birthday, l.\"T-BIL\" FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.\"T-BIL\" = (SELECT MAX(\"T-BIL\") FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT Patient.ID, Patient.Diagnosis, CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', Patient.Birthday) AS INTEGER) AS Age FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT Patient.ID) AS num_patients FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.SSA IN ('negative', '0') AND strftime('%Y', Patient.\"First Date\") < '2000';\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.SSA NOT IN ('-', '+-') ORDER BY p.\"First Date\" ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1279": "WITH AbnormalGOT AS ( SELECT l.ID FROM Laboratory l WHERE l.GOT >= 60 ), SLEPatients AS ( SELECT p.ID FROM Patient p WHERE p.Diagnosis = 'SLE' ) SELECT 100.0 * COUNT(DISTINCT ag.ID) / (SELECT COUNT(DISTINCT ID) FROM AbnormalGOT) AS percentage FROM AbnormalGOT ag JOIN SLEPatients sp ON ag.ID = sp.ID;\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) AS male_patient_count FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT l.ID) AS num_admitted_patients FROM Laboratory l JOIN Patient p ON l.ID = p.ID WHERE l.ALP >= 300 AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT e.ID) AS num_patients FROM Laboratory l JOIN Examination e ON l.ID = e.ID WHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1313": "SELECT COUNT(*) AS number_of_students FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1355": "SELECT z.state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1368": "SELECT major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1514": "SELECT DISTINCT c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT G.Country FROM transactions_1k T JOIN gasstations G ON T.GasStationID = G.GasStationID WHERE T.Date = '2012-08-24' AND T.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.CardID = 667467 LIMIT 1;\t----- bird -----\tdebit_card_specializing"
}