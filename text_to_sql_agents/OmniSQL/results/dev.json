{
    "26": "SELECT \n    schools.School, \n    schools.Street, \n    schools.City, \n    schools.State, \n    schools.Zip\nFROM \n    schools\nINNER JOIN \n    frpm \nON \n    schools.CDSCode = frpm.CDSCode\nWHERE \n    schools.County = 'Monterey' \n    AND frpm.`School Type` = 'High Schools (Public)' \n    AND frpm.`FRPM Count (Ages 5-17)` > 800;",
    "35": "SELECT T2.AdmEmail1\nFROM frpm AS T1\nINNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode\nWHERE T1.`Charter School (Y/N)` = 1\nORDER BY T1.`Enrollment (K-12)` ASC\nLIMIT 1;",
    "42": "SELECT schools.EdOpsName FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.AvgScrMath DESC LIMIT 1;",
    "71": "SELECT DISTINCT District \nFROM schools \nWHERE City = 'Fresno' AND Magnet = 0;",
    "111": "SELECT COUNT(account.account_id) AS account_count\nFROM district\nINNER JOIN account ON district.district_id = account.district_id\nWHERE district.A2 = 'Litomerice' AND STRFTIME('%Y', account.date) = '1996';",
    "119": "SELECT \n    account.account_id, \n    district.A2 AS district_name, \n    district.A3 AS region\nFROM \n    account\nINNER JOIN \n    district \nON \n    account.district_id = district.district_id\nWHERE \n    account.frequency = 'POPLATEK PO OBRATU' \n    AND STRFTIME('%Y', account.date) = '1993';",
    "139": "SELECT COUNT(*)\nFROM card\nINNER JOIN disp ON card.disp_id = disp.disp_id\nWHERE card.type = 'gold' AND disp.type = 'OWNER';",
    "177": "SELECT \n    trans.balance AS sum_after_transaction, \n    client.gender AS gender_of_owner\nFROM \n    client\nINNER JOIN \n    disp ON client.client_id = disp.client_id\nINNER JOIN \n    trans ON disp.account_id = trans.account_id\nWHERE \n    client.client_id = 4 \n    AND trans.trans_id = 851;",
    "180": "SELECT \n    client.client_id, \n    account.account_id\nFROM \n    client\nINNER JOIN \n    district ON client.district_id = district.district_id\nINNER JOIN \n    account ON client.district_id = account.district_id\nWHERE \n    CAST(STRFTIME('%Y', client.birth_date) AS INTEGER) BETWEEN 1983 AND 1987\n    AND district.A3 = 'East Bohemia';",
    "226": "SELECT \n    ROUND(\n        CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*), \n        5\n    ) AS percent\nFROM \n    bond\nWHERE \n    molecule_id = 'TR008';",
    "240": "SELECT element \nFROM atom \nWHERE molecule_id = 'TR004';",
    "251": "-- Your SQL query\nSELECT element\nFROM atom\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label = '+'\n)\nGROUP BY element\nHAVING COUNT(element) = (\n    SELECT MIN(element_count)\n    FROM (\n        SELECT COUNT(element) AS element_count\n        FROM atom\n        WHERE molecule_id IN (\n            SELECT molecule_id\n            FROM molecule\n            WHERE label = '+'\n        )\n        GROUP BY element\n    )\n);",
    "255": "SELECT \n    CAST(SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(B.bond_id) AS proportion\nFROM \n    molecule AS M\nINNER JOIN \n    bond AS B\nON \n    M.molecule_id = B.molecule_id\nWHERE \n    B.bond_type = '-' \n    AND M.label IS NOT NULL;",
    "268": "SELECT \n    a1.element AS element1, \n    a2.element AS element2\nFROM \n    connected AS c\nINNER JOIN \n    atom AS a1 ON c.atom_id = a1.atom_id\nINNER JOIN \n    atom AS a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    c.bond_id = 'TR001_10_11';",
    "272": "SELECT DISTINCT m.molecule_id\nFROM molecule AS m\nINNER JOIN bond AS b ON m.molecule_id = b.molecule_id\nINNER JOIN atom AS a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\n  AND b.bond_type = '#'\n  AND a.element = 'c';",
    "303": "SELECT \n    (SELECT COUNT(*) \n     FROM bond \n     WHERE molecule_id = 'TR006' AND bond_type = '=') AS double_bond_count,\n    (SELECT CASE \n             WHEN label = '+' THEN 'Carcinogenic' \n             ELSE 'Non-Carcinogenic' \n           END \n     FROM molecule \n     WHERE molecule_id = 'TR006') AS carcinogenicity;",
    "305": "SELECT \n    b.bond_id, \n    c.atom_id AS atom_id1, \n    c.atom_id2 AS atom_id2\nFROM \n    bond b\nINNER JOIN \n    connected c\nON \n    b.bond_id = c.bond_id\nWHERE \n    b.bond_type = '-'\n    AND c.atom_id < c.atom_id2;",
    "310": "-- SQL query to count molecules with double bonds and those labeled as carcinogenic\nSELECT \n    COUNT(DISTINCT b.molecule_id) AS total_double_bond_molecules,\n    COUNT(DISTINCT CASE WHEN m.label = '+' THEN b.molecule_id END) AS carcinogenic_molecules\nFROM \n    bond AS b\nINNER JOIN \n    molecule AS m\nON \n    b.molecule_id = m.molecule_id\nWHERE \n    b.bond_type = '=';",
    "327": "SELECT \n    molecule.molecule_id\nFROM \n    molecule\nINNER JOIN \n    atom\nON \n    molecule.molecule_id = atom.molecule_id\nWHERE \n    molecule.label = '-'\nGROUP BY \n    molecule.molecule_id\nHAVING \n    COUNT(atom.atom_id) > 5;",
    "353": "SELECT \n    sets.name, \n    sets.totalSetSize \nFROM \n    sets \nINNER JOIN \n    set_translations \nON \n    sets.code = set_translations.setCode \nWHERE \n    set_translations.language = 'Italian';",
    "378": "SELECT id\nFROM cards\nWHERE cardKingdomFoilId IS NOT NULL\n  AND cardKingdomId IS NOT NULL;",
    "394": "SELECT COUNT(DISTINCT id) \nFROM cards \nWHERE borderColor = 'white' \n  AND cardKingdomFoilId IS NOT NULL \n  AND cardKingdomId IS NOT NULL;",
    "406": "SELECT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Legal' AND cards.types LIKE '%Creature%';",
    "416": "SELECT \n    CAST(SUM(CASE WHEN fd.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) AS percentage\nFROM \n    cards c\nLEFT JOIN \n    foreign_data fd\nON \n    c.uuid = fd.uuid\nWHERE \n    c.power IS NULL OR c.power = '*';",
    "428": "SELECT \n    sets.name, \n    set_translations.translation \nFROM \n    sets \nINNER JOIN \n    set_translations \nON \n    sets.code = set_translations.setCode \nWHERE \n    sets.id = 5;",
    "442": "SELECT baseSetSize, setCode\nFROM sets\nWHERE block IN ('Masques', 'Mirage');",
    "445": "SELECT \n    cards.name AS card_name, \n    cards.type AS card_type, \n    foreign_data.language, \n    foreign_data.flavorText \nFROM \n    foreign_data \nINNER JOIN \n    cards \nON \n    foreign_data.uuid = cards.uuid \nWHERE \n    cards.watermark = 'Color Pie';",
    "450": "SELECT COUNT(id) \nFROM cards \nWHERE artist = 'Aaron Miller' \n  AND cardKingdomFoilId IS NOT NULL \n  AND cardKingdomId IS NOT NULL;",
    "484": "-- Step 1: Find the maximum convertedManaCost for cards in the \"Coldsnap\" set\nWITH max_mana_cost AS (\n    SELECT MAX(c.convertedManaCost) AS max_cost\n    FROM sets s\n    INNER JOIN cards c ON s.code = c.setCode\n    WHERE s.name = 'Coldsnap'\n)\n\n-- Step 2: Retrieve the Italian names of the cards with the maximum convertedManaCost\nSELECT fd.name AS italian_name\nFROM sets s\nINNER JOIN cards c ON s.code = c.setCode\nINNER JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE s.name = 'Coldsnap'\n  AND fd.language = 'Italian'\n  AND c.convertedManaCost = (SELECT max_cost FROM max_mana_cost);",
    "491": "SELECT mcmName \nFROM sets \nWHERE releaseDate = '2017-06-09';",
    "503": "SELECT sets.type\nFROM cards\nINNER JOIN sets ON cards.setCode = sets.code\nWHERE cards.name = 'Samite Pilgrim';",
    "522": "SELECT \n    cards.name, \n    legalities.format \nFROM \n    cards \nINNER JOIN \n    legalities \nON \n    cards.uuid = legalities.uuid \nWHERE \n    cards.edhrecRank = 1 \n    AND legalities.status = 'Banned';",
    "528": "SELECT \n    cards.name, \n    legalities.format\nFROM \n    sets\nINNER JOIN \n    cards ON sets.code = cards.setCode\nINNER JOIN \n    legalities ON cards.uuid = legalities.uuid\nWHERE \n    sets.name = 'Hour of Devastation' \n    AND legalities.status = 'Legal';",
    "543": "SELECT MAX(p.AnswerCount) AS MaxAnswerCount\nFROM posts p\nINNER JOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie';",
    "546": "SELECT users.DisplayName\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.ClosedDate IS NOT NULL;",
    "562": "SELECT COUNT(comments.Id) AS CommentCount\nFROM posts\nINNER JOIN comments ON posts.Id = comments.PostId\nWHERE posts.ViewCount = 1910;",
    "569": "SELECT COUNT(votes.Id) AS TotalVotes\nFROM votes\nINNER JOIN posts ON votes.PostId = posts.Id\nWHERE posts.Title LIKE '%data visualization%';",
    "590": "SELECT Id\nFROM users\nWHERE Views = (SELECT MIN(Views) FROM users);",
    "598": "SELECT \n    CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) AS Percentage2010,\n    CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) AS Percentage2011,\n    (CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*)) -\n    (CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*)) AS PercentageDifference\nFROM badges\nWHERE Name = 'Student';",
    "602": "SELECT posts.Id AS PostId, users.Id AS UserId\nFROM posts\nINNER JOIN users ON posts.OwnerUserId = users.Id\nWHERE posts.Score > 60 AND posts.OwnerUserId IS NOT NULL;",
    "605": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nWHERE Name = 'Announcer';",
    "607": "SELECT COUNT(*) AS PositiveCommentCount\nFROM comments\nWHERE Score > 60;",
    "610": "SELECT badges.Name\nFROM users\nINNER JOIN badges ON users.Id = badges.UserId\nWHERE users.Reputation = (SELECT MAX(Reputation) FROM users);",
    "620": "SELECT DISTINCT users.Views\nFROM badges\nINNER JOIN users ON badges.UserId = users.Id\nWHERE badges.Date = '2010-07-19 19:39:08.0';",
    "641": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nWHERE Name = 'Commentator' \n  AND STRFTIME('%Y', Date) = '2014';",
    "646": "SELECT \n    posts.Title, \n    comments.UserDisplayName \nFROM \n    comments \nINNER JOIN \n    posts \nON \n    comments.PostId = posts.Id \nWHERE \n    comments.Score > 60;",
    "648": "SELECT \n    users.DisplayName, \n    users.WebsiteUrl \nFROM \n    posts \nINNER JOIN \n    users \nON \n    posts.OwnerUserId = users.Id \nWHERE \n    posts.FavoriteCount > 150 \n    AND users.WebsiteUrl IS NOT NULL;",
    "675": "SELECT COUNT(*) \nFROM users \nWHERE Reputation > 2000 AND Views > 1000;",
    "717": "SELECT superpower.power_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superhero.superhero_name = '3-D Man';",
    "740": "SELECT COUNT(s.id)\nFROM superhero AS s\nINNER JOIN gender AS g ON s.gender_id = g.id\nINNER JOIN hero_attribute AS ha ON s.id = ha.hero_id\nINNER JOIN attribute AS a ON ha.attribute_id = a.id\nWHERE g.gender = 'Female'\n  AND a.attribute_name = 'Strength'\n  AND ha.attribute_value = 100;",
    "772": "SELECT \n    c1.colour AS eye_colour, \n    c2.colour AS hair_colour, \n    c3.colour AS skin_colour\nFROM \n    superhero s\nINNER JOIN \n    colour c1 ON s.eye_colour_id = c1.id\nINNER JOIN \n    colour c2 ON s.hair_colour_id = c2.id\nINNER JOIN \n    colour c3 ON s.skin_colour_id = c3.id\nINNER JOIN \n    gender g ON s.gender_id = g.id\nINNER JOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    g.gender = 'Female' \n    AND p.publisher_name = 'Dark Horse Comics';",
    "781": "SELECT superhero.height_cm\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nWHERE colour.colour = 'Amber';",
    "801": "SELECT \n    CAST(SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / \n    NULLIF(SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END), 0) AS ratio\nFROM \n    superhero\nINNER JOIN \n    gender ON superhero.gender_id = gender.id;",
    "824": "SELECT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name;",
    "829": "SELECT \n    ABS(\n        SUM(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - \n        SUM(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)\n    ) AS difference\nFROM \n    superhero\nINNER JOIN \n    publisher \nON \n    superhero.publisher_id = publisher.id;",
    "833": "SELECT superhero_name \nFROM superhero \nWHERE full_name = 'Charles Chandler';",
    "840": "SELECT hero_attribute.attribute_value\nFROM superhero\nINNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nWHERE superhero.superhero_name = 'Aquababy';",
    "846": "SELECT drivers.driverRef\nFROM qualifying\nINNER JOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE qualifying.raceId = 20 AND qualifying.q1 IS NULL;",
    "855": "SELECT races.url\nFROM races\nINNER JOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Sepang International Circuit';",
    "864": "SELECT COUNT(results.driverId) AS finished_drivers\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nINNER JOIN status ON results.statusId = status.statusId\nWHERE races.date = '2015-11-29'\n  AND (status.status = 'Finished' OR status.status LIKE '+%Lap%');",
    "888": "SELECT \n    circuits.country, \n    circuits.name AS circuit_name, \n    circuits.location \nFROM \n    races \nINNER JOIN \n    circuits \nON \n    races.circuitId = circuits.circuitId \nWHERE \n    races.name = 'European Grand Prix' \nORDER BY \n    races.year ASC \nLIMIT 1;",
    "898": "SELECT \n    strftime('%Y', 'now') - strftime('%Y', dob) AS age,\n    forename,\n    surname\nFROM \n    drivers\nWHERE \n    nationality = 'Japanese'\nORDER BY \n    dob DESC\nLIMIT 1;",
    "899": "SELECT \n    circuits.name\nFROM \n    races\nINNER JOIN \n    circuits \nON \n    races.circuitId = circuits.circuitId\nWHERE \n    races.year BETWEEN 1990 AND 2000\nGROUP BY \n    circuits.name\nHAVING \n    COUNT(races.raceId) = 4;",
    "922": "SELECT races.time\nFROM races\nINNER JOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Circuit';",
    "928": "SELECT drivers.driverRef\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nINNER JOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix'\n  AND races.year = 2007\n  AND results.position = 1;",
    "935": "SELECT COUNT(DISTINCT results.driverId) AS finished_drivers\nFROM races\nINNER JOIN results ON races.raceId = results.raceId\nINNER JOIN status ON results.statusId = status.statusId\nWHERE races.year = 2008\n  AND races.name = 'Australian Grand Prix'\n  AND (status.status = 'Finished' OR status.status LIKE '+Lap');",
    "938": "SELECT \n    d.forename, \n    d.surname, \n    d.url AS driver_url, \n    r.url AS race_url\nFROM \n    races AS r\nINNER JOIN \n    results AS res ON r.raceId = res.raceId\nINNER JOIN \n    drivers AS d ON res.driverId = d.driverId\nWHERE \n    r.name = 'Australian Grand Prix' \n    AND r.year = 2008 \n    AND res.position = 1;",
    "968": "SELECT driverRef \nFROM drivers \nWHERE forename = 'Robert' AND surname = 'Kubica';",
    "970": "SELECT \n    d.driverId\nFROM \n    drivers AS d\nINNER JOIN \n    laptimes AS l\nON \n    d.driverId = l.driverId\nWHERE \n    d.nationality = 'German'\n    AND CAST(SUBSTR(d.dob, 1, 4) AS INTEGER) BETWEEN 1980 AND 1990\nGROUP BY \n    d.driverId\nORDER BY \n    MIN(l.time) ASC\nLIMIT 3;",
    "985": "SELECT T2.driverId\nFROM races AS T1\nINNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId\nWHERE T1.name = 'French Grand Prix' AND T2.lap = 3\nORDER BY T2.time DESC\nLIMIT 1;",
    "987": "SELECT AVG(lt.milliseconds) AS average_fastest_lap_time\nFROM races r\nINNER JOIN results res ON r.raceId = res.raceId\nINNER JOIN lapTimes lt ON res.raceId = lt.raceId AND res.driverId = lt.driverId\nWHERE r.name = 'United States Grand Prix'\n  AND r.year = 2006\n  AND res.position <= 5;",
    "1004": "SELECT \n    d.forename, \n    d.surname, \n    SUM(ds.wins) AS total_wins\nFROM \n    drivers d\nINNER JOIN \n    driverStandings ds\nON \n    d.driverId = ds.driverId\nWHERE \n    d.dob = (SELECT MIN(dob) FROM drivers)\nGROUP BY \n    d.driverId;",
    "1039": "SELECT \n    CAST(SUM(T2.long_shots) AS REAL) / COUNT(T2.player_fifa_api_id) AS average_long_shots\nFROM \n    Player AS T1\nINNER JOIN \n    Player_Attributes AS T2\nON \n    T1.player_fifa_api_id = T2.player_fifa_api_id\nWHERE \n    T1.player_name = 'Ahmed Samir Farag';",
    "1042": "SELECT \n    L.name\nFROM \n    Match AS M\nINNER JOIN \n    League AS L\nON \n    M.league_id = L.id\nWHERE \n    M.season = '2009/2010'\nGROUP BY \n    L.id\nHAVING \n    AVG(M.home_team_goal) > AVG(M.away_team_goal);",
    "1048": "SELECT \n    PA.overall_rating\nFROM \n    Player AS P\nINNER JOIN \n    Player_Attributes AS PA\nON \n    P.player_api_id = PA.player_api_id\nWHERE \n    P.player_name = 'Gabriel Tamas'\n    AND strftime('%Y', PA.date) = '2011';",
    "1056": "SELECT League.name\nFROM Country\nINNER JOIN League ON Country.id = League.country_id\nWHERE Country.name = 'Netherlands';",
    "1082": "SELECT League.name\nFROM Country\nINNER JOIN League ON Country.id = League.country_id\nWHERE Country.name = 'Germany';",
    "1118": "SELECT player_name\nFROM Player\nWHERE CAST(strftime('%Y', CURRENT_TIMESTAMP) AS INTEGER) - CAST(strftime('%Y', birthday) AS INTEGER) >= 35;",
    "1145": "SELECT \n    L.name, \n    COUNT(M.id) AS match_count\nFROM \n    Match AS M\nINNER JOIN \n    League AS L\nON \n    M.league_id = L.id\nWHERE \n    M.season = '2015/2016'\nGROUP BY \n    L.name\nORDER BY \n    match_count DESC\nLIMIT 4;",
    "1157": "SELECT \n    Patient.ID, \n    Patient.SEX, \n    Patient.Diagnosis\nFROM \n    Patient\nINNER JOIN \n    Examination \nON \n    Patient.ID = Examination.ID\nWHERE \n    Examination.Thrombosis = 2;",
    "1173": "SELECT \n    P.Diagnosis, \n    COUNT(*) AS Occurrences\nFROM \n    Laboratory L\nINNER JOIN \n    Patient P\nON \n    L.ID = P.ID\nWHERE \n    L.Date BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY \n    P.Diagnosis\nORDER BY \n    Occurrences DESC\nLIMIT 1;",
    "1178": "SELECT SEX \nFROM Patient \nWHERE Diagnosis = 'AORTITIS' \nORDER BY `First Date` ASC \nLIMIT 1;",
    "1200": "SELECT \n    (CAST(SUM(CASE WHEN P.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100.0) / \n    COUNT(*) AS proportion\nFROM \n    Examination E\nINNER JOIN \n    Patient P\nON \n    E.ID = P.ID\nWHERE \n    E.Symptoms = 'thrombocytopenia';",
    "1218": "SELECT \n    CAST(SUM(CASE WHEN L.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) AS percentage\nFROM \n    Patient P\nINNER JOIN \n    Laboratory L\nON \n    P.ID = L.ID\nWHERE \n    P.SEX = 'F';",
    "1224": "SELECT \n    P.ID, \n    P.SEX, \n    P.Birthday\nFROM \n    Patient AS P\nINNER JOIN \n    Laboratory AS L\nON \n    P.ID = L.ID\nWHERE \n    L.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory);",
    "1235": "SELECT DISTINCT \n    P.ID, \n    P.Diagnosis, \n    CAST(STRFTIME('%Y', CURRENT_TIMESTAMP) AS INTEGER) - CAST(STRFTIME('%Y', P.Birthday) AS INTEGER) AS Age\nFROM \n    Patient P\nINNER JOIN \n    Laboratory L\nON \n    P.ID = L.ID\nWHERE \n    L.RBC < 3.5;",
    "1271": "SELECT COUNT(DISTINCT T1.ID)\nFROM Patient AS T1\nINNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\nWHERE T2.SSA IN ('negative', '0')\n  AND STRFTIME('%Y', T1.`First Date`) < '2000';",
    "1272": "SELECT P.ID\nFROM Patient AS P\nINNER JOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.SSA NOT IN ('negative', '0')\nORDER BY P.`First Date` ASC\nLIMIT 1;",
    "1279": "SELECT \n    CAST(SUM(CASE WHEN P.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) AS percentage\nFROM \n    Laboratory L\nINNER JOIN \n    Patient P\nON \n    L.ID = P.ID\nWHERE \n    L.GOT >= 60;",
    "1280": "SELECT COUNT(DISTINCT Patient.ID) AS MalePatientsWithNormalGOT\nFROM Patient\nINNER JOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.SEX = 'M' AND Laboratory.GOT < 60;",
    "1286": "SELECT COUNT(DISTINCT T1.ID) \nFROM Laboratory AS T1 \nINNER JOIN Patient AS T2 \nON T1.ID = T2.ID \nWHERE T1.ALP >= 300 AND T2.Admission = '+';",
    "1302": "SELECT COUNT(DISTINCT Laboratory.ID) AS PatientCount\nFROM Laboratory\nINNER JOIN Examination ON Laboratory.ID = Examination.ID\nWHERE Laboratory.CPK < 250\n  AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+');",
    "1313": "SELECT COUNT(*)\nFROM member AS m\nINNER JOIN major AS mj ON m.link_to_major = mj.major_id\nWHERE m.position = 'Student_Club'\n  AND mj.college = 'College of Engineering';",
    "1355": "SELECT zip_code.state\nFROM member\nINNER JOIN zip_code ON member.zip = zip_code.zip_code\nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';",
    "1368": "SELECT major.major_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360';",
    "1402": "SELECT t_shirt_size\nFROM member\nGROUP BY t_shirt_size\nORDER BY COUNT(t_shirt_size) DESC\nLIMIT 1;",
    "1409": "SELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '2019-08-20';",
    "1514": "SELECT DISTINCT customers.Currency\nFROM transactions_1k\nINNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID\nWHERE transactions_1k.Date = '2012-08-24'\n  AND transactions_1k.Time = '16:25:00';",
    "1518": "SELECT T2.Country\nFROM transactions_1k AS T1\nINNER JOIN gasstations AS T2\nON T1.GasStationID = T2.GasStationID\nWHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00';",
    "1523": "SELECT gasstations.Country\nFROM transactions_1k\nINNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.CardID = 667467;"
}