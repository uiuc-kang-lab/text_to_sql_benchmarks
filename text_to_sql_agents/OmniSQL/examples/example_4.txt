Task Overview:
You are a data science expert. Below, you are provided with a database schema and a natural language question. Your task is to understand the schema and generate a valid SQL query to answer the question.

Database Engine:
SQLite

Database Schema:
CREATE TABLE badges (
    Id integer, -- example: [1, 2]
    UserId integer, -- example: [5, 6]
    Name text, -- example: ['Teacher', 'Student']
    `Date` datetime, -- example: ['2010-07-19 19:39:07.0', '2010-07-19 19:39:08.0']
    PRIMARY KEY (Id),
    CONSTRAINT fk_badges_userid FOREIGN KEY (UserId) REFERENCES users (Id)
);

CREATE TABLE comments (
    Id integer, -- example: [1, 2]
    PostId integer, -- example: [3, 5]
    Score integer, -- example: [5, 0]
    Text text, -- example: ['Could be a poster child fo argumentative', "Yes, R is nice- but WHY is it 'valuable'"]
    CreationDate datetime, -- example: ['2010-07-19 19:15:52.0', '2010-07-19 19:16:14.0']
    UserId integer, -- example: [13, 37]
    UserDisplayName text, -- example: ['user28', 'Statprof']
    PRIMARY KEY (Id),
    CONSTRAINT fk_comments_postid FOREIGN KEY (PostId) REFERENCES posts (Id),
    CONSTRAINT fk_comments_userid FOREIGN KEY (UserId) REFERENCES users (Id)
);

CREATE TABLE postHistory (
    Id integer, -- example: [1, 2]
    PostHistoryTypeId integer, -- example: [2, 1]
    PostId integer, -- example: [1, 2]
    RevisionGUID text, -- example: ['e58bf7fd-e60f-4c58-a6e4-dfc91cf98a69', '18bf9150-f1cb-432d-b7b7-26d2f8e33581']
    CreationDate datetime, -- example: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0']
    UserId integer, -- example: [8, 24]
    Text text, -- example: ['How should I elicit prior distributions ', 'Eliciting priors from experts']
    `Comment` text, -- example: ['more ', 'more', 'edited tags', 'add content from the comments;']
    UserDisplayName text, -- example: ['User', 'user28', 'user209']
    PRIMARY KEY (Id),
    CONSTRAINT fk_posthistory_postid FOREIGN KEY (PostId) REFERENCES posts (Id),
    CONSTRAINT fk_posthistory_userid FOREIGN KEY (UserId) REFERENCES users (Id)
);

CREATE TABLE postLinks (
    Id integer, -- example: [108, 145]
    CreationDate datetime, -- example: ['2010-07-21 14:47:33.0', '2010-07-23 16:30:41.0']
    PostId integer, -- example: [395, 548]
    RelatedPostId integer, -- example: [173, 539]
    LinkTypeId integer, -- example: [1, 3]
    PRIMARY KEY (Id),
    CONSTRAINT fk_postlinks_postid FOREIGN KEY (PostId) REFERENCES posts (Id),
    CONSTRAINT fk_postlinks_relatedpostid FOREIGN KEY (RelatedPostId) REFERENCES posts (Id)
);

CREATE TABLE posts (
    Id integer, -- example: [1, 2]
    PostTypeId integer, -- example: [1, 2]
    AcceptedAnswerId integer, -- example: [15, 59]
    CreaionDate datetime, -- Creation Date, example: ['2010-07-19 19:12:12.0', '2010-07-19 19:12:57.0']
    Score integer, -- example: [23, 22]
    ViewCount integer, -- example: [1278, 8198]
    Body text, -- example: ['<p>How should I elicit prior distributio', '<p>In many different statistical methods']
    OwnerUserId integer, -- example: [8, 24]
    LasActivityDate datetime, -- Last Activity Date, example: ['2010-09-15 21:08:26.0', '2012-11-12 09:21:54.0']
    Title text, -- example: ['Eliciting priors from experts', 'What is normality?']
    Tags text, -- example: ['<bayesian><prior><elicitation>', '<distributions><normality>']
    AnswerCount integer, -- example: [5, 7]
    CommentCount integer, -- example: [1, 4]
    FavoriteCount integer, -- example: [14, 8]
    LastEditorUserId integer, -- example: [88, 183]
    LastEditDate datetime, -- example: ['2010-08-07 17:56:44.0', '2011-02-12 05:50:03.0']
    CommunityOwnedDate datetime, -- example: ['2010-07-19 19:13:28.0', '2010-07-19 19:14:43.0']
    ParentId integer, -- example: [3, 7]
    ClosedDate datetime, -- example: ['2010-07-19 20:19:46.0', '2010-08-05 13:06:12.0']
    OwnerDisplayName text, -- example: ['User', 'user28', 'user209']
    LastEditorDisplayName text, -- example: ['user28', 'user10525']
    PRIMARY KEY (Id),
    CONSTRAINT fk_posts_owneruserid FOREIGN KEY (OwnerUserId) REFERENCES users (Id),
    CONSTRAINT fk_posts_lasteditoruserid FOREIGN KEY (LastEditorUserId) REFERENCES users (Id),
    CONSTRAINT fk_posts_parentid FOREIGN KEY (ParentId) REFERENCES posts (Id)
);

CREATE TABLE tags (
    Id integer, -- example: [1, 2]
    TagName text, -- example: ['bayesian', 'prior']
    `Count` integer, -- example: [1342, 168]
    ExcerptPostId integer, -- example: [20258, 62158]
    WikiPostId integer, -- example: [20257, 62157]
    PRIMARY KEY (Id),
    CONSTRAINT fk_tags_excerptpostid FOREIGN KEY (ExcerptPostId) REFERENCES posts (Id)
);

CREATE TABLE users (
    Id integer, -- example: [-1, 2]
    Reputation integer, -- example: [1, 101]
    CreationDate datetime, -- example: ['2010-07-19 06:55:26.0', '2010-07-19 14:01:36.0']
    DisplayName text, -- example: ['User', 'useR', 'user', 'Community', 'Geoff Dalgas']
    LastAccessDate datetime, -- example: ['2010-07-19 06:55:26.0', '2013-11-12 22:07:23.0']
    WebsiteUrl text, -- example: ['http://meta.stackexchange.com/', 'http://stackoverflow.com']
    Location text, -- example: ['on the server farm', 'Corvallis, OR']
    AboutMe text, -- example: ["<p>Hi, I'm not really a person.</p>\n\n<p>", '<p>Developer on the StackOverflow team. ']
    Views integer, -- example: [0, 25]
    UpVotes integer, -- example: [5007, 3]
    DownVotes integer, -- example: [1920, 0]
    AccountId integer, -- example: [-1, 2]
    Age integer, -- example: [37, 35]
    ProfileImageUrl text, -- example: ['http://i.stack.imgur.com/d1oHX.jpg', 'http://i.stack.imgur.com/km1pr.jpg']
    PRIMARY KEY (Id)
);

CREATE TABLE votes (
    Id integer, -- example: [1, 2]
    PostId integer, -- example: [3, 2]
    VoteTypeId integer, -- example: [2, 5]
    CreationDate date, -- example: ['2010-07-19', '2010-07-20']
    UserId integer, -- example: [58, 6]
    BountyAmount integer, -- example: [50, 25]
    PRIMARY KEY (Id),
    CONSTRAINT fk_votes_postid FOREIGN KEY (PostId) REFERENCES posts (Id),
    CONSTRAINT fk_votes_userid FOREIGN KEY (UserId) REFERENCES users (Id)
);
This schema describes the database's structure, including tables, columns, primary keys, foreign keys, and any relevant relationships or constraints.

Question:
more than 10 views refers to Views > 10; created after the year 2013 refers to year (CreationDate) > 2013
How many users with more than 10 views created their account after the year 2013?

Instructions:
- Make sure you only output the information that is asked in the question. If the question asks for a specific column, make sure to only include that column in the SELECT clause, nothing more.
- The generated query should return all of the information asked in the question without any missing or extra information.
- Before generating the final SQL query, please think through the steps of how to write the query.

Output Format:
In your answer, please enclose the generated SQL query in a code block:
```sql
-- Your SQL query
```

Take a deep breath and think step by step to find the correct SQL query.