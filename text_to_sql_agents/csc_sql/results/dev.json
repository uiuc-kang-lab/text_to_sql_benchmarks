{
    "26": "SELECT s.School, s.Street, s.City, s.State, s.Zip FROM frpm f INNER JOIN schools s ON f.CDSCode = s.CDSCode WHERE s.County = 'Monterey' AND s.SOCType = 'High Schools (Public)' AND f.\"FRPM Count (Ages 5-17)\" > 800",
    "35": "SELECT s.AdmEmail1 FROM frpm f JOIN schools s ON f.CDSCode = s.CDSCode WHERE f.`Charter School (Y/N)` = 1 ORDER BY f.`Enrollment (K-12)` ASC LIMIT 1",
    "42": "SELECT EdOpsName FROM schools WHERE CDSCode = ( SELECT cds FROM satscores ORDER BY AvgScrMath DESC LIMIT 1 )",
    "71": "SELECT DISTINCT District FROM schools WHERE City = 'Fresno' AND Magnet = 0",
    "111": "SELECT COUNT(a.account_id) FROM account a INNER JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Litomerice' AND STRFTIME('%Y', a.date) = '1996'",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'",
    "139": "SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "177": "SELECT t.balance, c.gender FROM disp d JOIN trans t ON d.account_id = t.account_id JOIN client c ON d.client_id = c.client_id WHERE d.client_id = 4 AND t.trans_id = 851",
    "180": "SELECT T1.client_id, T2.account_id  FROM client AS T1  INNER JOIN account AS T2 ON T1.district_id = T2.district_id  WHERE T1.birth_date >= '1983-01-01'  AND T1.birth_date <= '1987-12-31'  AND T2.district_id IN (SELECT district_id FROM district WHERE A3 = 'east Bohemia')",
    "226": "SELECT CAST(SUM(bond_type = '=') AS REAL) * 100 / COUNT(*) AS percentage FROM bond WHERE molecule_id = 'TR008'",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004'",
    "251": "SELECT element FROM ( SELECT element, COUNT(*) AS element_count FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) GROUP BY element ) AS element_counts ORDER BY element_count ASC LIMIT 1",
    "255": "SELECT CAST(SUM(IIF(T2.label = '+', 1, 0)) AS REAL) * 100 / COUNT(T1.bond_id) AS proportion FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",
    "268": "SELECT T1.element, T3.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T3.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'",
    "272": "SELECT molecule_id FROM atom WHERE element = 'c' INTERSECT SELECT molecule_id FROM bond WHERE bond_type = '#' INTERSECT SELECT molecule_id FROM molecule WHERE label = '-'",
    "303": "SELECT COUNT(b.bond_id) AS double_bonds_count, m.label AS carcinogenicity FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE m.molecule_id = 'TR006' AND b.bond_type = '='",
    "305": "SELECT B.bond_id, CASE WHEN C.atom_id < C.atom_id2 THEN C.atom_id ELSE C.atom_id2 END AS atom_id_1, CASE WHEN C.atom_id > C.atom_id2 THEN C.atom_id ELSE C.atom_id2 END AS atom_id_2 FROM bond B JOIN connected C ON B.bond_id = C.bond_id WHERE B.bond_type = '-'",
    "310": "SELECT COUNT(DISTINCT m.molecule_id) AS total_molecules_with_double_bonds, COUNT(DISTINCT CASE WHEN m.label = '+' THEN m.molecule_id END) AS carcinogenic_molecules FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = '='",
    "327": "SELECT m.molecule_id FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5",
    "353": "SELECT T1.translation, T2.totalSetSize FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian'",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND hasFoil = 1 AND hasNonFoil = 1",
    "394": "SELECT COUNT(DISTINCT id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Legal' AND T1.types LIKE '%Creature%'",
    "416": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'",
    "428": "SELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.id = 5",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')",
    "445": "SELECT T1.name, T1.type, T2.`language`, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "484": "SELECT fd.name FROM sets s JOIN cards c ON s.code = c.setCode JOIN foreign_data fd ON c.uuid = fd.uuid WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' ORDER BY c.convertedManaCost DESC LIMIT 1",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'",
    "528": "SELECT DISTINCT T2.name, T3.format FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Hour of Devastation' AND T3.status = 'Legal'",
    "543": "SELECT AnswerCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY AnswerCount DESC LIMIT 1",
    "546": "SELECT users.DisplayName FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.ClosedDate IS NOT NULL",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910",
    "569": "SELECT COUNT(v.Id) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Title LIKE '%data visualization%'",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users)",
    "598": "SELECT     (COUNT_2010 * 100.0 / TOTAL_COUNT) - (COUNT_2011 * 100.0 / TOTAL_COUNT) AS PERCENTAGE_DIFFERENCE FROM (     SELECT         COUNT(CASE WHEN STRFTIME('%Y', T2.Date) = '2010' THEN 1 END) AS COUNT_2010,         COUNT(CASE WHEN STRFTIME('%Y', T2.Date) = '2011' THEN 1 END) AS COUNT_2011,         COUNT(*) AS TOTAL_COUNT     FROM badges AS T2     WHERE T2.Name = 'Student' )",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60 AND OwnerUserId IS NOT NULL",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60",
    "610": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)",
    "620": "SELECT DISTINCT T2.Views FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0'",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014'",
    "646": "SELECT T2.Title, T1.UserDisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score > 60",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM users u JOIN posts p ON u.Id = p.OwnerUserId WHERE p.FavoriteCount > 150 AND u.WebsiteUrl IS NOT NULL",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000",
    "717": "SELECT sp.power_name FROM superhero sh JOIN hero_power hp ON sh.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = '3-D Man'",
    "740": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100",
    "772": "SELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id JOIN colour c3 ON s.skin_colour_id = c3.id JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'",
    "781": "SELECT superhero.height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Amber'",
    "801": "SELECT CAST(SUM(CASE WHEN gender_id = 1 THEN 1 ELSE 0 END) AS REAL) /         SUM(CASE WHEN gender_id = 2 THEN 1 ELSE 0 END) AS male_female_ratio  FROM superhero",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name",
    "829": "SELECT ABS(SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
    "840": "SELECT ha.attribute_value FROM hero_attribute ha JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = 'Aquababy'",
    "846": "SELECT T1.driverRef FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 AND T2.q2 IS NULL AND T2.q3 IS NULL",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = \"Sepang International Circuit\"",
    "864": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T1.statusId = T3.statusId WHERE T2.date = '2015-11-29' AND (T3.status = 'Finished' OR T3.status LIKE '+%Lap%')",
    "888": "SELECT c.country, c.name, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix' ORDER BY r.year ASC LIMIT 1",
    "898": "SELECT CAST((strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', dob)) AS INTEGER) AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1",
    "899": "SELECT c.name FROM circuits c JOIN races r ON c.circuitid = r.circuitid WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitid HAVING count(r.raceid) = 4",
    "922": "SELECT DISTINCT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.year = 2010 AND T2.location = 'Abu Dhabi'",
    "928": "SELECT d.driverRef FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2007 AND ds.position = 1",
    "935": "SELECT COUNT(DISTINCT T2.driverid) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN status AS T3 ON T2.statusid = T3.statusid WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND (T3.status = 'Finished' OR T3.status LIKE '+%Lap%')",
    "938": "SELECT d.forename, d.surname, d.url FROM drivers d JOIN results r ON d.driverId = r.driverId JOIN races ra ON r.raceId = ra.raceId WHERE ra.name = 'Australian Grand Prix' AND ra.year = 2008 AND r.position = 1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'",
    "970": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN laptimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980' AND '1990' ORDER BY T2.time ASC LIMIT 3",
    "985": "SELECT T1.driverid FROM laptimes AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T1.lap = 3 AND T2.name = 'French Grand Prix' ORDER BY T1.time DESC LIMIT 1",
    "987": "SELECT AVG(CAST(SUBSTR(r.fastestLapTime, 1, INSTR(r.fastestLapTime, ':') - 1) AS INTEGER) * 60000 + CAST(SUBSTR(r.fastestLapTime, INSTR(r.fastestLapTime, ':') + 1) AS REAL) * 1000) AS average_fastest_lap_time_ms FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.year = 2006 AND ra.name = 'United States Grand Prix' AND r.position <= 5",
    "1004": "SELECT d.forename, d.surname, COALESCE(SUM(ds.wins), 0) AS total_wins FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.driverId",
    "1039": "SELECT AVG(pa.long_shots) AS average_long_shots FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Ahmed Samir Farag'",
    "1042": "SELECT L.name FROM League L JOIN Match M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)",
    "1048": "SELECT T2.overall_rating FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'",
    "1082": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany'",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday) >= 35",
    "1145": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 4",
    "1157": "SELECT T1.ID, T1.sex, T1.diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.thrombosis = 2",
    "1173": "SELECT p.Diagnosis, COUNT(*) AS Occurrences  FROM Patient p  JOIN Laboratory l ON p.ID = l.ID  WHERE l.Date BETWEEN '1985-01-01' AND '1995-12-31'  GROUP BY p.Diagnosis  ORDER BY Occurrences DESC  LIMIT 1",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1",
    "1200": "SELECT CAST(SUM(IIF(Diagnosis LIKE '%SLE%', 1, 0)) AS REAL) * 100 / COUNT(*) FROM Examination WHERE Symptoms LIKE '%thrombocytopenia%'",
    "1218": "SELECT (SUM(CASE WHEN T1.UA > 6.5 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F'",
    "1224": "SELECT p.ID, p.SEX, p.Birthday FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory)",
    "1235": "SELECT DISTINCT T2.ID, T2.Diagnosis, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T2.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RBC < 3.5",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('negative', '0') AND STRFTIME('%Y', T1.`First Date`) < '2000'",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('negative', '0') ORDER BY T1.`First Date` ASC LIMIT 1",
    "1279": "SELECT CAST(COUNT(CASE WHEN T2.Diagnosis = 'SLE' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60",
    "1280": "SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GOT < 60",
    "1286": "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'",
    "1302": "SELECT COUNT(*) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')",
    "1313": "SELECT COUNT(*) FROM major JOIN member ON major.major_id = member.link_to_major WHERE major.college = 'College of Engineering'",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
    "1514": "SELECT DISTINCT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'",
    "1523": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.CardID = 667467 LIMIT 1"
}