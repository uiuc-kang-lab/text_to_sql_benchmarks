{
    "26": "SELECT s.School, s.Street, s.City, s.State, s.Zip  FROM schools s  JOIN frpm f ON s.CDSCode = f.CDSCode  WHERE s.County = 'Monterey'  AND s.SOCType = 'High Schools (Public)'  AND f.`FRPM Count (Ages 5-17)` > 800",
    "35": "SELECT T2.AdmEmail1 FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1",
    "42": "SELECT s1.EdOpsName FROM schools s1 JOIN satscores s2 ON s1.CDSCode = s2.cds ORDER BY s2.AvgScrMath DESC LIMIT 1",
    "71": "SELECT DISTINCT District FROM schools WHERE City = 'Fresno' AND Magnet = 0",
    "111": "SELECT COUNT(*) FROM account a JOIN district d ON a.district_id = d.district_id WHERE d.A2 = 'Litomerice' AND STRFTIME('%Y', a.date) = '1996'",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993' AND T1.frequency = 'POPLATEK PO OBRATU'",
    "139": "SELECT COUNT(*) FROM disp JOIN card ON disp.disp_id = card.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "177": "SELECT t.balance, c.gender FROM trans t JOIN disp d ON t.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.client_id = 4 AND t.trans_id = 851",
    "180": "SELECT c.client_id  FROM client c  JOIN district d ON c.district_id = d.district_id  WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31'  AND d.A3 = 'east Bohemia'",
    "226": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percentage FROM bond WHERE molecule_id = 'TR008'",
    "240": "SELECT element FROM atom WHERE molecule_id = \"TR004\"",
    "251": "SELECT element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+'  GROUP BY element  ORDER BY COUNT(element) ASC  LIMIT 1",
    "255": "SELECT CAST(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) AS proportion FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = '-'",
    "268": "SELECT a1.element, a2.element FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_10_11'",
    "272": "SELECT DISTINCT m.molecule_id FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#' AND m.label = '-' AND a.element = 'c' LIMIT 2",
    "303": "SELECT SUM(CASE WHEN b.bond_type = '=' THEN 1 ELSE 0 END) AS double_bonds_count, m.label AS is_carcinogenic FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.molecule_id = 'TR006'",
    "305": "SELECT T1.bond_id, T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'",
    "310": "SELECT COUNT(T1.molecule_id) , SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",
    "327": "SELECT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5",
    "353": "SELECT T1.translation, T2.totalSetSize FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Italian'",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Creature' AND T2.status = 'Legal'",
    "416": "SELECT CAST(SUM(CASE WHEN fd.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.power IS NULL OR c.power = '*'",
    "428": "SELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 5",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')",
    "445": "SELECT DISTINCT fd.language, fd.flavorText, c.type FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.watermark = 'colorpie'",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "484": "SELECT fd.name FROM cards c JOIN sets s ON c.setCode = s.code JOIN foreign_data fd ON c.uuid = fd.uuid WHERE s.name = 'Coldsnap' AND fd.`language` = 'Italian' ORDER BY c.convertedManaCost DESC LIMIT 1",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'",
    "503": "SELECT T2.type FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Samite Pilgrim'",
    "522": "SELECT T2.name, T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' AND T2.edhrecRank = 1",
    "528": "SELECT cards.name, legalities.format FROM sets JOIN cards ON sets.code = cards.setCode JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'",
    "543": "SELECT AnswerCount FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ) ORDER BY AnswerCount DESC LIMIT 1",
    "546": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T2.Id = T1.OwnerUserId WHERE T1.ClosedDate IS NOT NULL",
    "562": "SELECT COUNT(c.Id) AS CommentCount FROM posts p JOIN comments c ON p.Id = c.PostId WHERE p.ViewCount = 1910",
    "569": "SELECT COUNT(*) FROM posts p JOIN votes v ON p.Id = v.PostId WHERE p.Title LIKE '%data visualization%'",
    "590": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1",
    "598": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) - CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) AS percentage_difference FROM badges WHERE Name = 'Student'",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60",
    "605": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'",
    "607": "SELECT COUNT(*) FROM comments WHERE Score > 60",
    "610": "SELECT b.Name FROM badges b JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)",
    "620": "SELECT u.Views FROM badges b JOIN users u ON b.UserId = u.Id WHERE b.Date = '2010-07-19 19:39:08.0'",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND STRFTIME('%Y', Date) = '2014'",
    "646": "SELECT p.Title, c.UserDisplayName FROM posts p JOIN comments c ON p.Id = c.PostId WHERE c.Score > 60",
    "648": "SELECT u.DisplayName, u.WebsiteUrl FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE p.FavoriteCount > 150",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000",
    "717": "SELECT sp.power_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.superhero_name = '3-D Man'",
    "740": "SELECT COUNT(DISTINCT superhero.id) AS female_superheroes_with_strength_100 FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE gender.gender = 'Female' AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100",
    "772": "SELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero h JOIN gender g ON h.gender_id = g.id JOIN publisher p ON h.publisher_id = p.id JOIN colour c1 ON h.eye_colour_id = c1.id JOIN colour c2 ON h.hair_colour_id = c2.id JOIN colour c3 ON h.skin_colour_id = c3.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'",
    "801": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Male' THEN 1 END) AS REAL) / NULLIF(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 END), 0) AS male_female_ratio FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id",
    "824": "SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name = 'Wind Control' ORDER BY s.superhero_name ASC",
    "829": "SELECT      COUNT(CASE WHEN p.publisher_name = 'DC Comics' THEN 1 END) -      COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 END) AS difference FROM      superhero h JOIN      publisher p ON h.publisher_id = p.id",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
    "840": "SELECT DISTINCT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'",
    "846": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 20 ORDER BY T1.q1 DESC LIMIT 5",
    "855": "SELECT T2.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T1.name = 'Sepang International Circuit'",
    "864": "SELECT COUNT(*) FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE r.date = '2015-11-29' AND res.time IS NOT NULL",
    "888": "SELECT c.country, c.name AS circuit, c.location FROM races r JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix' ORDER BY r.year ASC LIMIT 1",
    "898": "SELECT STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', dob) AS age, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', dob) ASC LIMIT 1",
    "899": "SELECT c.name FROM circuits c JOIN races r ON c.circuitId = r.circuitId WHERE r.year BETWEEN 1990 AND 2000 GROUP BY c.circuitId HAVING COUNT(*) = 4",
    "922": "SELECT T2.`time` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T1.location = 'Abu Dhabi' AND T2.year = 2010",
    "928": "SELECT T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2007 AND T2.position = 1",
    "935": "SELECT COUNT(r.driverId) FROM races ra JOIN results r ON ra.raceId = r.raceId WHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.time IS NOT NULL",
    "938": "SELECT d.forename, d.surname, d.url FROM races r JOIN results res ON r.raceId = res.raceId JOIN drivers d ON res.driverId = d.driverId WHERE r.name = 'Australian Grand Prix' AND r.year = 2008 AND res.position = 1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'",
    "970": "SELECT d.forename, d.surname, l.time FROM drivers d JOIN ( SELECT driverId, MIN(time) AS time FROM laptimes GROUP BY driverId ) l ON d.driverId = l.driverId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31' ORDER BY l.time LIMIT 3",
    "985": "SELECT d.forename, d.surname FROM races r JOIN laptimes l ON r.raceId = l.raceId JOIN drivers d ON l.driverId = d.driverId WHERE r.name = 'French Grand Prix' AND l.lap = 3 ORDER BY l.time DESC LIMIT 1",
    "987": "SELECT AVG(r.fastestLapTime) AS average_fastest_lap_time FROM races ra JOIN results r ON ra.raceId = r.raceId JOIN drivers d ON r.driverId = d.driverId WHERE ra.name = 'United States Grand Prix' AND ra.year = 2006 AND r.rank < 11",
    "1004": "SELECT SUM(ds.wins) AS total_wins, d.forename, d.surname FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) GROUP BY d.forename, d.surname",
    "1039": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ahmed Samir Farag'",
    "1042": "SELECT L.name FROM Match M JOIN League L ON M.league_id = L.id WHERE M.season = '2009/2010' GROUP BY L.id HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)",
    "1048": "SELECT overall_rating FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011'",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'",
    "1082": "SELECT T2.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Germany'",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday) > 34",
    "1145": "SELECT League.name FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2015/2016' GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 4",
    "1157": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY Birthday LIMIT 1",
    "1200": "SELECT CAST(SUM(CASE WHEN T2.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Symptoms LIKE '%thrombocytopenia%'",
    "1218": "SELECT CAST(COUNT(CASE WHEN L.UA > 6.5 THEN 1 END) AS REAL) * 100 / COUNT(*) AS FemalePatientPercentageBeyondNormalRange  FROM Patient P  JOIN Laboratory L ON P.ID = L.ID  WHERE P.SEX = 'F'",
    "1224": "SELECT p.ID, p.SEX, p.Birthday FROM Laboratory l JOIN Patient p ON l.ID = p.ID ORDER BY l.`T-BIL` DESC LIMIT 1",
    "1235": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS Age, P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.RBC < 3.5",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('0', '-') AND STRFTIME('%Y', T1.`First Date`) < '2000'",
    "1272": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('negative', '0') ORDER BY T1.`First Date` ASC LIMIT 1",
    "1279": "SELECT CAST(COUNT(CASE WHEN T2.Diagnosis = 'SLE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60",
    "1280": "SELECT COUNT(P.ID) FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.GOT < 60",
    "1286": "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.ALP >= 300 AND P.Admission = '+'",
    "1302": "SELECT COUNT(*) FROM Laboratory AS L JOIN Examination AS E ON L.ID = E.ID WHERE L.CPK < 250 AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+')",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "1368": "SELECT m.major_name FROM member AS mem JOIN major AS m ON mem.link_to_major = m.major_id WHERE mem.phone = '809-555-3360'",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(*) DESC LIMIT 1",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
    "1514": "SELECT T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.`Date` = '2012-08-24' AND T1.`Time` = '12:42:00'",
    "1523": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467"
}