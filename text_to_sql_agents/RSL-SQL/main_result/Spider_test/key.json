[
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Club_ID",
            "club.Name"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Club_ID",
            "club.Name",
            "club.Manager",
            "club.Captain",
            "club.Manufacturer",
            "club.Sponsor"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ordered alphabetically"
        ]
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manager",
            "club.Captain"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manager",
            "club.Captain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Name",
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "NOT",
            "="
        ],
        "conditions": [
            "manufacturer is not 'Nike'"
        ]
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Name",
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "NOT LIKE"
        ],
        "conditions": [
            "manufacturer is not Nike"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Name",
            "player.Wins_count"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of players",
            "ascending order of wins count"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Name",
            "player.Wins_count"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of players",
            "order of count of wins",
            "ascending"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Name",
            "player.Earnings"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest earnings"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Name",
            "player.Earnings"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "earns the most money"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "earnings higher than 1200000"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "players make more than 1200000"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings",
            "player.Wins_count"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest earnings",
            "more than 2 win counts"
        ]
    },
    {
        "tables": [
            "player",
            "club"
        ],
        "columns": [
            "player.Player_ID",
            "player.Name",
            "player.Country",
            "player.Earnings",
            "player.Events_number",
            "player.Wins_count",
            "player.Club_ID",
            "club.Club_ID",
            "club.Name",
            "club.Manager",
            "club.Captain",
            "club.Manufacturer",
            "club.Sponsor"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "players have more than 2 wins"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Name",
            "player.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "player",
            "club"
        ],
        "columns": [
            "player.Name",
            "club.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "names of players",
            "corresponding clubs"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Name",
            "player.Wins_count",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "players with more than 2 win counts"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Name",
            "player.Wins_count",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "players who have won more than twice"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Club_ID",
            "club.Name",
            "club.Manager",
            "player.Name",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "manager \"Sam Allardyce\""
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Name",
            "club.Manager",
            "player.Name",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "players from the club managed by Sam Allardyce"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Name",
            "player.Earnings",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "AVG",
            "JOIN",
            "GROUP BY",
            "ORDER BY DESC"
        ],
        "conditions": [
            "descending order of average earnings of players"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Name",
            "player.Earnings",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "AVG",
            "DESC"
        ],
        "conditions": [
            "ordered descending by the average earnings of players within each"
        ]
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "associated with more than one club"
        ]
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Manufacturer"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "work for more than 1 club"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "have more than one player"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "produced more than one player"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Club_ID",
            "club.Name",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "do not have players"
        ]
    },
    {
        "tables": [
            "club",
            "player"
        ],
        "columns": [
            "club.Club_ID",
            "club.Name",
            "player.Club_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "do not have any players"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "earnings more than 1400000",
            "earnings less than 1100000"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "earnings over 1400000",
            "earnings below 1100000"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "country is Australia",
            "country is Zimbabwe"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Country",
            "player.Earnings"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "players from Australia",
            "players from Zimbabwe"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_first_name",
            "Customers.customer_last_name",
            "Orders.order_id",
            "Orders.customer_id",
            "Order_Items.order_item_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "placed more than 2 orders",
            "bought at least 3 items"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_first_name",
            "Customers.customer_last_name",
            "Orders.order_id",
            "Order_Items.order_item_id",
            "Order_Items.order_id",
            "Order_Items.order_item_status_code"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "ordered more than twice",
            "bought at least 3 items"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.order_status_code",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "orders with any products",
            "each orders contain",
            "order id",
            "status",
            "number"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.order_status_code",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "order contains products",
            "orders have statuses",
            "orders have ids"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.date_order_placed",
            "Order_Items.order_item_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "dates of the orders which were placed at the earliest time",
            "have more than 1 items"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.date_order_placed",
            "Order_Items.order_item_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "dates of the earliest order",
            "dates of all orders with more than 1 item"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.customer_first_name",
            "Customers.customer_middle_initial",
            "Customers.customer_last_name",
            "Orders.customer_id"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "did not make any orders"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.customer_first_name",
            "Customers.customer_middle_initial",
            "Customers.customer_last_name",
            "Orders.customer_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "first names",
            "last names",
            "middle initials",
            "did not make any orders"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items",
            "Orders"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Products.product_price",
            "Products.product_color",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Orders.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "id",
            "name",
            "price",
            "color",
            "products which have not been ordered for at least twice"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items",
            "Orders"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Products.product_price",
            "Products.product_color",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Orders.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "ids",
            "names",
            "prices",
            "colors",
            "listed in less than two orders"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.date_order_placed",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "orders have at least 2 products",
            "list the order id",
            "list the order date"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.date_order_placed",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "at least two products"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Products.product_price",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Products.product_price",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "ordered most frequently"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items",
            "Products"
        ],
        "columns": [
            "Orders.order_id",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Products.product_price"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "least sum of the product prices",
            "list the order id",
            "sum"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items",
            "Products"
        ],
        "columns": [
            "Orders.order_id",
            "Order_Items.order_item_id",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Products.product_id",
            "Products.product_price"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN",
            "SUM",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "total cost the least"
        ]
    },
    {
        "tables": [
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customer_Payment_Methods.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Payment_Methods.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products",
            "Customers",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Customers.gender_code",
            "Products.product_id",
            "Orders.order_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY"
        ],
        "conditions": [
            "gender",
            "number of products"
        ]
    },
    {
        "tables": [
            "Products",
            "Customers",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Customers.customer_id",
            "Customers.gender_code",
            "Orders.order_id",
            "Orders.customer_id",
            "Order_Items.order_item_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.gender_code",
            "Orders.order_id",
            "Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY"
        ],
        "conditions": [
            "gender of customers"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.gender_code",
            "Orders.order_id",
            "Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "gender"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customers.customer_first_name",
            "Customers.customer_middle_initial",
            "Customers.customer_last_name",
            "Customer_Payment_Methods.payment_method_code"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customers.customer_first_name",
            "Customers.customer_middle_initial",
            "Customers.customer_last_name",
            "Customer_Payment_Methods.payment_method_code"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "first names",
            "middle initials",
            "last names",
            "payment methods"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Shipments"
        ],
        "columns": [
            "Invoices.invoice_status_code",
            "Invoices.invoice_date",
            "Shipments.shipment_date"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "invoices' status",
            "date",
            "date of shipment"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Shipments"
        ],
        "columns": [
            "Invoices.invoice_status_code",
            "Invoices.invoice_date",
            "Shipments.shipment_date"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "statuses",
            "dates",
            "shipment dates"
        ]
    },
    {
        "tables": [
            "Products",
            "Shipments",
            "Order_Items",
            "Orders"
        ],
        "columns": [
            "Products.product_name",
            "Shipments.shipment_date",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Orders.order_id"
        ],
        "sql_keywords": [
            "JOIN",
            "ON",
            "SELECT",
            "FROM"
        ],
        "conditions": [
            "names of the products being shipped",
            "corresponding shipment date"
        ]
    },
    {
        "tables": [
            "Products",
            "Shipments",
            "Order_Items"
        ],
        "columns": [
            "Products.product_name",
            "Shipments.shipment_date",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "products have been shipped",
            "days were they shipped"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items",
            "Shipments"
        ],
        "columns": [
            "Order_Items.order_item_status_code",
            "Shipments.shipment_tracking_number"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "status code of the items being ordered",
            "shipment tracking number"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items",
            "Shipments"
        ],
        "columns": [
            "Order_Items.order_item_status_code",
            "Shipments.shipment_tracking_number"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "items have been ordered",
            "items have been shipped"
        ]
    },
    {
        "tables": [
            "Products",
            "Orders",
            "Order_Items",
            "Shipments",
            "Shipment_Items"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_color",
            "Orders.order_id",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Shipments.shipment_id",
            "Shipments.order_id",
            "Shipment_Items.shipment_id",
            "Shipment_Items.order_item_id"
        ],
        "sql_keywords": [
            "JOIN",
            "ON",
            "SELECT",
            "FROM",
            "WHERE"
        ],
        "conditions": [
            "product name",
            "color",
            "ordered items",
            "shipped"
        ]
    },
    {
        "tables": [
            "Products",
            "Shipments",
            "Shipment_Items",
            "Order_Items"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_color",
            "Shipments.shipment_id",
            "Shipment_Items.shipment_id",
            "Shipment_Items.order_item_id",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "names",
            "colors",
            "products",
            "shipped"
        ]
    },
    {
        "tables": [
            "Products",
            "Customers",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price",
            "Products.product_description",
            "Customers.customer_id",
            "Customers.gender_code",
            "Orders.order_id",
            "Orders.customer_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "bought by female customers"
        ]
    },
    {
        "tables": [
            "Products",
            "Customers",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price",
            "Products.product_description",
            "Customers.customer_id",
            "Customers.gender_code",
            "Orders.order_id",
            "Orders.customer_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "female customers",
            "different names",
            "prices",
            "descriptions",
            "all products"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Orders",
            "Shipments"
        ],
        "columns": [
            "Invoices.invoice_status_code",
            "Orders.order_id",
            "Shipments.order_id",
            "Shipments.invoice_number"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "orders have not been shipped"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Orders",
            "Shipments"
        ],
        "columns": [
            "Invoices.invoice_status_code",
            "Orders.order_id",
            "Shipments.order_id",
            "Shipments.invoice_number"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "invoice statuses",
            "orders not shipped"
        ]
    },
    {
        "tables": [
            "Orders",
            "Order_Items",
            "Products"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.date_order_placed",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Products.product_id",
            "Products.product_price"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Orders",
            "Order_Items",
            "Products"
        ],
        "columns": [
            "Orders.order_id",
            "Orders.date_order_placed",
            "Order_Items.product_id",
            "Order_Items.order_id",
            "Products.product_id",
            "Products.product_price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "order id",
            "order date",
            "total amount paid"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "placed any order"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Order_Items"
        ],
        "columns": [
            "Order_Items.order_item_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Order_Items"
        ],
        "columns": [
            "Order_Items.order_item_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "item status codes",
            "ordered items"
        ]
    },
    {
        "tables": [
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customer_Payment_Methods.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customer_Payment_Methods.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.login_name",
            "Customers.login_password"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "phone number have the prefix '+12'"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.login_name",
            "Customers.login_password"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "phone number starts with '+12'"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_size"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name has the substring 'Dell'"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_size"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name includes the word 'Dell'"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price",
            "Products.product_size"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "price is above average"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price",
            "Products.product_size"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "price is above the mean"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "products have not been sold"
        ]
    },
    {
        "tables": [
            "Products",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Orders.order_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "products have not been ordered yet"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Payment_Methods.customer_id"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "customers do not have any payment method"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Payment_Methods.customer_id"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not have a listed payment method"
        ]
    },
    {
        "tables": [
            "Orders"
        ],
        "columns": [
            "Orders.order_status_code",
            "Orders.date_order_placed"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "order status",
            "dates of orders"
        ]
    },
    {
        "tables": [
            "Orders"
        ],
        "columns": [
            "Orders.order_status_code",
            "Orders.date_order_placed"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "status codes",
            "dates"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.address_line_1",
            "Customers.town_city",
            "Customers.county"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "live in the USA"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.address_line_1",
            "Customers.town_city",
            "Customers.county",
            "Customers.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "live in the United States"
        ]
    },
    {
        "tables": [
            "Customers",
            "Products",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Customers.customer_first_name",
            "Products.product_name",
            "Orders.customer_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Orders",
            "Order_Items",
            "Products"
        ],
        "columns": [
            "Customers.customer_first_name",
            "Products.product_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Shipments",
            "Shipment_Items"
        ],
        "columns": [
            "Shipments.shipment_id",
            "Shipment_Items.shipment_id",
            "Shipment_Items.order_item_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products",
            "Order_Items",
            "Shipments",
            "Shipment_Items"
        ],
        "columns": [
            "Products.product_id",
            "Order_Items.product_id",
            "Order_Items.order_item_id",
            "Shipments.shipment_id",
            "Shipment_Items.shipment_id",
            "Shipment_Items.order_item_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_price",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products",
            "Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_price",
            "Orders.order_id",
            "Order_Items.product_id",
            "Order_Items.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.email_address",
            "Customers.town_city",
            "Customers.county"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "email address",
            "town",
            "county",
            "least common gender"
        ]
    },
    {
        "tables": [
            "Customers",
            "Orders"
        ],
        "columns": [
            "Customers.email_address",
            "Customers.town_city",
            "Customers.county",
            "Customers.gender_code",
            "Orders.customer_id",
            "Orders.order_status_code",
            "Orders.date_order_placed"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "gender that orders less often",
            "email addresses",
            "cities",
            "counties"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods",
            "Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Payment_Methods.customer_id",
            "Customer_Payment_Methods.payment_method_code",
            "Orders.order_id",
            "Orders.customer_id",
            "Orders.date_order_placed"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "placed by customers with at least 2 payment methods"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Payment_Methods",
            "Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Payment_Methods.customer_id",
            "Orders.customer_id",
            "Orders.date_order_placed"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "customers with at least 2 payment methods"
        ]
    },
    {
        "tables": [
            "Orders"
        ],
        "columns": [
            "Orders.order_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Orders"
        ],
        "columns": [
            "Orders.order_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "least common order status"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_description",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "products sold for more than 3 times"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_description",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "products sold more than 3 times"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Shipments"
        ],
        "columns": [
            "Invoices.invoice_number",
            "Invoices.invoice_date",
            "Shipments.invoice_number"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "invoices causing at least 2 shipments"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Shipments"
        ],
        "columns": [
            "Invoices.invoice_number",
            "Invoices.invoice_date",
            "Shipments.shipment_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "invoices related to at least 2 shipments",
            "dates of invoices",
            "ids of invoices"
        ]
    },
    {
        "tables": [
            "Shipments"
        ],
        "columns": [
            "Shipments.shipment_tracking_number",
            "Shipments.shipment_date"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "shipment tracking numbers",
            "shipment dates"
        ]
    },
    {
        "tables": [
            "Shipments"
        ],
        "columns": [
            "Shipments.shipment_tracking_number",
            "Shipments.shipment_date"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "tracking numbers",
            "dates",
            "all shipments"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_color",
            "Products.product_description",
            "Products.product_size",
            "Products.product_price"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "color",
            "description",
            "size",
            "priced below the maximum price"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_color",
            "Products.product_description",
            "Products.product_size"
        ],
        "sql_keywords": [
            "=",
            "!="
        ],
        "conditions": [
            "not at the maximum price"
        ]
    },
    {
        "tables": [
            "director"
        ],
        "columns": [
            "director.Name",
            "director.Age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names of directors",
            "older than the average age"
        ]
    },
    {
        "tables": [
            "director"
        ],
        "columns": [
            "director.Name",
            "director.Age"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "oldest director"
        ]
    },
    {
        "tables": [
            "channel"
        ],
        "columns": [
            "channel.Internet"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "channels have the word 'bbc' in their internet link"
        ]
    },
    {
        "tables": [
            "channel"
        ],
        "columns": [
            "channel.Digital_terrestrial_channel"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "program"
        ],
        "columns": [
            "program.Title",
            "program.Start_Year"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "List all program titles",
            "in the order of starting year",
            "most recent one first"
        ]
    },
    {
        "tables": [
            "director",
            "program"
        ],
        "columns": [
            "director.Director_ID",
            "director.Name",
            "program.Program_ID",
            "program.Director_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "director",
            "in charge",
            "most programs"
        ]
    },
    {
        "tables": [
            "director",
            "program"
        ],
        "columns": [
            "director.Name",
            "director.Age",
            "program.Director_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "director in charge of the most programs"
        ]
    },
    {
        "tables": [
            "program"
        ],
        "columns": [
            "program.Title",
            "program.Start_Year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "began most recently"
        ]
    },
    {
        "tables": [
            "channel",
            "program"
        ],
        "columns": [
            "channel.Name",
            "channel.Internet",
            "program.Channel_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "channels that have more than one program"
        ]
    },
    {
        "tables": [
            "channel",
            "program"
        ],
        "columns": [
            "channel.Channel_ID",
            "channel.Name",
            "program.Program_ID",
            "program.Channel_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "channel",
            "program"
        ],
        "columns": [
            "channel.Channel_ID",
            "program.Channel_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not run any program"
        ]
    },
    {
        "tables": [
            "program",
            "director"
        ],
        "columns": [
            "program.Title",
            "program.Director_ID",
            "director.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "director",
            "Dracula program"
        ]
    },
    {
        "tables": [
            "channel",
            "director",
            "program",
            "director_admin"
        ],
        "columns": [
            "channel.Channel_ID",
            "channel.Name",
            "channel.Internet",
            "director.Director_ID",
            "director.Name",
            "program.Director_ID",
            "program.Channel_ID",
            "director_admin.Director_ID",
            "director_admin.Channel_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "directed by the most directors"
        ]
    },
    {
        "tables": [
            "director"
        ],
        "columns": [
            "director.Name",
            "director.Age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age is between 30 and 60"
        ]
    },
    {
        "tables": [
            "channel",
            "director",
            "program",
            "director_admin"
        ],
        "columns": [
            "channel.Channel_ID",
            "channel.Name",
            "director.Director_ID",
            "director.Name",
            "director.Age",
            "program.Program_ID",
            "program.Director_ID",
            "program.Channel_ID",
            "director_admin.Director_ID",
            "director_admin.Channel_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "director younger than 40",
            "director older than 60"
        ]
    },
    {
        "tables": [
            "channel",
            "director",
            "program"
        ],
        "columns": [
            "channel.Channel_ID",
            "channel.Name",
            "director.Director_ID",
            "director.Name",
            "program.Program_ID",
            "program.Director_ID",
            "program.Channel_ID"
        ],
        "sql_keywords": [
            "NOT",
            "="
        ],
        "conditions": [
            "not directed by Hank Baskett"
        ]
    },
    {
        "tables": [
            "radio"
        ],
        "columns": [
            "radio.Radio_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "radio"
        ],
        "columns": [
            "radio.Transmitter",
            "radio.ERP_kW"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "transmitters of radios",
            "ascending order of erp kw"
        ]
    },
    {
        "tables": [
            "tv_show"
        ],
        "columns": [
            "tv_show.tv_show_name",
            "tv_show.Original_Airdate"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names",
            "original air dates"
        ]
    },
    {
        "tables": [
            "city_channel"
        ],
        "columns": [
            "city_channel.Station_name",
            "city_channel.Affiliation"
        ],
        "sql_keywords": [
            "=",
            "NOT"
        ],
        "conditions": [
            "affiliation is not 'ABC'"
        ]
    },
    {
        "tables": [
            "radio"
        ],
        "columns": [
            "radio.Transmitter",
            "radio.ERP_kW"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "ERP is bigger than 150",
            "ERP is smaller than 30"
        ]
    },
    {
        "tables": [
            "radio"
        ],
        "columns": [
            "radio.Transmitter",
            "radio.ERP_kW"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "transmitter of the radio",
            "largest ERP_kW"
        ]
    },
    {
        "tables": [
            "radio"
        ],
        "columns": [
            "radio.ERP_kW"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "city_channel"
        ],
        "columns": [
            "city_channel.Affiliation",
            "city_channel.ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "city_channel"
        ],
        "columns": [
            "city_channel.Affiliation"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "city_channel"
        ],
        "columns": [
            "city_channel.Affiliation"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "affiliations shared by more than three city channels"
        ]
    },
    {
        "tables": [
            "city_channel"
        ],
        "columns": [
            "city_channel.City",
            "city_channel.Station_name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "city_channel",
            "radio",
            "city_channel_radio"
        ],
        "columns": [
            "city_channel.City",
            "radio.Transmitter",
            "city_channel_radio.City_channel_ID",
            "city_channel_radio.Radio_ID"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "city_channel",
            "radio",
            "city_channel_radio"
        ],
        "columns": [
            "city_channel.Station_name",
            "radio.Transmitter",
            "radio.ERP_kW"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "transmitters of radios",
            "station names of the channels",
            "descending order of the ERP of the radios"
        ]
    },
    {
        "tables": [
            "radio",
            "city_channel_radio"
        ],
        "columns": [
            "radio.Radio_ID",
            "radio.Transmitter",
            "city_channel_radio.City_channel_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "radio",
            "city_channel_radio"
        ],
        "columns": [
            "radio.Radio_ID",
            "radio.Transmitter",
            "city_channel_radio.Radio_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "radios are not associated with any city channel"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Model",
            "vehicle.Top_Speed",
            "vehicle.Power"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "maximum top speed",
            "power is higher than 6000"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Model",
            "vehicle.Top_Speed",
            "vehicle.Power"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "power over 6000",
            "greatest top speed"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Name",
            "driver.Citizenship"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "citizens of the 'United States'"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Name",
            "driver.Citizenship"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "citizenship from the United States"
        ]
    },
    {
        "tables": [
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "driver driven at most",
            "driver id"
        ]
    },
    {
        "tables": [
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "driver who has driven the most vehicles",
            "how many vehicles"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Power",
            "vehicle.Builder"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "vehicles manufactured by 'Zhuzhou'"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Power",
            "vehicle.Builder"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "vehicles built by Zhuzhou"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "vehicle driven for the least times",
            "vehicles ever used"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "vehicle has been driven the fewest times"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Top_Speed",
            "vehicle.Power"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "top speed",
            "power",
            "manufactured in the year of 1996"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Top_Speed",
            "vehicle.Power"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "built in the year 1996"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Build_Year",
            "vehicle.Model",
            "vehicle.Builder"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "build year",
            "model name",
            "builder"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Build_Year",
            "vehicle.Model",
            "vehicle.Builder"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "build year",
            "model",
            "builder"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver",
            "driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Build_Year",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "driven vehicles built in 2012"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver",
            "driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Build_Year",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "vehicles built in 2012"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Name",
            "driver.Citizenship",
            "driver.Racing_Series"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "drivers have raced in 'NASCAR'"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Name",
            "driver.Citizenship",
            "driver.Racing_Series"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Top_Speed"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Top_Speed"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "vehicle",
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Power",
            "driver.Driver_ID",
            "driver.Name",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "power more than 5000"
        ]
    },
    {
        "tables": [
            "vehicle",
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Power",
            "driver.Driver_ID",
            "driver.Name",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "driven vehicles with power over 5000"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Model",
            "vehicle.Top_Speed",
            "vehicle.Total_Production"
        ],
        "sql_keywords": [
            "OR"
        ],
        "conditions": [
            "total production larger than 100",
            "top speed higher than 150"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Model",
            "vehicle.Top_Speed",
            "vehicle.Total_Production"
        ],
        "sql_keywords": [
            "OR"
        ],
        "conditions": [
            "total production of over 100",
            "top speed over 150"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Model",
            "vehicle.Build_Year"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "model name contains 'DJ'",
            "build year"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Model",
            "vehicle.Build_Year"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "model includes 'DJ'",
            "build year"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "models which have not been driven by any drivers"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "vehicles that have never been driven"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver",
            "driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "vehicle.Builder",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "vehicle ids",
            "vehicle models",
            "driven by two drivers",
            "manufactured by 'Ziyang'"
        ]
    },
    {
        "tables": [
            "vehicle",
            "vehicle_driver",
            "driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "vehicle.Builder",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "driven by exactly two drivers",
            "built by Ziyang"
        ]
    },
    {
        "tables": [
            "vehicle",
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "driver.Driver_ID",
            "driver.Name",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "INTERSECT",
            "UNION"
        ],
        "conditions": [
            "vehicle ids and models which have been driven by more than 2 drivers",
            "vehicle ids and models which have been driven by the driver named 'Jeff Gordon'"
        ]
    },
    {
        "tables": [
            "vehicle",
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "driver.Driver_ID",
            "driver.Name",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "INTERSECT",
            "UNION"
        ],
        "conditions": [
            "driven by more than 2 drivers",
            "driven by Jeff Gordon"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Top_Speed"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "maximum top speed"
        ]
    },
    {
        "tables": [
            "vehicle"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Top_Speed"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "top speed equal to the maximum across all vehicles"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of drivers",
            "alphabetical order"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Racing_Series"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Racing_Series"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "vehicle",
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "driver.Driver_ID",
            "driver.Name",
            "driver.Citizenship",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name of the drivers",
            "citizenship of the drivers",
            "vehicle model 'DJ1'"
        ]
    },
    {
        "tables": [
            "vehicle",
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "vehicle.Vehicle_ID",
            "vehicle.Model",
            "driver.Driver_ID",
            "driver.Name",
            "driver.Citizenship",
            "vehicle_driver.Driver_ID",
            "vehicle_driver.Vehicle_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "driven the vehicle with the model 'DJ1'"
        ]
    },
    {
        "tables": [
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "vehicle_driver.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "not driven any cars"
        ]
    },
    {
        "tables": [
            "driver",
            "vehicle_driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "vehicle_driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "have not driven any vehicles"
        ]
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Exam_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Exam_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Subject_Code"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "distinct subject code",
            "ascending alphabetical order"
        ]
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Subject_Code"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Exam_Name",
            "Exams.Exam_Date"
        ],
        "sql_keywords": [
            "=",
            "LIKE"
        ],
        "conditions": [
            "subject code is not 'Database'"
        ]
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Subject_Code",
            "Exams.Exam_Date",
            "Exams.Exam_Name"
        ],
        "sql_keywords": [
            "NOT LIKE"
        ],
        "conditions": [
            "subject code is not 'Database'"
        ]
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Exam_Date"
        ],
        "sql_keywords": [
            "LIKE",
            "ORDER BY DESC"
        ],
        "conditions": [
            "subject code containing the word 'data'",
            "in descending order of dates"
        ]
    },
    {
        "tables": [
            "Exams"
        ],
        "columns": [
            "Exams.Exam_Date"
        ],
        "sql_keywords": [
            "LIKE",
            "ORDER BY DESC"
        ],
        "conditions": [
            "subject code contains the substring 'data'",
            "return dates in descending order of dates"
        ]
    },
    {
        "tables": [
            "Questions"
        ],
        "columns": [
            "Questions.Type_of_Question_Code",
            "Questions.Question_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Questions"
        ],
        "columns": [
            "Questions.Type_of_Question_Code",
            "Questions.Question_ID"
        ],
        "sql_keywords": [
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "For each question type",
            "return its type code",
            "its count of occurrence"
        ]
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Student_Answer_Text",
            "Student_Answers.Comments"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "received comments 'Normal'"
        ]
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Student_Answer_Text"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "comments 'Normal' were given"
        ]
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Comments"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Comments"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Student_Answer_Text"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "List all the student answer texts",
            "in descending order of count"
        ]
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Student_Answer_Text"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "Sort the student answer texts",
            "in descending order of their frequency of occurrence."
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.First_Name",
            "Student_Answers.Date_of_Answer"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "first names of students",
            "dates of their answers"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.First_Name",
            "Student_Answers.Date_of_Answer"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "first name of the student",
            "date of the answer"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.Email_Adress",
            "Student_Answers.Date_of_Answer"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY DESC"
        ],
        "conditions": [
            "email addresses of students",
            "dates of their answers",
            "descending order of dates"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.Email_Adress",
            "Student_Answers.Date_of_Answer"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY"
        ],
        "conditions": [
            "find the email address of the student",
            "find the date of the answer",
            "sort them in descending order of dates"
        ]
    },
    {
        "tables": [
            "Student_Assessments"
        ],
        "columns": [
            "Student_Assessments.Assessment"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "least common assessment"
        ]
    },
    {
        "tables": [
            "Student_Assessments"
        ],
        "columns": [
            "Student_Assessments.Assessment"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "assessment has the smallest frequency count"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.First_Name",
            "Student_Answers.Student_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "have at least two answer records"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.First_Name",
            "Student_Answers.Student_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "students have 2 or more answer records",
            "give their first names"
        ]
    },
    {
        "tables": [
            "Valid_Answers"
        ],
        "columns": [
            "Valid_Answers.Valid_Answer_Text"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Valid_Answers"
        ],
        "columns": [
            "Valid_Answers.Valid_Answer_Text"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Last_Name",
            "Students.Gender_MFU"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "gender is not 'M'"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Last_Name",
            "Students.Gender_MFU"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "gender other than 'M'"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Gender_MFU",
            "Students.Student_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Gender_MFU",
            "Students.Student_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "gender",
            "number of students"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Last_Name",
            "Students.Gender_MFU"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "gender is 'F'",
            "gender is 'M'"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Last_Name",
            "Students.Gender_MFU"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "identify their gender as \"F\"",
            "identify their gender as \"M\"",
            "give me their last names"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.First_Name",
            "Student_Answers.Student_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not have any answers"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Answers"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.First_Name",
            "Student_Answers.Student_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "students do not have any answers",
            "find their first names"
        ]
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Student_Answer_Text",
            "Student_Answers.Comments"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "received 'Normal' as comments",
            "received 'Absent' as comments"
        ]
    },
    {
        "tables": [
            "Student_Answers"
        ],
        "columns": [
            "Student_Answers.Student_Answer_Text",
            "Student_Answers.Comments"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "answer texts were given 'Normal' as comments",
            "answer texts were given 'Absent' as comments"
        ]
    },
    {
        "tables": [
            "Questions"
        ],
        "columns": [
            "Questions.Type_of_Question_Code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least three questions"
        ]
    },
    {
        "tables": [
            "Questions"
        ],
        "columns": [
            "Questions.Type_of_Question_Code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "3 or more questions"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.First_Name",
            "Students.Middle_Name",
            "Students.Last_Name",
            "Students.Gender_MFU",
            "Students.Student_Address",
            "Students.Email_Adress",
            "Students.Cell_Mobile_Phone",
            "Students.Home_Phone"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.Student_ID",
            "Students.First_Name",
            "Students.Middle_Name",
            "Students.Last_Name",
            "Students.Gender_MFU",
            "Students.Student_Address",
            "Students.Email_Adress",
            "Students.Cell_Mobile_Phone",
            "Students.Home_Phone"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Addresses"
        ],
        "columns": [
            "Addresses.address_id",
            "Addresses.address_details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Addresses"
        ],
        "columns": [
            "Addresses.address_id",
            "Addresses.address_details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Addresses"
        ],
        "columns": [
            "Addresses.address_id",
            "Addresses.address_details"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Addresses"
        ],
        "columns": [
            "Addresses.address_id",
            "Addresses.address_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_type_code",
            "Products.product_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_type_code",
            "Products.product_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "ids",
            "type codes",
            "names"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name Monitor"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price"
        ],
        "sql_keywords": [
            "MIN",
            "AVG",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price"
        ],
        "sql_keywords": [
            "MIN",
            "AVG",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type Clothes"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code",
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type Hardware"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "price higher than the average"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "price above the average for all products"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "price higher than the average price of hardware type products"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "prices above the average price of Hardware products"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price",
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type Clothes"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "most expensive Clothes product"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Products.product_price",
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "product type is Hardware",
            "cheapest product"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cheapest Hardware product"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "List all product names",
            "descending order of price"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "sorted by descending price"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_type_code",
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "ORDER BY",
            "ASC"
        ],
        "conditions": [
            "hardware type products",
            "ascending order of price"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "Hardware products",
            "sorted by price ascending"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code",
            "Products.product_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code",
            "Products.product_name",
            "Products.product_price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code",
            "Products.product_price"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code",
            "Products.product_price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "product type code with at least two products"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "product types that have two or more products"
        ]
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_address",
            "Customers.customer_phone",
            "Customers.customer_email"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer address",
            "customer phone",
            "customer email",
            "customer name is Jeromy"
        ]
    },
    {
        "tables": [
            "Customers",
            "Addresses"
        ],
        "columns": [
            "Customers.customer_name",
            "Customers.customer_phone",
            "Customers.customer_email",
            "Customers.address_id",
            "Addresses.address_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name is Jeromy"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_name",
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "payment method code used by least number of customers"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.customer_name",
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "use the least common payment method"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code",
            "Customers.customer_number",
            "Customers.customer_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer named Jeromy"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code",
            "Customers.customer_number"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer named Jeromy"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.payment_method_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_type_code",
            "Products.product_name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_type_code",
            "Products.product_name"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Products"
        ],
        "columns": [
            "Products.product_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "least common"
        ]
    },
    {
        "tables": [
            "Customer_Orders"
        ],
        "columns": [
            "Customer_Orders.order_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customer_Orders"
        ],
        "columns": [
            "Customer_Orders.order_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name",
            "Customer_Orders.order_id",
            "Customer_Orders.order_date",
            "Customer_Orders.order_status_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer Jeromy"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name",
            "Customer_Orders.order_id",
            "Customer_Orders.order_date",
            "Customer_Orders.order_status_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "orders made by Jeromy",
            "ids",
            "dates",
            "status codes"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name",
            "Customer_Orders.order_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name",
            "Customer_Orders.order_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name",
            "Customers.customer_phone",
            "Customers.customer_email",
            "Customer_Orders.order_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "most orders"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customers.customer_name",
            "Customers.customer_phone",
            "Customers.customer_email",
            "Customer_Orders.order_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "customer who made the most orders"
        ]
    },
    {
        "tables": [
            "Customer_Orders"
        ],
        "columns": [
            "Customer_Orders.order_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customer_Orders"
        ],
        "columns": [
            "Customer_Orders.order_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "each order status code"
        ]
    },
    {
        "tables": [
            "Customer_Orders"
        ],
        "columns": [
            "Customer_Orders.order_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customer_Orders"
        ],
        "columns": [
            "Customer_Orders.order_status_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most frequent across customer orders"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "customers do not have an order"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "not made an order"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "without an order"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "products have not been ordered"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Order_Items.order_id",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "products named Monitor"
        ]
    },
    {
        "tables": [
            "Products",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Order_Items.product_id",
            "Order_Items.order_quantity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "total number of Monitor products",
            "ordered"
        ]
    },
    {
        "tables": [
            "Products",
            "Customers",
            "Customer_Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Customers.customer_id",
            "Customer_Orders.order_id",
            "Customer_Orders.customer_id",
            "Order_Items.order_id",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "ordered the product named Monitor"
        ]
    },
    {
        "tables": [
            "Products",
            "Customers",
            "Customer_Orders",
            "Order_Items"
        ],
        "columns": [
            "Products.product_id",
            "Products.product_name",
            "Customers.customer_id",
            "Customer_Orders.order_id",
            "Customer_Orders.customer_id",
            "Order_Items.order_id",
            "Order_Items.product_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "have an order"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "customer ids without an order"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Orders"
        ],
        "columns": [
            "Customers.customer_id",
            "Customer_Orders.customer_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "customers who have not made an order"
        ]
    },
    {
        "tables": [
            "Customer_Orders",
            "Order_Items"
        ],
        "columns": [
            "Customer_Orders.order_id",
            "Customer_Orders.order_date",
            "Order_Items.order_quantity"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "quantity of any product larger than 6",
            "more than 3 products"
        ]
    },
    {
        "tables": [
            "Customer_Orders",
            "Order_Items"
        ],
        "columns": [
            "Customer_Orders.order_id",
            "Customer_Orders.order_date",
            "Order_Items.order_id",
            "Order_Items.order_quantity"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "quantity greater than 6",
            "consisting of more than 3 products"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Building_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Building_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Name",
            "building.Number_of_Stories"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ascending order",
            "number of stories"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Name",
            "building.Number_of_Stories"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sorted by the number of stories of each building in ascending order"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Address",
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "addresses of buildings",
            "descending order of building completion year"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Address",
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "Sort the buildings in descending order of building completion year",
            "Return the building addresses"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Number_of_Stories",
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "buildings not completed in 1980"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Number_of_Stories",
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "=",
            "MAX"
        ],
        "conditions": [
            "buildings not completed in 1980"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Population"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Population"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ascending alphabetical order"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Capital",
            "region.Area"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "area bigger than 10000"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Capital",
            "region.Area"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "area is larger than 10000"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Capital",
            "region.Population"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "region with the largest population"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Name",
            "region.Capital",
            "region.Population"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "region has the largest population",
            "capital of the region"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Name",
            "region.Area"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "regions with the top 5 largest areas"
        ]
    },
    {
        "tables": [
            "region"
        ],
        "columns": [
            "region.Name",
            "region.Area"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "5 largest regions",
            "in terms of area"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Name",
            "region.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Name",
            "region.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "return the name of the building",
            "return the name of the region it belongs to"
        ]
    },
    {
        "tables": [
            "region",
            "building"
        ],
        "columns": [
            "region.Region_ID",
            "region.Name",
            "building.Region_ID",
            "building.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than one building"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Region_ID",
            "region.Region_ID",
            "region.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "regions have more than one building"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Region_ID",
            "region.Region_ID",
            "region.Capital"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "region that has the most buildings"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Region_ID",
            "region.Region_ID",
            "region.Capital"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "region has the largest number of buildings",
            "capital of the region"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Address",
            "region.Capital"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Address",
            "region.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "return the address of the building",
            "return the name of the region it belongs to"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Number_of_Stories",
            "region.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "region name is 'Abruzzo'"
        ]
    },
    {
        "tables": [
            "building",
            "region"
        ],
        "columns": [
            "building.Number_of_Stories",
            "region.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "region named 'Abruzzo'"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Completed_Year",
            "building.Building_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "return the year",
            "return the number of buildings completed"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "region",
            "building"
        ],
        "columns": [
            "region.Region_ID",
            "region.Name",
            "building.Region_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "regions do not have any buildings"
        ]
    },
    {
        "tables": [
            "region",
            "building"
        ],
        "columns": [
            "region.Region_ID",
            "region.Name",
            "building.Region_ID",
            "building.Name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "there are no buildings"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "buildings with more than 20 stories",
            "buildings with less than 15 stories"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "buildings with more than 20 stories",
            "buildings with less than 15 stories"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Address"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Address"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Number_of_Stories",
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "completed years of buildings",
            "descending order",
            "number of stories"
        ]
    },
    {
        "tables": [
            "building"
        ],
        "columns": [
            "building.Number_of_Stories",
            "building.Completed_Year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "Sort buildings in descending order of the number of stories",
            "Return their completion years"
        ]
    },
    {
        "tables": [
            "Channels"
        ],
        "columns": [
            "Channels.Channel_Details"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Channels"
        ],
        "columns": [
            "Channels.Channel_Details"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Services"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Services"
        ],
        "columns": [
            "Services.Service_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Analytical_Layer"
        ],
        "columns": [
            "Analytical_Layer.Analytical_Layer_Type_Code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Analytical_Layer"
        ],
        "columns": [
            "Analytical_Layer.Analytical_Layer_Type_Code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Customers_and_Services",
            "Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Services.Service_ID",
            "Services.Service_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer with details \"Hardy Kutch\""
        ]
    },
    {
        "tables": [
            "Customers",
            "Customers_and_Services",
            "Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Services.Service_ID",
            "Services.Service_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer with details 'Hardy Kutch'"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Service_ID",
            "Customers_and_Services.Customers_and_Services_Details"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "services used more than 3 times"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "used by customers by more than 3 times"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Customers_and_Services.Customers_and_Services_Details"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "used services the most times"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "COUNT",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "largest count of used services"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "used the most types of services"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "used the most types of services"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "has never used any services"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "INTERSECT",
            "DISTINCT"
        ],
        "conditions": [
            "never used any services"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "used the least-used service"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "used the least commonly-used service",
            "distinct customer details"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_Details",
            "Services.Service_Details",
            "Customers_and_Services.Customers_and_Services_Details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customers_and_Services_ID",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Customers_and_Services.Customers_and_Services_Details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.Customer_Details"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name contains 'Kutch'"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.Customer_Details"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "have \"Kutch\" in part of their details"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers",
            "Customers_and_Services",
            "Customer_Interactions"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Customer_Interactions.Customer_ID",
            "Customer_Interactions.Service_ID",
            "Customer_Interactions.Services_and_Channels_Details"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "used by customer 'Hardy Kutch'",
            "rated as 'good' in one of the customer interactions"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers",
            "Customers_and_Services",
            "Customer_Interactions"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Customer_Interactions.Customer_ID",
            "Customer_Interactions.Service_ID",
            "Customer_Interactions.Status_Code",
            "Customer_Interactions.Services_and_Channels_Details"
        ],
        "sql_keywords": [
            "UNION",
            "LIKE",
            "="
        ],
        "conditions": [
            "customer 'Hardy Kutch'",
            "rated as 'good' in a customer interaction"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers",
            "Customers_and_Services",
            "Customer_Interactions"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Customer_Interactions.Customer_ID",
            "Customer_Interactions.Service_ID",
            "Customer_Interactions.Status_Code",
            "Customer_Interactions.Services_and_Channels_Details"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "customer 'Hardy Kutch'",
            "rated 'bad' in one of the customer interactions"
        ]
    },
    {
        "tables": [
            "Customers",
            "Services",
            "Customers_and_Services",
            "Customer_Interactions"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Customer_ID",
            "Customers_and_Services.Service_ID",
            "Customer_Interactions.Customer_ID",
            "Customer_Interactions.Service_ID",
            "Customer_Interactions.Status_Code",
            "Customer_Interactions.Services_and_Channels_Details"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "used by the customer 'Hardy Kutch'",
            "rated as 'bad' in a customer interaction"
        ]
    },
    {
        "tables": [
            "Services",
            "Channels",
            "Customer_Interactions"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Channels.Channel_ID",
            "Channels.Channel_Details",
            "Customer_Interactions.Channel_ID",
            "Customer_Interactions.Service_ID"
        ],
        "sql_keywords": [
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "interacted with '15 ij'",
            "channel details"
        ]
    },
    {
        "tables": [
            "Services",
            "Channels",
            "Customer_Interactions"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Channels.Channel_ID",
            "Channels.Channel_Details",
            "Customer_Interactions.Channel_ID",
            "Customer_Interactions.Service_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "interacted with the channel with detail '15 ij'"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Interactions"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customer_Interactions.Channel_ID",
            "Customer_Interactions.Customer_ID",
            "Customer_Interactions.Service_ID",
            "Customer_Interactions.Status_Code",
            "Customer_Interactions.Services_and_Channels_Details"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "interaction with status 'Stuck'",
            "service and channel detail 'bad'"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Interactions"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customer_Interactions.Status_Code",
            "Customer_Interactions.Services_and_Channels_Details"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "status 'Stuck'",
            "service and channel detail 'bad'"
        ]
    },
    {
        "tables": [
            "Integration_Platform"
        ],
        "columns": [
            "Integration_Platform.Integration_Platform_Details"
        ],
        "sql_keywords": [
            "COUNT",
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Integration_Platform"
        ],
        "columns": [
            "Integration_Platform.Integration_Platform_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "details contain 'Success'"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Interactions",
            "Integration_Platform"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customer_Interactions.Customer_Interaction_ID",
            "Customer_Interactions.Customer_ID",
            "Integration_Platform.Integration_Platform_ID",
            "Integration_Platform.Customer_Interaction_ID",
            "Integration_Platform.Integration_Platform_Details"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "associated with a failed integration platform"
        ]
    },
    {
        "tables": [
            "Customers",
            "Customer_Interactions",
            "Integration_Platform"
        ],
        "columns": [
            "Customers.Customer_ID",
            "Customers.Customer_Details",
            "Customer_Interactions.Customer_Interaction_ID",
            "Customer_Interactions.Customer_ID",
            "Integration_Platform.Customer_Interaction_ID",
            "Integration_Platform.Integration_Platform_Details"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "integration platform details \"Fail\" in interactions"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "service ( s ) has never been used by any customer"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Service_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no customer has ever used"
        ]
    },
    {
        "tables": [
            "Analytical_Layer"
        ],
        "columns": [
            "Analytical_Layer.Analytical_Layer_Type_Code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Analytical_Layer"
        ],
        "columns": [
            "Analytical_Layer.Analytical_Layer_Type_Code"
        ],
        "sql_keywords": [
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "analytical layer type code",
            "number of times used"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Services.Service_ID",
            "Services.Service_Details",
            "Customers_and_Services.Service_ID",
            "Customers_and_Services.Customers_and_Services_Details"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "services marked as 'unsatisfied'"
        ]
    },
    {
        "tables": [
            "Services",
            "Customers_and_Services"
        ],
        "columns": [
            "Services.Service_Details",
            "Customers_and_Services.Customers_and_Services_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rated as 'unsatisfied'",
            "service_details"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Model_year"
        ],
        "sql_keywords": [
            "ORDER BY DESC"
        ],
        "conditions": [
            "descending order of model year"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Model_year"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ordered by model year descending"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Type_of_powertrain",
            "Vehicles.Annual_fuel_cost"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "model year 2013",
            "model year 2014"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Type_of_powertrain",
            "Vehicles.Annual_fuel_cost"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "model years in either 2013 2014"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain",
            "Vehicles.Model_year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "vehicles from 2014",
            "vehicles from 2013"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "vehicles made in 2013",
            "vehicles made in 2014"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Annual_fuel_cost"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Annual_fuel_cost"
        ],
        "sql_keywords": [
            "MIN",
            "MAX",
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Model_year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "city fuel economy rate less than or equal to highway fuel economy rate"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Model_year",
            "Vehicles.City_fuel_economy_rate",
            "Vehicles.Highway_fuel_economy_rate"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "city fuel economy rate less than or equal to its highway fuel economy rate"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain",
            "Vehicles.Annual_fuel_cost"
        ],
        "sql_keywords": [
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "type of powertrain with at least two vehicles",
            "average annual fuel cost for vehicles in each such type"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain",
            "Vehicles.Annual_fuel_cost"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "types of powertrains",
            "two or more vehicles",
            "average annual fuel costs"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.name",
            "Customers.age",
            "Customers.membership_credit"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.name",
            "Customers.age",
            "Customers.membership_credit"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names",
            "ages",
            "membership credits"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.name",
            "Customers.age",
            "Customers.membership_credit"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "maximum membership credit"
        ]
    },
    {
        "tables": [
            "Customers"
        ],
        "columns": [
            "Customers.name",
            "Customers.age",
            "Customers.membership_credit"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most membership credit"
        ]
    },
    {
        "tables": [
            "Customers",
            "Discount"
        ],
        "columns": [
            "Customers.age",
            "Customers.membership_credit",
            "Discount.membership_credit"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": [
            "customers with a membership credit above the average"
        ]
    },
    {
        "tables": [
            "Customers",
            "Discount"
        ],
        "columns": [
            "Customers.id",
            "Customers.name",
            "Customers.age",
            "Customers.membership_credit",
            "Discount.membership_credit"
        ],
        "sql_keywords": [
            "AVG",
            "JOIN"
        ],
        "conditions": [
            "customers have membership above the average across all customers"
        ]
    },
    {
        "tables": [
            "Discount"
        ],
        "columns": [
            "Discount.id",
            "Discount.name",
            "Discount.membership_credit"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Discount"
        ],
        "columns": [
            "Discount.id",
            "Discount.name",
            "Discount.membership_credit"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Renting_history.total_hours"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Renting_history.total_hours"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Renting_history.vehicles_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no renting history"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.id",
            "Vehicles.name",
            "Renting_history.vehicles_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "vehicles have never been rented"
        ]
    },
    {
        "tables": [
            "Customers",
            "Renting_history"
        ],
        "columns": [
            "Customers.name",
            "Renting_history.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least two renting history records"
        ]
    },
    {
        "tables": [
            "Customers",
            "Renting_history"
        ],
        "columns": [
            "Customers.name",
            "Renting_history.customer_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "two or more records of rental history"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Model_year",
            "Renting_history.vehicles_id"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most number of renting history records"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Model_year",
            "Renting_history.vehicles_id"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "vehicle has been rented the most times"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Renting_history.total_hours"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "descending order of total hours of renting"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Renting_history.total_hours"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "sorted descending by total hours of renting"
        ]
    },
    {
        "tables": [
            "Discount",
            "Renting_history"
        ],
        "columns": [
            "Discount.name",
            "Renting_history.discount_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most number of renting history records"
        ]
    },
    {
        "tables": [
            "Discount",
            "Renting_history"
        ],
        "columns": [
            "Discount.name",
            "Renting_history.discount_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "most rental history records"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Type_of_powertrain",
            "Renting_history.total_hours"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rented for more than 30 total hours"
        ]
    },
    {
        "tables": [
            "Vehicles",
            "Renting_history"
        ],
        "columns": [
            "Vehicles.name",
            "Vehicles.Type_of_powertrain",
            "Renting_history.total_hours"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "more than 30 total rental hours"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain",
            "Vehicles.City_fuel_economy_rate",
            "Vehicles.Highway_fuel_economy_rate"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "different powertrain types"
        ]
    },
    {
        "tables": [
            "Vehicles"
        ],
        "columns": [
            "Vehicles.Type_of_powertrain",
            "Vehicles.City_fuel_economy_rate",
            "Vehicles.Highway_fuel_economy_rate"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average city fuel economy rate",
            "average highway fuel economy rate",
            "different types of powertrains"
        ]
    },
    {
        "tables": [
            "Student_Loans"
        ],
        "columns": [
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Student_Loans"
        ],
        "columns": [
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Classes",
            "Detention"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Classes.student_id",
            "Detention.student_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "take 2 or more classes",
            "have less than 2 detentions"
        ]
    },
    {
        "tables": [
            "Students",
            "Classes",
            "Detention"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Classes.student_id",
            "Detention.student_id"
        ],
        "sql_keywords": [
            "INTERSECT",
            "UNION"
        ],
        "conditions": [
            "took two or more classes",
            "have less than two detentions"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.class_id",
            "Classes.student_id",
            "Classes.teacher_id",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "LIKE",
            "NOT LIKE"
        ],
        "conditions": [
            "teachers who teach some class whose detail has the substring 'data'",
            "do not teach a class whose detail contains the prefix 'net'"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Teachers.teacher_details",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "LIKE",
            "NOT LIKE"
        ],
        "conditions": [
            "class has the substring 'data' in its detail",
            "do not teach a class that has prefix 'net' in its detail"
        ]
    },
    {
        "tables": [
            "Students",
            "Detention",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Detention.student_id",
            "Student_Loans.student_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "NOT IN"
        ],
        "conditions": [
            "never had a detention",
            "never had a student loan"
        ]
    },
    {
        "tables": [
            "Students",
            "Detention",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Detention.student_id",
            "Student_Loans.student_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "NOT IN",
            "JOIN"
        ],
        "conditions": [
            "never had a detention",
            "never had a student loan"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Loans",
            "Achievements"
        ],
        "columns": [
            "Students.student_id",
            "Student_Loans.student_id",
            "Student_Loans.date_of_loan",
            "Student_Loans.amount_of_loan",
            "Achievements.student_id",
            "Achievements.achievement_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "loan amounts",
            "loan dates",
            "students who have at least 2 achievements"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Loans",
            "Achievements"
        ],
        "columns": [
            "Students.student_id",
            "Student_Loans.date_of_loan",
            "Student_Loans.amount_of_loan",
            "Achievements.student_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "students who have two or more achievements"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.class_id",
            "Classes.teacher_id"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "teaches the most courses"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.teacher_id",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "teaches the largest number of courses"
        ]
    },
    {
        "tables": [
            "Detention",
            "Ref_Detention_Type"
        ],
        "columns": [
            "Detention.detention_type_code",
            "Ref_Detention_Type.detention_type_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Detention",
            "Ref_Detention_Type"
        ],
        "columns": [
            "Detention.detention_type_code",
            "Ref_Detention_Type.detention_type_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Students_Addresses",
            "Ref_Address_Types"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Students_Addresses.address_type_code",
            "Ref_Address_Types.address_type_description"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Students_Addresses",
            "Ref_Address_Types"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Students_Addresses.address_type_code",
            "Ref_Address_Types.address_type_description"
        ],
        "sql_keywords": [
            "JOIN",
            "DISTINCT"
        ],
        "conditions": [
            "personal details",
            "address type descriptions"
        ]
    },
    {
        "tables": [
            "Students",
            "Addresses",
            "Students_Addresses"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Addresses.address_details",
            "Students_Addresses.address_id",
            "Students_Addresses.student_id"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "address details",
            "biographical information"
        ]
    },
    {
        "tables": [
            "Students",
            "Addresses",
            "Students_Addresses"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Addresses.address_id",
            "Addresses.address_details",
            "Students_Addresses.address_id",
            "Students_Addresses.student_id"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "address details",
            "biographical information"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Transcripts.student_id",
            "Transcripts.date_of_transcript"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "biographical data",
            "date of the transcript",
            "students"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Transcripts.student_id",
            "Transcripts.date_of_transcript"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "biographical data",
            "date of transcript issuance"
        ]
    },
    {
        "tables": [
            "Students",
            "Behaviour_Monitoring"
        ],
        "columns": [
            "Students.student_id",
            "Behaviour_Monitoring.behaviour_monitoring_details"
        ],
        "sql_keywords": [
            "COUNT",
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "got the most common result",
            "behavioral monitoring details"
        ]
    },
    {
        "tables": [
            "Behaviour_Monitoring"
        ],
        "columns": [
            "Behaviour_Monitoring.behaviour_monitoring_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Behaviour_Monitoring"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Behaviour_Monitoring.behaviour_monitoring_details"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "got the most common result",
            "got a result obtained by 3 students in behaviour monitoring"
        ]
    },
    {
        "tables": [
            "Students",
            "Behaviour_Monitoring"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Behaviour_Monitoring.student_id",
            "Behaviour_Monitoring.behaviour_monitoring_details"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "got the most common result",
            "got a result that is obtained by 3 students in behaviour monitoring"
        ]
    },
    {
        "tables": [
            "Students",
            "Behaviour_Monitoring"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Behaviour_Monitoring.student_id",
            "Behaviour_Monitoring.behaviour_monitoring_details"
        ],
        "sql_keywords": [
            "INTERSECT",
            "DISTINCT"
        ],
        "conditions": [
            "students only got the most common result",
            "all behaviour monitoring details",
            "list the students' biographical information"
        ]
    },
    {
        "tables": [
            "Students",
            "Behaviour_Monitoring"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Behaviour_Monitoring.student_id",
            "Behaviour_Monitoring.behaviour_monitoring_details"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "got the most common result for their behaviour monitoring details"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Events"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Student_Events.event_date"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "students have gone through any event",
            "list the students' biographical data",
            "event date"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Events"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Student_Events.student_id",
            "Student_Events.event_date"
        ],
        "sql_keywords": [
            "JOIN",
            "ON"
        ],
        "conditions": [
            "participated in any events"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Events",
            "Ref_Event_Types"
        ],
        "columns": [
            "Students.student_id",
            "Student_Events.event_type_code",
            "Ref_Event_Types.event_type_description"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "students have joined",
            "most common type of event",
            "number",
            "event type",
            "description"
        ]
    },
    {
        "tables": [
            "Student_Events",
            "Ref_Event_Types"
        ],
        "columns": [
            "Student_Events.event_type_code",
            "Ref_Event_Types.event_type_code",
            "Ref_Event_Types.event_type_description"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "type of event",
            "most students joined",
            "number of students",
            "event type code",
            "event type description"
        ]
    },
    {
        "tables": [
            "Achievements",
            "Ref_Achievement_Type"
        ],
        "columns": [
            "Achievements.achievement_details",
            "Ref_Achievement_Type.achievement_type_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "achievement detail",
            "type description"
        ]
    },
    {
        "tables": [
            "Achievements",
            "Ref_Achievement_Type"
        ],
        "columns": [
            "Achievements.achievement_details",
            "Ref_Achievement_Type.achievement_type_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "achievement detail",
            "type description"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes",
            "Students",
            "Achievements"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Classes.student_id",
            "Classes.teacher_id",
            "Students.student_id",
            "Achievements.student_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "teachers have taught a student",
            "student has not won any achievements"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes",
            "Students",
            "Achievements"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Classes.student_id",
            "Classes.teacher_id",
            "Students.student_id",
            "Achievements.student_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "teachers who have taught students",
            "students who have never won an achievement"
        ]
    },
    {
        "tables": [
            "Transcripts"
        ],
        "columns": [
            "Transcripts.date_of_transcript",
            "Transcripts.transcript_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Transcripts"
        ],
        "columns": [
            "Transcripts.date_of_transcript",
            "Transcripts.transcript_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "date",
            "detail"
        ]
    },
    {
        "tables": [
            "Achievements",
            "Ref_Achievement_Type"
        ],
        "columns": [
            "Achievements.achievement_type_code",
            "Achievements.achievement_details",
            "Achievements.date_achievement",
            "Ref_Achievement_Type.achievement_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "achievement type code",
            "achievement details",
            "date of the achievements"
        ]
    },
    {
        "tables": [
            "Ref_Achievement_Type",
            "Achievements"
        ],
        "columns": [
            "Ref_Achievement_Type.achievement_type_code",
            "Achievements.achievement_details",
            "Achievements.date_achievement"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "type code",
            "details",
            "date"
        ]
    },
    {
        "tables": [
            "Detention"
        ],
        "columns": [
            "Detention.datetime_detention_start",
            "Detention.datetime_detention_end"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "detention start time",
            "detention end time"
        ]
    },
    {
        "tables": [
            "Detention"
        ],
        "columns": [
            "Detention.datetime_detention_start",
            "Detention.datetime_detention_end"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "starting time of each detention record",
            "ending time of each detention record"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.bio_data",
            "Students.student_details"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "details include the substring 'Suite'"
        ]
    },
    {
        "tables": [
            "Students"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "'Suite' as a substring in their details"
        ]
    },
    {
        "tables": [
            "Students",
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Students.student_details",
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.class_id",
            "Classes.student_id",
            "Classes.teacher_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "teachers and students are in the same class"
        ]
    },
    {
        "tables": [
            "Students",
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Students.student_details",
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.student_id",
            "Classes.teacher_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "teachers and students in the same class",
            "pairs of their details"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Classes.class_id",
            "Classes.teacher_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "teachers teach at most",
            "teacher who teaches the most"
        ]
    },
    {
        "tables": [
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Teachers.teacher_id",
            "Classes.teacher_id",
            "Classes.class_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "teacher teaches the most courses",
            "id of the teacher",
            "number of courses he or she teaches"
        ]
    },
    {
        "tables": [
            "Students",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Classes.student_id",
            "Classes.class_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "students take at most a certain number of courses",
            "find the id of the student who takes the most courses"
        ]
    },
    {
        "tables": [
            "Students",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Classes.student_id",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "student is taking the most courses",
            "id of the student",
            "number of courses he or she is taking"
        ]
    },
    {
        "tables": [
            "Students",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Students.student_details",
            "Classes.student_id",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "students take 2 courses"
        ]
    },
    {
        "tables": [
            "Students",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Students.student_details",
            "Classes.student_id",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "students who take 2 courses"
        ]
    },
    {
        "tables": [
            "Ref_Detention_Type",
            "Detention"
        ],
        "columns": [
            "Ref_Detention_Type.detention_type_code",
            "Ref_Detention_Type.detention_type_description",
            "Detention.detention_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Ref_Detention_Type",
            "Detention"
        ],
        "columns": [
            "Ref_Detention_Type.detention_type_code",
            "Ref_Detention_Type.detention_type_description",
            "Detention.detention_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "least common detention type"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN",
            "AVG",
            ">"
        ],
        "conditions": [
            "student loan more than the average amount",
            "students' biographical data",
            "details"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Students.student_details",
            "Student_Loans.student_id",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN",
            "AVG",
            "HAVING"
        ],
        "conditions": [
            "student loan is above the average amount"
        ]
    },
    {
        "tables": [
            "Student_Loans"
        ],
        "columns": [
            "Student_Loans.date_of_loan"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "earliest date of loan"
        ]
    },
    {
        "tables": [
            "Student_Loans"
        ],
        "columns": [
            "Student_Loans.date_of_loan"
        ],
        "sql_keywords": [
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Student_Loans.student_id",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "MIN",
            "JOIN"
        ],
        "conditions": [
            "loan with the minimum value",
            "student's biographical information"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Student_Loans.student_id",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "smallest student loan"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Transcripts.date_of_transcript",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "transcript issued",
            "student",
            "loan of maximum value"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Transcripts.date_of_transcript",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "student with the largest amount of loan"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts",
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Transcripts.student_id",
            "Transcripts.date_of_transcript",
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.student_id",
            "Classes.teacher_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "taught the student with the earliest transcript issuance"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts",
            "Teachers",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Transcripts.student_id",
            "Transcripts.date_of_transcript",
            "Teachers.teacher_id",
            "Teachers.teacher_details",
            "Classes.student_id",
            "Classes.teacher_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "taught the student with the earliest transcript issuance"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Student_Loans.amount_of_loan"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": [
            "find the student id",
            "find the total amount of loan"
        ]
    },
    {
        "tables": [
            "Students",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Classes.class_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Classes"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Classes.student_id",
            "Classes.class_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "student id",
            "student biographical data",
            "number of courses"
        ]
    },
    {
        "tables": [
            "Students",
            "Detention"
        ],
        "columns": [
            "Students.student_id",
            "Detention.student_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "students have gone through a detention"
        ]
    },
    {
        "tables": [
            "Students",
            "Detention"
        ],
        "columns": [
            "Students.student_id",
            "Detention.student_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "have a detention record"
        ]
    },
    {
        "tables": [
            "Ref_Address_Types",
            "Students_Addresses"
        ],
        "columns": [
            "Ref_Address_Types.address_type_code",
            "Ref_Address_Types.address_type_description",
            "Students_Addresses.address_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most common student address type"
        ]
    },
    {
        "tables": [
            "Ref_Address_Types",
            "Students_Addresses"
        ],
        "columns": [
            "Ref_Address_Types.address_type_code",
            "Ref_Address_Types.address_type_description",
            "Students_Addresses.address_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Students",
            "Student_Events",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Student_Events.student_id",
            "Student_Loans.student_id"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "students who have gone through an event",
            "students who do not have a student loan",
            "students' biographical data"
        ]
    },
    {
        "tables": [
            "Students",
            "Student_Events",
            "Student_Loans"
        ],
        "columns": [
            "Students.student_id",
            "Students.bio_data",
            "Student_Events.student_id",
            "Student_Loans.student_id"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "have an event record",
            "do not have a student loan"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts",
            "Students_Addresses"
        ],
        "columns": [
            "Students.student_id",
            "Transcripts.student_id",
            "Transcripts.transcript_id",
            "Students_Addresses.student_id",
            "Students_Addresses.date_from",
            "Students_Addresses.date_to"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "students have 2 transcripts"
        ]
    },
    {
        "tables": [
            "Students",
            "Transcripts",
            "Students_Addresses"
        ],
        "columns": [
            "Students.student_id",
            "Transcripts.student_id",
            "Students_Addresses.student_id",
            "Students_Addresses.date_from",
            "Students_Addresses.date_to"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "start time",
            "end time",
            "receive 2 transcripts"
        ]
    },
    {
        "tables": [
            "Detention"
        ],
        "columns": [
            "Detention.datetime_detention_start"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Detention"
        ],
        "columns": [
            "Detention.datetime_detention_start"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author"
        ],
        "columns": [
            "Author.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author"
        ],
        "columns": [
            "Author.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names of all the authors"
        ]
    },
    {
        "tables": [
            "Client"
        ],
        "columns": [
            "Client.Name",
            "Client.Address"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client"
        ],
        "columns": [
            "Client.Name",
            "Client.Address"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.ISBN",
            "Book.Title",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.ISBN",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "titles",
            "ISBNs",
            "sale prices"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.ISBN",
            "Book.Title",
            "Book.Author",
            "Book.PurchasePrice",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.ISBN"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author"
        ],
        "columns": [
            "Author.idAuthor",
            "Author.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author"
        ],
        "columns": [
            "Author.idAuthor"
        ],
        "sql_keywords": [
            "COUNT",
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client"
        ],
        "columns": [
            "Client.IdClient"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client"
        ],
        "columns": [
            "Client.IdClient"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client"
        ],
        "columns": [
            "Client.Name",
            "Client.Address"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "in alphabetical order by their names"
        ]
    },
    {
        "tables": [
            "Client"
        ],
        "columns": [
            "Client.Name",
            "Client.Address"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names",
            "addresses",
            "ordered alphabetically by name"
        ]
    },
    {
        "tables": [
            "Book",
            "Author",
            "Author_Book"
        ],
        "columns": [
            "Book.Title",
            "Author.Name",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book",
            "Author",
            "Author_Book"
        ],
        "columns": [
            "Book.Title",
            "Author.Name",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names of all books",
            "corresponding authors"
        ]
    },
    {
        "tables": [
            "Orders",
            "Client"
        ],
        "columns": [
            "Orders.IdOrder",
            "Client.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Orders",
            "Client"
        ],
        "columns": [
            "Orders.IdOrder",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "ids of all orders",
            "corresponding client names"
        ]
    },
    {
        "tables": [
            "Author",
            "Book",
            "Author_Book"
        ],
        "columns": [
            "Author.Name",
            "Author.idAuthor",
            "Book.ISBN",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Book",
            "Author_Book"
        ],
        "columns": [
            "Author.idAuthor",
            "Author.Name",
            "Book.ISBN",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Books_Order",
            "Orders",
            "Book"
        ],
        "columns": [
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Books_Order.amount",
            "Orders.IdOrder",
            "Book.ISBN"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },

    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "all isbns for each book",
            "how many times each book has been ordered"
        ]
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Books_Order.ISBN",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Books_Order.ISBN",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "DISTINCT",
            "SUM"
        ],
        "conditions": [
            "isbns for all books",
            "total amount ordered for each"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Orders.IdOrder",
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most number of orders"
        ]
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "book",
            "ordered the greatest number of times"
        ]
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.Title",
            "Book.PurchasePrice",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "book title",
            "purchase price",
            "greatest amount in orders"
        ]
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.Title",
            "Book.PurchasePrice",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "title",
            "purchase price",
            "highest total order amount"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Orders.IdOrder",
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "books have been ordered"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Orders.IdOrder",
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "titles of books",
            "ordered in the past"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "ordered at least once"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.Name",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "made an order"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.Name",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdClient",
            "Orders.IdOrder"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most number of orders"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "made the most orders"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most total amount of books ordered"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "ordered the greatest total amount of books"
        ]
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "books have no orders"
        ]
    },
    {
        "tables": [
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "titles of books",
            "never been ordered"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "clients who have not made orders"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdClient"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "never made an order"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum sale price",
            "minimum sale price"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum sale price",
            "minimum sale price"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.PurchasePrice",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.PurchasePrice",
            "Book.SalePrice"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.SalePrice",
            "Book.PurchasePrice"
        ],
        "sql_keywords": [
            "MAX",
            "-"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.PurchasePrice",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sale prices higher than the average"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sale prices above the average sale price across all books"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "book titles",
            "lowest sale price"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sale price equal to the lowest sale price across all books"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.PurchasePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest purchase prices"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.PurchasePrice"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest purchase price across all books"
        ]
    },
    {
        "tables": [
            "Book",
            "Author",
            "Author_Book"
        ],
        "columns": [
            "Book.SalePrice",
            "Author.Name",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "books written by George Orwell"
        ]
    },
    {
        "tables": [
            "Book",
            "Author",
            "Author_Book"
        ],
        "columns": [
            "Book.ISBN",
            "Book.SalePrice",
            "Author.idAuthor",
            "Author.Name",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "authored by George Orwell"
        ]
    },
    {
        "tables": [
            "Book",
            "Author_Book",
            "Author"
        ],
        "columns": [
            "Book.SalePrice",
            "Author_Book.ISBN",
            "Author_Book.Author",
            "Author.idAuthor",
            "Author.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "written by Plato"
        ]
    },
    {
        "tables": [
            "Author",
            "Book",
            "Author_Book"
        ],
        "columns": [
            "Author.idAuthor",
            "Author.Name",
            "Book.ISBN",
            "Book.Title",
            "Book.Author",
            "Book.SalePrice",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "authored by Plato"
        ]
    },
    {
        "tables": [
            "Book",
            "Author",
            "Author_Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice",
            "Author.Name",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "written by George Orwell",
            "has the lowest sale price"
        ]
    },
    {
        "tables": [
            "Book",
            "Author",
            "Author_Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice",
            "Author.Name",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "title of book",
            "George Orwell",
            "lowest saleprice"
        ]
    },
    {
        "tables": [
            "Book"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "written by Plato",
            "price lower than the average sale price of all books"
        ]
    },
    {
        "tables": [
            "Book",
            "Author"
        ],
        "columns": [
            "Book.Title",
            "Book.SalePrice",
            "Author.Name"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "authored by Plato",
            "sale price lower than the average sale price across all books"
        ]
    },
    {
        "tables": [
            "Book",
            "Author_Book",
            "Author"
        ],
        "columns": [
            "Book.Title",
            "Book.ISBN",
            "Author_Book.ISBN",
            "Author_Book.Author",
            "Author.idAuthor",
            "Author.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Book",
            "Author_Book",
            "Author"
        ],
        "columns": [
            "Book.Title",
            "Book.ISBN",
            "Author_Book.ISBN",
            "Author_Book.Author",
            "Author.idAuthor",
            "Author.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "book titled Pride and Prejudice"
        ]
    },
    {
        "tables": [
            "Author",
            "Book",
            "Author_Book"
        ],
        "columns": [
            "Author.idAuthor",
            "Author.Name",
            "Book.ISBN",
            "Book.Title",
            "Book.Author",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "author's name contains the string 'Plato'"
        ]
    },
    {
        "tables": [
            "Author",
            "Book",
            "Author_Book"
        ],
        "columns": [
            "Author.Name",
            "Book.Title",
            "Author_Book.ISBN",
            "Author_Book.Author"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "author name contains Plato"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "orders for 'Pride and Prejudice'"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Orders.IdOrder",
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Books_Order.amount"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "number of orders received",
            "Pride and Prejudice"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Orders.IdOrder",
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "orders including 'Pride and Prejudice'",
            "orders including 'The Little Prince'"
        ]
    },
    {
        "tables": [
            "Orders",
            "Book",
            "Books_Order"
        ],
        "columns": [
            "Orders.IdOrder",
            "Book.ISBN",
            "Book.Title",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "include Pride and Prejudice",
            "include The Little Prince"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "client Peter Doe",
            "client James Smith"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.ISBN",
            "Books_Order.IdOrder"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "clients named Peter Doe",
            "clients named James Smith"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order",
            "Book"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Book.ISBN",
            "Book.Title"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "ordered by client Peter Doe",
            "not ordered by client James Smith"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order",
            "Book"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Book.ISBN",
            "Book.Title"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "client Peter Doe ordered",
            "client James Smith did not order"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order",
            "Book"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Book.ISBN",
            "Book.Title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "orders for 'Pride and Prejudice'"
        ]
    },
    {
        "tables": [
            "Client",
            "Orders",
            "Books_Order",
            "Book"
        ],
        "columns": [
            "Client.IdClient",
            "Client.Name",
            "Orders.IdOrder",
            "Orders.IdClient",
            "Books_Order.ISBN",
            "Books_Order.IdOrder",
            "Book.ISBN",
            "Book.Title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "ordered Pride and Prejudice"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Book_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "titles of books",
            "ascending alphabetical order"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Pages"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "titles of books",
            "descending order of pages"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Type",
            "book.Release"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "types of books",
            "release dates of books"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Chapters"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum number of chapters",
            "minimum number of chapters"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Type"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "titles of books",
            "not 'Poet'"
        ]
    },
    {
        "tables": [
            "review"
        ],
        "columns": [
            "review.Rating"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Title",
            "review.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "titles",
            "ratings"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Book_ID",
            "book.Chapters",
            "review.Book_ID",
            "review.Rating"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "largest number of chapters"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Book_ID",
            "book.Pages",
            "review.Rank"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "smallest number of pages"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Title",
            "review.Rank"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "highest rank in the review"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Book_ID",
            "book.Type",
            "review.Book_ID",
            "review.Readers_in_Million"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "AVG"
        ],
        "conditions": [
            "type \"Novel\""
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Type",
            "book.Book_ID"
        ],
        "sql_keywords": [
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "each book type",
            "number of books of that type"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Type"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Type"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least three books belonging to"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Title",
            "review.Rating"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY"
        ],
        "conditions": [
            "titles of books",
            "ascending order",
            "ratings in review"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Title",
            "book.Audio",
            "review.Readers_in_Million"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY"
        ],
        "conditions": [
            "title",
            "audio length",
            "descending order of the number of readers"
        ]
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Book_ID",
            "review.Book_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "books do not have reviews"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Type",
            "book.Chapters"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "books with more than 75 chapters",
            "books with less than 50 chapters"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Type"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "book",
            "review"
        ],
        "columns": [
            "book.Book_ID",
            "book.Title",
            "book.Type",
            "review.Book_ID",
            "review.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "type of the books",
            "title of the books",
            "not rated"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Customer_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Customer_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Name",
            "customer.Level_of_Membership"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ascending order of level of membership"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Name",
            "customer.Level_of_Membership"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "level of membership in ascending order"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality",
            "customer.Card_Credit"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "nationalities",
            "card credits"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality",
            "customer.Card_Credit"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "nationality",
            "card credit"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Name",
            "customer.Nationality"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "nationality 'England'",
            "nationality 'Australia'"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Name",
            "customer.Nationality"
        ],
        "sql_keywords": [
            "=",
            "UNION"
        ],
        "conditions": [
            "nationality \"England\"",
            "nationality \"Australia\""
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Card_Credit",
            "customer.Level_of_Membership"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "membership level higher than 1"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Card_Credit",
            "customer.Level_of_Membership"
        ],
        "sql_keywords": [
            "AVG",
            "WHERE"
        ],
        "conditions": [
            "membership level is above 1"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Card_Credit",
            "customer.Level_of_Membership"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest membership level"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer.Nationality",
            "customer.Card_Credit",
            "customer.Level_of_Membership"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest membership level"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality",
            "customer.Customer_ID"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": [
            "customers associated with each nationality",
            "nationality",
            "number of customers"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality",
            "customer.Card_Credit"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "card credit smaller than 50",
            "card credit bigger than 75"
        ]
    },
    {
        "tables": [
            "customer"
        ],
        "columns": [
            "customer.Nationality",
            "customer.Card_Credit"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "customers with card credit above 50",
            "customers with card credit below 75"
        ]
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Name",
            "customer_order.Dish_Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Name",
            "customer_order.Dish_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer name",
            "dish name"
        ]
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Name",
            "customer_order.Dish_Name",
            "customer_order.Quantity"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Name",
            "customer_order.Dish_Name",
            "customer_order.Quantity"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY"
        ],
        "conditions": [
            "customer name",
            "dish name",
            "sort in descending order of the quantity of dish"
        ]
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer_order.Customer_ID",
            "customer_order.Quantity"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer_order.Quantity"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer_order.Customer_ID",
            "customer_order.Quantity"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "total quantity of order bigger than 1"
        ]
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer_order.Customer_ID",
            "customer_order.Quantity"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "total order quantity greater than 1"
        ]
    },
    {
        "tables": [
            "branch"
        ],
        "columns": [
            "branch.Manager"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "branch"
        ],
        "columns": [
            "branch.Manager"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer_order.Customer_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not have any order"
        ]
    },
    {
        "tables": [
            "customer",
            "customer_order"
        ],
        "columns": [
            "customer.Customer_ID",
            "customer.Name",
            "customer_order.Customer_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "customers do not have any order"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Member_ID",
            "member.Name",
            "member.Nationality",
            "member.Age"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Name",
            "member.Age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ascending order of age"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Name",
            "member.Nationality"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names",
            "nationalities"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Name",
            "member.Nationality"
        ],
        "sql_keywords": [
            "NOT LIKE"
        ],
        "conditions": [
            "nationality is not 'England'"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Name",
            "member.Age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age is 19",
            "age is 20"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Name",
            "member.Age"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "oldest member"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Nationality",
            "member.Member_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Nationality"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Nationality"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "nations have at least two members"
        ]
    },
    {
        "tables": [
            "member",
            "club",
            "club_leader"
        ],
        "columns": [
            "member.Name",
            "club.Club_Name",
            "club_leader.Year_Join"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "member",
            "club",
            "club_leader"
        ],
        "columns": [
            "member.Member_ID",
            "member.Name",
            "club.Club_ID",
            "club.Overall_Ranking",
            "club_leader.Club_ID",
            "club_leader.Member_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "overall ranking higher than 100"
        ]
    },
    {
        "tables": [
            "member",
            "club_leader"
        ],
        "columns": [
            "member.Member_ID",
            "member.Name",
            "club_leader.Club_ID",
            "club_leader.Member_ID",
            "club_leader.Year_Join"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "joined their club before 2018"
        ]
    },
    {
        "tables": [
            "club",
            "club_leader",
            "member"
        ],
        "columns": [
            "club.Club_Name",
            "club.Club_ID",
            "club_leader.Club_ID",
            "club_leader.Member_ID",
            "member.Member_ID",
            "member.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "club named 'Houston'"
        ]
    },
    {
        "tables": [
            "member",
            "club_leader"
        ],
        "columns": [
            "member.Member_ID",
            "member.Name",
            "club_leader.Member_ID"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "not club leaders"
        ]
    },
    {
        "tables": [
            "member"
        ],
        "columns": [
            "member.Nationality",
            "member.Age"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "members older than 22",
            "members younger than 19"
        ]
    },
    {
        "tables": [
            "member",
            "club_leader"
        ],
        "columns": [
            "member.Member_ID",
            "member.Age",
            "club_leader.Member_ID"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "club"
        ],
        "columns": [
            "club.Club_Name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "club name contains the string 'state'"
        ]
    },
    {
        "tables": [
            "Collection_Subsets",
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_Name",
            "Collections.Collection_ID",
            "Collection_Subset_Members.Collection_Subset_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collection_Subsets"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collection_Subsets"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_Name",
            "Collection_Subsets.Collecrtion_Subset_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name 'Top collection'"
        ]
    },
    {
        "tables": [
            "Collection_Subsets",
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_ID",
            "Collection_Subsets.Collection_Subset_Name",
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Collections.Collection_Description",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Collection_Subset_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "subset named 'Top collection'"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Subset_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "List all documents's subset",
            "List the subset's name"
        ]
    },
    {
        "tables": [
            "Document_Subsets"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Subsets"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name 'Best for 2000'"
        ]
    },
    {
        "tables": [
            "Document_Subsets"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subsets.Document_Subset_Details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document subsets named 'Best for 2000'"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID",
            "Document_Objects.Owner"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document owned by Marlin"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Owner"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "owned by Marlin"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Objects.Description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Description 'Braeden Collection'"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Objects.Description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document objects described as the 'Braeden Collection'"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "owned by 'Marlin'"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Marlin is the owner"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "unique description",
            "parent document"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Owner"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "owned by Marlin"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Owner"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "documents owned by Marlin"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "not the parent of other documents"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Documents_in_Collections",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID",
            "Documents_in_Collections.Document_Object_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "not parent documents"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "number of child documents for each parent document",
            "ids of the parent documents"
        ]
    },
    {
        "tables": [
            "Collections"
        ],
        "columns": [
            "Collections.Collection_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collections"
        ],
        "columns": [
            "Collections.Collection_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collections",
            "Document_Subsets"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Document_Subsets.Document_Subset_Name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections",
            "Document_Subsets",
            "Documents_in_Collections",
            "Document_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_Description",
            "Document_Subsets.Document_Subset_Name",
            "Documents_in_Collections.Collection_ID",
            "Document_Subset_Members.Document_Subset_ID"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "collection descriptions named as 'Best'"
        ]
    },
    {
        "tables": [
            "Collections"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collections.Parent_Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Nice"
        ]
    },
    {
        "tables": [
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collections.Parent_Collection_ID",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Related_Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Nice"
        ]
    },
    {
        "tables": [
            "Collections"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Parent_Collection_ID",
            "Collections.Collection_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "collection is not the parent of other collection"
        ]
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Parent_Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Collection_ID",
            "Collection_Subset_Members.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "not the parent of the other collections"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "document has more than one child",
            "list document id"
        ]
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than one child"
        ]
    },
    {
        "tables": [
            "Collections"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Parent_Collection_ID",
            "Collections.Collection_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collections.Parent_Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Owner",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "document related to document owned by Ransom",
            "list document id"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Owner",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document owned by Ransom"
        ]
    },
    {
        "tables": [
            "Collection_Subsets",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_ID",
            "Collection_Subsets.Collection_Subset_Name",
            "Collection_Subset_Members.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collection_Subsets",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_ID",
            "Collection_Subsets.Collection_Subset_Name",
            "Collection_Subset_Members.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Parent_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects",
            "Documents_in_Collections",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Documents_in_Collections.Document_Object_ID",
            "Document_Subset_Members.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "least number of documents"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "number of documents between 2 and 4"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "ids of the documents",
            "between 2 and 4 related documents",
            "how many related items"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Owner",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "documents owned by Braeden"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "documents related to ones owned by Braeden"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members",
            "Document_Subsets"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "document owned by Braeden"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Document_Subset_Members",
            "Document_Subsets"
        ],
        "columns": [
            "Document_Objects.Owner",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "documents owned by Braeden"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "subset id",
            "name",
            "number of different documents"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document subset named 'Best for 2000'"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document subset named 'Best for 2000'"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Subset_Members",
            "Document_Objects"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Related_Document_Object_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "different subsets of documents related to each document id",
            "name of the document subset",
            "id of the actual document"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Documents_in_Collections",
            "Collections"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Owner",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Collections.Collection_ID",
            "Collections.Collection_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document owned by 'Ransom '"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Documents_in_Collections",
            "Collections"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Document_Objects.Owner",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Collections.Collection_ID",
            "Collections.Collection_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "owned by 'Ransom'"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_ID",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects",
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_ID",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named 'Best'"
        ]
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Document_Objects",
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections",
            "Document_Objects"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Document_Objects.Document_Object_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "collection have most number of documents",
            "list collection name",
            "list collection id",
            "list number of documents"
        ]
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "collection named 'Best'",
            "most documents",
            "name and id of the one with the most documents",
            "how many documents does it have"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Objects",
            "Collections",
            "Documents_in_Collections",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "document subset Best for 2000",
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Objects",
            "Document_Subset_Members",
            "Collections",
            "Documents_in_Collections"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Objects.Document_Object_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID",
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "subset named 'Best for 2000'",
            "collection named 'Best'"
        ]
    },
    {
        "tables": [
            "Collections",
            "Documents_in_Collections",
            "Document_Subset_Members",
            "Document_Subsets"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "documents in collection named Best",
            "documents not in document subset Best for 2000"
        ]
    },
    {
        "tables": [
            "Document_Objects",
            "Collections",
            "Documents_in_Collections",
            "Document_Subsets",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "document object ids in the collection named Best",
            "document object ids not in the subset named 'Best for 2000'"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Objects",
            "Collections",
            "Documents_in_Collections",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "in document subset Best for 2000",
            "in collection named Best"
        ]
    },
    {
        "tables": [
            "Document_Subsets",
            "Document_Objects",
            "Collections",
            "Documents_in_Collections",
            "Document_Subset_Members"
        ],
        "columns": [
            "Document_Subsets.Document_Subset_ID",
            "Document_Subsets.Document_Subset_Name",
            "Document_Objects.Document_Object_ID",
            "Collections.Collection_ID",
            "Collections.Collection_Name",
            "Documents_in_Collections.Document_Object_ID",
            "Documents_in_Collections.Collection_ID",
            "Document_Subset_Members.Document_Object_ID",
            "Document_Subset_Members.Document_Subset_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "document ids in the subset named 'Best for 2000'",
            "document ids in the collection named 'Best'"
        ]
    },
    {
        "tables": [
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Related_Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Related_Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collections.Collection_ID",
            "Collection_Subset_Members.Collection_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named Best"
        ]
    },
    {
        "tables": [
            "Collections",
            "Collection_Subsets",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_ID",
            "Collection_Subsets.Collection_Subset_ID",
            "Collection_Subsets.Collection_Subset_Name",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Collection_Subset_ID"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "collection named 'Best'"
        ]
    },
    {
        "tables": [
            "Collection_Subsets",
            "Collections",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collection_Subsets.Collection_Subset_Name",
            "Collections.Collection_Name",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Collection_Subset_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Collections",
            "Collection_Subsets",
            "Collection_Subset_Members"
        ],
        "columns": [
            "Collections.Collection_Name",
            "Collection_Subsets.Collection_Subset_Name",
            "Collection_Subset_Members.Collection_ID",
            "Collection_Subset_Members.Collection_Subset_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "collection named 'Best'"
        ]
    },
    {
        "tables": [
            "songs"
        ],
        "columns": [
            "songs.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "contain 'Love' in their names"
        ]
    },
    {
        "tables": [
            "songs"
        ],
        "columns": [
            "songs.name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "name of the songs",
            "ascending",
            "lexicographical order"
        ]
    },
    {
        "tables": [
            "songs"
        ],
        "columns": [
            "songs.name",
            "songs.language"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names of the songs",
            "languages of the songs"
        ]
    },
    {
        "tables": [
            "performance_score"
        ],
        "columns": [
            "performance_score.voice_sound_quality"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum voice sound quality score",
            "minimum voice sound quality score"
        ]
    },
    {
        "tables": [
            "participants",
            "performance_score"
        ],
        "columns": [
            "participants.name",
            "performance_score.voice_sound_quality",
            "performance_score.rhythm_tempo",
            "performance_score.stage_presence"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "participant named 'Freeway'",
            "voice sound quality score",
            "rhythm tempo score",
            "stage presence score"
        ]
    },
    {
        "tables": [
            "songs"
        ],
        "columns": [
            "songs.id",
            "songs.language",
            "songs.original_artist"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "id",
            "language",
            "original artist",
            "name is not 'Love'"
        ]
    },
    {
        "tables": [
            "songs"
        ],
        "columns": [
            "songs.name",
            "songs.original_artist"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "English translation is 'All the streets of love'",
            "Names of the song",
            "Original artists of the song"
        ]
    },
    {
        "tables": [
            "songs",
            "performance_score"
        ],
        "columns": [
            "songs.id",
            "songs.language",
            "performance_score.songs_id",
            "performance_score.stage_presence"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "language 'English'"
        ]
    },
    {
        "tables": [
            "participants",
            "performance_score",
            "songs"
        ],
        "columns": [
            "participants.id",
            "participants.name",
            "performance_score.participant_id",
            "performance_score.songs_id",
            "songs.id",
            "songs.name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "performed at least two songs"
        ]
    },
    {
        "tables": [
            "participants",
            "songs",
            "performance_score"
        ],
        "columns": [
            "participants.id",
            "participants.name",
            "participants.popularity",
            "songs.id",
            "performance_score.participant_id",
            "performance_score.songs_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "ids",
            "names",
            "popularity",
            "order by the number of songs they perform"
        ]
    },
    {
        "tables": [
            "participants",
            "performance_score"
        ],
        "columns": [
            "participants.id",
            "participants.name",
            "performance_score.voice_sound_quality",
            "performance_score.rhythm_tempo"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "received score 5 for their sound quality",
            "received score 5 for their rhythm tempo"
        ]
    },
    {
        "tables": [
            "songs",
            "performance_score"
        ],
        "columns": [
            "songs.id",
            "songs.name",
            "songs.language",
            "performance_score.songs_id",
            "performance_score.voice_sound_quality"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "song named 'The Balkan Girls'",
            "English language"
        ]
    },
    {
        "tables": [
            "songs",
            "participants",
            "performance_score"
        ],
        "columns": [
            "songs.id",
            "songs.name",
            "participants.id",
            "participants.name",
            "performance_score.songs_id",
            "performance_score.participant_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "song sung by the most participants"
        ]
    },
    {
        "tables": [
            "performance_score"
        ],
        "columns": [
            "performance_score.stage_presence"
        ],
        "sql_keywords": [
            "<",
            ">"
        ],
        "conditions": [
            "stage presence score less than 7",
            "stage presence score higher than 9"
        ]
    },
    {
        "tables": [
            "songs",
            "performance_score"
        ],
        "columns": [
            "songs.id",
            "performance_score.songs_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "songs listed",
            "not performed"
        ]
    },
    {
        "tables": [
            "songs",
            "performance_score"
        ],
        "columns": [
            "songs.id",
            "songs.language",
            "performance_score.songs_id",
            "performance_score.rhythm_tempo"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY"
        ],
        "conditions": [
            "songs in each different language"
        ]
    },
    {
        "tables": [
            "participants",
            "songs",
            "performance_score"
        ],
        "columns": [
            "participants.name",
            "songs.language",
            "performance_score.participant_id",
            "performance_score.songs_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "sung a song in 'English'"
        ]
    },
    {
        "tables": [
            "participants",
            "songs",
            "performance_score"
        ],
        "columns": [
            "participants.name",
            "participants.popularity",
            "songs.language",
            "performance_score.participant_id",
            "performance_score.songs_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "name of participants",
            "popularity of participants",
            "sung a song in 'Croatian' language",
            "sung a song in 'English' language"
        ]
    },
    {
        "tables": [
            "songs"
        ],
        "columns": [
            "songs.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "song names have the substring 'Is'"
        ]
    },
    {
        "tables": [
            "songs",
            "performance_score"
        ],
        "columns": [
            "songs.id",
            "songs.original_artist",
            "performance_score.songs_id",
            "performance_score.voice_sound_quality",
            "performance_score.rhythm_tempo"
        ],
        "sql_keywords": [
            "=",
            ">",
            "ORDER BY DESC"
        ],
        "conditions": [
            "original artists",
            "songs with rhythm tempo above 5",
            "descending order of voice sound quality"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_code",
            "City.city_name",
            "City.state",
            "City.country",
            "City.latitude",
            "City.longitude"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_code",
            "City.city_name",
            "City.state",
            "City.country",
            "City.latitude",
            "City.longitude"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.city_code",
            "City.state",
            "City.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.city_code",
            "City.state",
            "City.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names",
            "codes",
            "states",
            "countries"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.latitude",
            "City.longitude"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.latitude",
            "City.longitude"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "latitude",
            "longitude",
            "Baltimore"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.state"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "state PA"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.state"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cities in PA"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.country",
            "City.latitude"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "USA city",
            "ordered by latitude"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.country",
            "City.latitude"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "cities in the USA",
            "ordered by latitude"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state",
            "City.city_code"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state",
            "City.city_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least two cities"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "states",
            "at least two cities"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "fewest number of cities"
        ]
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "country with the fewest number of cities"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.Fname",
            "Student.LName",
            "City.state"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "living in state MD"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.LName",
            "Student.Fname",
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "living in MD"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "live in China"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "living in China"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.Fname",
            "Student.Major",
            "City.city_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "living in Baltimore"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.Fname",
            "Student.Major",
            "City.city_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "living in Baltimore",
            "first names",
            "majors"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "state that has the most students"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "least number of students"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "fewest students"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "at least three students live"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cities with at least three students"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 5 students live"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "states with more than 5 students"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "don't live in USA"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "students not living in the USA"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.Sex",
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "=",
            "INTERSECT"
        ],
        "conditions": [
            "sex is F",
            "state is PA"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.Sex",
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "=",
            "INTERSECT"
        ],
        "conditions": [
            "female students",
            "state of PA"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.Sex",
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "=",
            "NOT IN"
        ],
        "conditions": [
            "male students",
            "living outside of USA"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.Sex",
            "Student.city_code",
            "City.city_code",
            "City.country"
        ],
        "sql_keywords": [
            "=",
            "NOT IN"
        ],
        "conditions": [
            "male students",
            "not in the USA"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance"
        ],
        "columns": [
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "AVG",
            "MIN",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance"
        ],
        "columns": [
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "AVG",
            "MIN",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "two cities",
            "maximum distance"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "maximum distance"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "distance greater than the average"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "distance greater than average"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "distance less than 1000"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "distances less than 1000"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "SUM",
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City"
        ],
        "columns": [
            "City.city_name",
            "City.latitude",
            "City.longitude"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "closest to Chicago"
        ]
    },
    {
        "tables": [
            "City",
            "Direct_distance"
        ],
        "columns": [
            "City.city_name",
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City",
            "Direct_distance"
        ],
        "columns": [
            "City.city_name",
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "LIKE",
            "DISTINCT"
        ],
        "conditions": [
            "city furthest to Boston"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city2_code",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "LIKE",
            "MAX"
        ],
        "conditions": [
            "city with greatest distance from Boston"
        ]
    },
    {
        "tables": [
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City",
            "Direct_distance"
        ],
        "columns": [
            "City.city_code",
            "Direct_distance.city1_code",
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "DISTINCT",
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City",
            "Direct_distance"
        ],
        "columns": [
            "City.city_name",
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "AVG",
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "City",
            "Direct_distance"
        ],
        "columns": [
            "City.city_name",
            "Direct_distance.distance"
        ],
        "sql_keywords": [
            "AVG",
            "GROUP BY"
        ],
        "conditions": [
            "city name",
            "average distances from each city"
        ]
    },
    {
        "tables": [
            "Student",
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.LName",
            "Student.Fname",
            "Student.city_code",
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.city_name"
        ],
        "sql_keywords": [
            "JOIN",
            "ON",
            "WHERE"
        ],
        "conditions": [
            "first name is Linda",
            "last name is Smith",
            "first name is Tracy",
            "last name is Kim"
        ]
    },
    {
        "tables": [
            "Student",
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Student.city_code",
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "Linda Smith lives in a city",
            "Tracy Kim lives in a city"
        ]
    },
    {
        "tables": [
            "Student",
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Student.Fname",
            "Student.LName",
            "Student.city_code",
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.latitude"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "first name",
            "last name",
            "student living furthest to Linda Smith"
        ]
    },
    {
        "tables": [
            "Student",
            "Direct_distance",
            "City"
        ],
        "columns": [
            "Student.StuID",
            "Student.LName",
            "Student.Fname",
            "Student.city_code",
            "Direct_distance.city1_code",
            "Direct_distance.city2_code",
            "Direct_distance.distance",
            "City.city_code",
            "City.city_name",
            "City.state",
            "City.country",
            "City.latitude",
            "City.longitude"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "lives furthest from Linda Smith"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.Fname",
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name is Linda"
        ]
    },
    {
        "tables": [
            "Student",
            "City"
        ],
        "columns": [
            "Student.Fname",
            "Student.city_code",
            "City.city_code",
            "City.state"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name Linda"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "older than 30"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "older than age 30"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age younger than 30"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age younger than 30"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Boats.name",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Sailor with id 1"
        ]
    },
    {
        "tables": [
            "Reserves",
            "Boats"
        ],
        "columns": [
            "Reserves.sid",
            "Reserves.bid",
            "Boats.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "sailor id is 1"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved boat 102"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved boat 102"
        ]
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "boat ids (bid) of all reserved boats"
        ]
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "boats are reserved by someone"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "names contain letter e"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name contains the letter e"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.sid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "older than any sailors"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "not the youngest"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "older than any sailors whose rating is larger than 7"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "older than some other sailor",
            "rating larger than 7"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved at least one boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "reserved one or more boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "reserved more than one boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "reserved two or more boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "reserved red boat",
            "reserved blue boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "LIKE",
            "UNION"
        ],
        "conditions": [
            "reserved red boats",
            "reserved blue boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Boats.bid",
            "Boats.name",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "LIKE",
            "UNION"
        ],
        "conditions": [
            "reserved red boat",
            "reserved blue boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Boats.bid",
            "Boats.name",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "LIKE",
            "UNION"
        ],
        "conditions": [
            "reserved red boats",
            "reserved blue boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "reserved red boat",
            "reserved blue boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "reserved red boats",
            "reserved blue boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Boats.bid",
            "Boats.name",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "reserved red boat",
            "reserved blue boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Boats.bid",
            "Boats.name",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "reserved red boats",
            "reserved blue boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "haven’t reserved a boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "have not reserved a boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not have a reservation of a boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not have boat reservations"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not have a reservation of a boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Reserves.sid"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "do not have boat reservations"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved boat with id 103"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved boat with id 103"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is higher than any sailor named Luis"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is higher than any sailor named Luis"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is higher than all sailors named Luis"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "higher rating than every sailor named Luis"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "rating greater than 2",
            "reserved a boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "=",
            ">="
        ],
        "conditions": [
            "rating of at least 3",
            "reserved a boat"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "oldest sailor"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name",
            "age",
            "maximum age"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.age",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is 7"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.age",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating of 7"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name starts with letter D"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name starts with letter D"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "AVG",
            "MAX"
        ],
        "conditions": [
            "average rating",
            "max age"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "AVG",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "id greater than 50"
        ]
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "id greater than 50"
        ]
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 1 reservation"
        ]
    },
    {
        "tables": [
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Boats.bid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "has more than 1 reservation already"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "id greater than 1"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Boats.bid",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": [
            "id greater than 1"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.rating",
            "Sailors.age",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "GROUP BY",
            "JOIN"
        ],
        "conditions": [
            "rating",
            "average age",
            "sailors who have reserved red boat",
            "grouped by rating"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.rating",
            "Sailors.age",
            "Boats.bid",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN",
            "GROUP BY"
        ],
        "conditions": [
            "reserved red boats",
            "each rating"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "name",
            "rating",
            "age"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating",
            "Sailors.age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "name",
            "rating",
            "age"
        ]
    },
    {
        "tables": [
            "Boats"
        ],
        "columns": [
            "Boats.bid"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boats"
        ],
        "columns": [
            "Boats.bid"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boats"
        ],
        "columns": [
            "Boats.color"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "boats are red"
        ]
    },
    {
        "tables": [
            "Boats"
        ],
        "columns": [
            "Boats.bid",
            "Boats.name",
            "Boats.color"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "red boats"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.age",
            "Boats.bid",
            "Boats.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "age is between 20 and 30"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.age",
            "Boats.bid",
            "Boats.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "age between 20 and 30"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.sid",
            "Sailors.name",
            "Sailors.rating",
            "Boats.bid",
            "Boats.name",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "rating is larger than the rating of all sailors who booked a red boat"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.rating",
            "Boats.color",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "rating is larger than the rating of all sailors who booked a red boat"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.rating"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "highest rating",
            "sailors"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.rating"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.name",
            "Boats.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved boat with the name Melon"
        ]
    },
    {
        "tables": [
            "Sailors",
            "Boats",
            "Reserves"
        ],
        "columns": [
            "Sailors.name",
            "Boats.name",
            "Reserves.sid",
            "Reserves.bid"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "reserved a boat",
            "boat name is Melon"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age",
            "Sailors.rating"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sorted by rating in descending order"
        ]
    },
    {
        "tables": [
            "Sailors"
        ],
        "columns": [
            "Sailors.name",
            "Sailors.age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names",
            "ages",
            "sailors",
            "sorted by decreasing rating"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model",
            "headphone.Price"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model",
            "headphone.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest price"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than two headphones"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "does not contain more than two headphones"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Headphone_ID",
            "headphone.Model",
            "headphone.Class",
            "headphone.Driver-matched_dB",
            "headphone.Construction",
            "headphone.Earpads",
            "headphone.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "price higher than 200"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class",
            "headphone.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cost more than 200",
            "for each headphone class"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "top 2 earpads",
            "mostly used"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "top 2 earpads",
            "number of headphones using them"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model",
            "headphone.Class",
            "headphone.Construction",
            "headphone.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cheapest headphone",
            "model",
            "class",
            "construction"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model",
            "headphone.Class",
            "headphone.Construction",
            "headphone.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lowest price"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Construction",
            "headphone.Price"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Construction",
            "headphone.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "headphones cost on average",
            "each headphone construction"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class",
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "headphones with 'Bowls' earpads",
            "headphones with 'Comfort Pads' earpads"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Class",
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "headphones using 'Bowls' earpads",
            "headphones using 'Comfort Pads' earpads"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Construction",
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "earpads never use plastic construction"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Earpads"
        ],
        "sql_keywords": [
            "NOT LIKE"
        ],
        "conditions": [
            "earpads that do not use plastic construction"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model",
            "headphone.Price"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "price is below the average price"
        ]
    },
    {
        "tables": [
            "headphone"
        ],
        "columns": [
            "headphone.Model",
            "headphone.Price"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "cost less than the average price"
        ]
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Name",
            "store.Date_Opened"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sort all store names by store open date"
        ]
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Name",
            "store.Date_Opened"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sorted by store open date"
        ]
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Name",
            "store.Parking"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "stores in the Tarzana neighborhood"
        ]
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Name",
            "store.Parking"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "stores located in the 'Tarzana' neighborhood",
            "return their names",
            "return parking information"
        ]
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Neighborhood"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Neighborhood"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Store_ID",
            "store.Neighborhood"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "store"
        ],
        "columns": [
            "store.Store_ID",
            "store.Neighborhood"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Name",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "has the most headphones in stock",
            "list the number of headphones"
        ]
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Name",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "store has the headphones in stock",
            "give me the store name",
            "give me the total quantity"
        ]
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Store_ID",
            "store.Name",
            "stock.Store_ID",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "no headphone in stock"
        ]
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Store_ID",
            "store.Name",
            "stock.Store_ID",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "stores do not have any headphones in stock"
        ]
    },
    {
        "tables": [
            "headphone",
            "stock"
        ],
        "columns": [
            "headphone.Headphone_ID",
            "headphone.Model",
            "stock.Headphone_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "headphone models do not have any stock in any store"
        ]
    },
    {
        "tables": [
            "headphone",
            "stock"
        ],
        "columns": [
            "headphone.Headphone_ID",
            "headphone.Model",
            "stock.Headphone_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "not in stock in any store"
        ]
    },
    {
        "tables": [
            "headphone",
            "stock"
        ],
        "columns": [
            "headphone.Model",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "headphone",
            "stock"
        ],
        "columns": [
            "headphone.Model",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "total quantity in stock is the largest"
        ]
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Store_ID",
            "store.Name",
            "stock.Store_ID",
            "stock.Headphone_ID",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Store_ID",
            "store.Name",
            "stock.Store_ID",
            "stock.Headphone_ID",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Store_ID",
            "store.Neighborhood",
            "stock.Store_ID",
            "stock.Headphone_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "neighborhood does not have any headphone in stock"
        ]
    },
    {
        "tables": [
            "store",
            "stock"
        ],
        "columns": [
            "store.Store_ID",
            "store.Neighborhood",
            "stock.Store_ID",
            "stock.Quantity"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no headphones are in stock"
        ]
    },
    {
        "tables": [
            "Author"
        ],
        "columns": [
            "Author.author_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author"
        ],
        "columns": [
            "Author.author_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Affiliation.address"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Affiliation.address"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.title",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.title",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper",
            "Affiliation",
            "Author_list"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.year",
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "year 2009",
            "Columbia University"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Paper",
            "Author_list"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Paper.paper_id",
            "Paper.year",
            "Author_list.paper_id",
            "Author_list.affiliation_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Columbia University",
            "2009"
        ]
    },
    {
        "tables": [
            "Affiliation"
        ],
        "columns": [
            "Affiliation.name",
            "Affiliation.address"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation"
        ],
        "columns": [
            "Affiliation.name",
            "Affiliation.address"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names",
            "addresses",
            "all affiliations"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "written by Harvard University"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "titles",
            "paper ids",
            "written in affiliation with Harvard University"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "titles",
            "paper IDs",
            "written by Mckeown"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "written by Mckeown"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "collaborated by Stanford University",
            "collaborated by Columbia University"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "affiliated with Stanford",
            "affiliated with Columbia University"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "titles",
            "paper IDs",
            "co-authored by Mckeown, Kathleen",
            "co-authored by Rambow, Owen"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "co-authored by Mckeown, Kathleen",
            "co-authored by Rambow, Owen"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT",
            "NOT IN"
        ],
        "conditions": [
            "Mckeown in author list",
            "Rambow not in author list"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "=",
            "NOT IN"
        ],
        "conditions": [
            "Mckeown as an author",
            "not Rambow"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Mckeown, Kathleen in author list",
            "Rambow, Owen in author list"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Mckeown, Kathleen in author list",
            "Rambow, Owen in author list"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Affiliation.address",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.author_id",
            "Author_list.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 50 papers"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.author_id",
            "Author_list.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "authors who have more than 50 papers"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "authors have only 1 paper"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "authors have exactly 1 paper"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "venue",
            "year",
            "most number of publications"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "venue",
            "year",
            "most publications"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "venue with the least number of publications"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "venue has the fewest publications"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paper with id A00-1002"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Citation.paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cited a paper with id A00-1002"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Citation.paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paper with id D12-1027"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paper with id D12-1027"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "most cited paper"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most cited paper"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cites most number of papers"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cites the most other papers"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.cited_paper_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper",
            "Citation"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Citation.paper_id",
            "Citation.cited_paper_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "name",
            "number of citations",
            "greatest number of citations among authors"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Mckeown, Kathleen had papers",
            "venues",
            "years"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Mckeown, Kathleen",
            "have papers"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "venue",
            "year"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "venue",
            "year"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "year 2009"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "author with the most papers",
            "in 2009"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "year 2009",
            "top 3 affiliations",
            "most papers"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "affiliations",
            "most papers",
            "2009"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "Columbia University",
            "in or before 2009"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "Columbia University",
            "during or prior to 2009"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "Stanford University",
            "papers",
            "between 2000 and 2009"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "Stanford University",
            "between 2000 and 2009"
        ]
    },
    {
        "tables": [
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author_list.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most number of authors"
        ]
    },
    {
        "tables": [
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author_list.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "title of the paper",
            "most authors"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.author_id",
            "Author_list.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.author_id",
            "Author_list.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "co-authored with Mckeown, Kathleen"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "co-authored the most papers with Mckeown, Kathleen"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "title has the key word 'translation'"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "titles containing 'translation'"
        ]
    },
    {
        "tables": [
            "Paper",
            "Citation"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.title",
            "Citation.cited_paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "never cited by others"
        ]
    },
    {
        "tables": [
            "Paper",
            "Citation"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.title",
            "Citation.cited_paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "papers that have never been cited"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.name",
            "Affiliation.address",
            "Author_list.affiliation_id",
            "Author_list.paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "address contains 'China'",
            "publishes the greatest number of papers"
        ]
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Affiliation.address",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "address contains 'China'"
        ]
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paper"
        ],
        "columns": [
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Affiliation",
            "Author_list",
            "Paper"
        ],
        "columns": [
            "Affiliation.affiliation_id",
            "Affiliation.name",
            "Author_list.paper_id",
            "Author_list.affiliation_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 50 citations"
        ]
    },
    {
        "tables": [
            "Citation",
            "Paper"
        ],
        "columns": [
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id",
            "Paper.title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 50 citations"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "did not publish any paper",
            "cited more than 50 times"
        ]
    },
    {
        "tables": [
            "Author",
            "Author_list",
            "Citation",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author_list.paper_id",
            "Author_list.author_id",
            "Citation.paper_id",
            "Citation.cited_paper_id",
            "Paper.paper_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "not published a paper with more than 50 citations"
        ]
    },
    {
        "tables": [
            "Author",
            "Paper"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Paper.paper_id",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "published some paper on NAACL",
            "published some paper on ACL",
            "in the year 2009"
        ]
    },
    {
        "tables": [
            "Author",
            "Paper"
        ],
        "columns": [
            "Author.name",
            "Paper.venue",
            "Paper.year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "published in NAACL in 2009",
            "published in ACL in 2009"
        ]
    },
    {
        "tables": [
            "Author",
            "Paper",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Paper.paper_id",
            "Paper.venue",
            "Author_list.paper_id",
            "Author_list.author_id"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "authors who have never published a paper in ACL"
        ]
    },
    {
        "tables": [
            "Author",
            "Paper",
            "Author_list"
        ],
        "columns": [
            "Author.author_id",
            "Author.name",
            "Paper.paper_id",
            "Paper.venue",
            "Author_list.paper_id",
            "Author_list.author_id"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "authors who have not published a paper in ACL"
        ]
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "conference.Year",
            "conference.Location"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "conference.Year",
            "conference.Location"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_Name",
            "conference.Year",
            "conference.Location"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_Name",
            "conference.Year",
            "conference.Location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names",
            "years",
            "locations"
        ]
    },
    {
        "tables": [
            "conference",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_Name",
            "conference_participation.Conference_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Conference_Name",
            "conference.Year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "conference name"
        ]
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "fewest conferences"
        ]
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least two conferences are located"
        ]
    },
    {
        "tables": [
            "conference"
        ],
        "columns": [
            "conference.Location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "hosted at least two conferences"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Location",
            "institution.Founded"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Location",
            "institution.Founded"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names",
            "locations",
            "founding years"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Institution_Name",
            "institution.Location",
            "institution.Founded"
        ],
        "sql_keywords": [
            "COUNT",
            "BETWEEN"
        ],
        "conditions": [
            "founded between 1850 and 1900"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Founded"
        ],
        "sql_keywords": [
            "BETWEEN"
        ],
        "conditions": [
            "founded between 1850 and 1900"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Location"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most recently founded"
        ]
    },

    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Location",
            "institution.Founded"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "most recently-founded institution",
            "names",
            "locations"
        ]
    },
    {
        "tables": [
            "institution",
            "staff"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Founded",
            "staff.Institution_ID"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "founded after 1800"
        ]
    },
    {
        "tables": [
            "institution",
            "staff"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Founded",
            "staff.name",
            "staff.Institution_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "founded after 1800"
        ]
    },
    {
        "tables": [
            "institution",
            "staff"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Institution_Name",
            "staff.Institution_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "there is no staff in our record"
        ]
    },
    {
        "tables": [
            "institution",
            "staff"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Institution_Name",
            "staff.name",
            "staff.Institution_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no staff in the records"
        ]
    },
    {
        "tables": [
            "staff"
        ],
        "columns": [
            "staff.name",
            "staff.Age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "above the average age"
        ]
    },
    {
        "tables": [
            "staff"
        ],
        "columns": [
            "staff.name",
            "staff.Age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "older than average"
        ]
    },
    {
        "tables": [
            "staff"
        ],
        "columns": [
            "staff.Age",
            "staff.Nationality"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "staff from the United States"
        ]
    },
    {
        "tables": [
            "staff"
        ],
        "columns": [
            "staff.Age"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum age",
            "minimum age"
        ]
    },
    {
        "tables": [
            "conference",
            "staff",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_Name",
            "staff.Nationality",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "staff from Canada attends"
        ]
    },
    {
        "tables": [
            "conference",
            "staff",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_Name",
            "staff.Nationality",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "staff from Canada attending"
        ]
    },
    {
        "tables": [
            "staff",
            "conference_participation"
        ],
        "columns": [
            "staff.staff_ID",
            "staff.name",
            "conference_participation.staff_ID",
            "conference_participation.role"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "staff names",
            "speaker",
            "sponsor",
            "conference"
        ]
    },
    {
        "tables": [
            "staff",
            "conference_participation"
        ],
        "columns": [
            "staff.staff_ID",
            "staff.name",
            "conference_participation.staff_ID",
            "conference_participation.role"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "staff members who have been a speaker",
            "staff members who have been a sponsor"
        ]
    },
    {
        "tables": [
            "conference",
            "staff",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "staff.staff_ID",
            "staff.name",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "been in ACL",
            "been in Naccl"
        ]
    },
    {
        "tables": [
            "conference",
            "staff",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "staff.staff_ID",
            "staff.name",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "participated in ACL",
            "participated in NACCL"
        ]
    },
    {
        "tables": [
            "conference",
            "staff",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Year",
            "staff.staff_ID",
            "staff.name",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "attend a conference in 2003",
            "attend a conference in 2004"
        ]
    },
    {
        "tables": [
            "conference",
            "staff",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Year",
            "staff.staff_ID",
            "staff.name",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "participated in conferences",
            "between 2003 or 2004"
        ]
    },
    {
        "tables": [
            "conference",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_Name",
            "conference.Year",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "conference",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "conference.Year",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "conference id",
            "names",
            "year",
            "number of participants"
        ]
    },
    {
        "tables": [
            "conference",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "top 2 most number of attendants"
        ]
    },
    {
        "tables": [
            "conference",
            "conference_participation"
        ],
        "columns": [
            "conference.Conference_ID",
            "conference.Conference_Name",
            "conference_participation.Conference_ID",
            "conference_participation.staff_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "top 2 most people attending"
        ]
    },
    {
        "tables": [
            "staff",
            "conference",
            "conference_participation"
        ],
        "columns": [
            "staff.name",
            "staff.Nationality",
            "conference.Conference_Name",
            "conference_participation.staff_ID",
            "conference_participation.Conference_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "did not participate in any ACL conference"
        ]
    },
    {
        "tables": [
            "staff",
            "conference_participation",
            "conference"
        ],
        "columns": [
            "staff.name",
            "staff.Nationality",
            "conference_participation.staff_ID",
            "conference_participation.Conference_ID",
            "conference.Conference_Name"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "did not participate in any ACL conferences"
        ]
    },
    {
        "tables": [
            "institution",
            "staff",
            "conference_participation",
            "conference"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Location",
            "staff.staff_ID",
            "conference_participation.staff_ID",
            "conference.Conference_ID",
            "conference.Year"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "did not have any staff participated in any conference in 2004"
        ]
    },
    {
        "tables": [
            "institution",
            "staff",
            "conference_participation",
            "conference"
        ],
        "columns": [
            "institution.Institution_Name",
            "institution.Location",
            "staff.staff_ID",
            "conference_participation.staff_ID",
            "conference.Conference_ID",
            "conference.Year"
        ],
        "sql_keywords": [
            "DISTINCT",
            "NOT EXISTS"
        ],
        "conditions": [
            "universities did not have any staff participating in any conferences in 2004"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "oldest pilot"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "oldest pilot"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "age is below the average age",
            "ordered by age"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "younger than average",
            "ordered by age ascending"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age is less than 30"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "younger than 30"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "has a plane named Piper Cub",
            "is under 35"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "younger than 35",
            "have a plane named Piper Cub"
        ]
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "pilot Jones",
            "age 32"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "pilot Jones",
            "age 32"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "older than 40"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "COUNT",
            ">"
        ],
        "conditions": [
            "age greater than 40"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "plane B-52 Bomber owned",
            "pilot under 35"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "pilots under 35"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "youngest pilot",
            "fly the plane Piper Cub"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "youngest pilot",
            "fly Piper Cub"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "least popular plane"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "flown the least often"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "planes are in Chicago"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "planes in Chicago"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "pilot Smith",
            "age 41"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name is Smith",
            "age is 41 years old"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name is Smith"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age is older than 40"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "COUNT",
            "JOIN",
            ">"
        ],
        "conditions": [
            "pilots older than 40"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age between 30 and 40",
            "sorted by their ages in ascending order"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "ages of 30 and 40",
            "ordered by age ascending"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sorted by their ages in the descending order"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ordered by age descending"
        ]
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ordered by plane name"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            ">=",
            "<="
        ],
        "conditions": [
            "older than 40",
            "younger than 30"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "COUNT",
            ">",
            "<"
        ],
        "conditions": [
            "age greater than 40",
            "age less than 30"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "own plane Piper Cub",
            "are older than 35",
            "have F-14 Fighter",
            "are younger than 30"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            "AND",
            "OR"
        ],
        "conditions": [
            "have flown Piper Cub",
            "are older than 35",
            "have flown the F-14 Fighter",
            "are younger than 30"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "=",
            "NOT IN"
        ],
        "conditions": [
            "own plane Piper Cub",
            "not own B-52 Bomber"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "=",
            "NOT IN"
        ],
        "conditions": [
            "flown Piper Cub",
            "not flown B-52 Bomber"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "own planes Piper Cub",
            "own planes B-52 Bomber"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "own Piper Cub",
            "own B-52 Bomber"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "AVG",
            "MIN"
        ],
        "conditions": [
            "average age",
            "smallest age"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "AVG",
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "have planes in Austin",
            "have planes in Boston"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "planes in Austin",
            "planes in Boston"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "plane Piper Cub",
            "plane F-14 Fighter"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "Piper Cub",
            "F-14 Fighter"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average age of pilots",
            "different types of planes"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "COUNT",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "oldest pilot",
            "each type of plane",
            "order by plane name"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "different plane names",
            "oldest pilot who has each",
            "ordered by plane name"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "oldest pilots",
            "each type of plane"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "GROUP BY",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "DISTINCT",
            "MAX"
        ],
        "conditions": [
            "different pilot names",
            "maximum ages of pilots for each"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "GROUP BY",
            "AVG",
            "JOIN"
        ],
        "conditions": [
            "has a plane"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "different hangar locations",
            "number of pilots per hangar",
            "average ages of pilots"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "average pilot age below 35"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "DISTINCT",
            "AVG",
            "GROUP BY"
        ],
        "conditions": [
            "average pilot age of below 35"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "owned by the youngest pilot"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "location of the plane",
            "flown by the pilot",
            "lowest age"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "Hangar.plane_name",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "name of pilots",
            "age of pilots",
            "have a plane in Austin"
        ]
    },
    {
        "tables": [
            "PilotSkills",
            "Hangar"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "Hangar.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "names of pilots",
            "ages of pilots",
            "planes located in Austin"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "age is greater than some pilots",
            "having plane Piper Cub",
            "names of pilots"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.age",
            "PilotSkills.plane_name"
        ],
        "sql_keywords": [
            "INTERSECT",
            "ORDER BY"
        ],
        "conditions": [
            "older than any pilot who has flown Piper Cub",
            "ordered alphabetically"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "age is younger than all pilots whose plane is F-14 Fighter"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "pilots are younger",
            "pilots own the F-14 Fighter"
        ]
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "names contain substring 'Bomber'"
        ]
    },
    {
        "tables": [
            "Hangar"
        ],
        "columns": [
            "Hangar.plane_name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "plane names contain the word Bomber"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "age is older than some pilot",
            "has plane Piper Cub"
        ]
    },
    {
        "tables": [
            "PilotSkills"
        ],
        "columns": [
            "PilotSkills.pilot_name",
            "PilotSkills.plane_name",
            "PilotSkills.age"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "older than the youngest pilot who has Piper Cub"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.Name",
            "district.Area_km"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "largest area"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.Area_km",
            "district.Government_website",
            "district.Population"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "district with the smallest population"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.Name",
            "district.Population",
            "district.Area_km"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "area is greater than the average area"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.Area_km"
        ],
        "sql_keywords": [
            "MAX",
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.Area_km",
            "district.Population"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "areas are in the top 3"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.District_ID",
            "district.Name",
            "district.Government_website"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.Name",
            "district.Government_website"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "government links use a 'gov' domain"
        ]
    },
    {
        "tables": [
            "district"
        ],
        "columns": [
            "district.District_ID",
            "district.Name"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "population is larger than 4000",
            "area bigger than 3000"
        ]
    },
    {
        "tables": [
            "spokesman"
        ],
        "columns": [
            "spokesman.Name",
            "spokesman.Speach_title"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "spokesman"
        ],
        "columns": [
            "spokesman.Age",
            "spokesman.Rank_position",
            "spokesman.Points"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rank position is 1"
        ]
    },
    {
        "tables": [
            "spokesman"
        ],
        "columns": [
            "spokesman.Name",
            "spokesman.Points"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "younger than 40"
        ]
    },
    {
        "tables": [
            "spokesman"
        ],
        "columns": [
            "spokesman.Name",
            "spokesman.Age"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "oldest spokesman"
        ]
    },
    {
        "tables": [
            "spokesman"
        ],
        "columns": [
            "spokesman.Spokesman_ID",
            "spokesman.Name",
            "spokesman.Points"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "spokesman has lower points than the average"
        ]
    },
    {
        "tables": [
            "district",
            "spokesman",
            "spokesman_district"
        ],
        "columns": [
            "district.District_ID",
            "district.Name",
            "spokesman.Spokesman_ID",
            "spokesman.Name",
            "spokesman_district.District_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "greatest number of spokesmen"
        ]
    },
    {
        "tables": [
            "spokesman",
            "spokesman_district",
            "district"
        ],
        "columns": [
            "spokesman.Spokesman_ID",
            "spokesman.Name",
            "spokesman_district.Spokesman_ID",
            "spokesman_district.District_ID",
            "spokesman_district.Start_year",
            "district.District_ID",
            "district.Name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "served some district",
            "before 2004"
        ]
    },
    {
        "tables": [
            "district",
            "spokesman",
            "spokesman_district"
        ],
        "columns": [
            "district.District_ID",
            "district.Name",
            "spokesman.Spokesman_ID",
            "spokesman_district.Spokesman_ID",
            "spokesman_district.District_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "district",
            "spokesman",
            "spokesman_district"
        ],
        "columns": [
            "district.District_ID",
            "district.Name",
            "spokesman.Spokesman_ID",
            "spokesman.Name",
            "spokesman.Rank_position",
            "spokesman_district.Spokesman_ID",
            "spokesman_district.District_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "spokesman with rank position 1",
            "spokesman with rank position 2"
        ]
    },
    {
        "tables": [
            "district",
            "spokesman",
            "spokesman_district"
        ],
        "columns": [
            "district.District_ID",
            "district.Name",
            "spokesman.Spokesman_ID",
            "spokesman.Name",
            "spokesman_district.Spokesman_ID",
            "spokesman_district.District_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than one spokesman"
        ]
    },
    {
        "tables": [
            "district",
            "spokesman_district"
        ],
        "columns": [
            "district.District_ID",
            "spokesman_district.District_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no spokesmen"
        ]
    },
    {
        "tables": [
            "spokesman",
            "spokesman_district"
        ],
        "columns": [
            "spokesman.Spokesman_ID",
            "spokesman.Name",
            "spokesman_district.Spokesman_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "do not speak for any district"
        ]
    },
    {
        "tables": [
            "district",
            "spokesman_district"
        ],
        "columns": [
            "district.District_ID",
            "district.Population",
            "spokesman_district.District_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "JOIN"
        ],
        "conditions": [
            "districts have some spokesman"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "sculpture",
            "created",
            "most recent year"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "sculpture was created most recently"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.location",
            "Paintings.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "title",
            "location",
            "oldest painting"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "oldest painting",
            "location"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "located in gallery 226"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sculptures",
            "gallery 226"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "title",
            "location"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paintings called",
            "located"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "title",
            "location"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.medium"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "id = 80"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.medium"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "id 80"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "born after 1850"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "born after 1850"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.year",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "NOT",
            "="
        ],
        "conditions": [
            "not located in gallery 226"
        ]
    },
    {
        "tables": [
            "Sculptures"
        ],
        "columns": [
            "Sculptures.title",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "=",
            "NOT"
        ],
        "conditions": [
            "not located in gallery 226"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Sculptures.year",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "made sculptures",
            "before 1900"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Sculptures.year",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "made a sculpture",
            "before 1900"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.birthYear",
            "Sculptures.sculptorID",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "made sculptures",
            "after 1920"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.birthYear",
            "Sculptures.year",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "created sculptures after 1920"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "artist who lived the longest"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lived the longest"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "age of the artist",
            "shortest life"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "lived the shortest life"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "first name",
            "age",
            "longest life"
        ]
    },
    {
        "tables": [
            "Artists"
        ],
        "columns": [
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "first name",
            "age",
            "artist",
            "lived the longest"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.year",
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.medium",
            "Paintings.mediumOn",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear",
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.year",
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.medium",
            "Paintings.mediumOn",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "artist with the longest life"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Artists.birthYear",
            "Artists.deathYear",
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.year",
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.medium",
            "Paintings.mediumOn",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "artist with the longest life"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.fname",
            "Paintings.title",
            "Paintings.year",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "first name is Mary"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.fname",
            "Paintings.title",
            "Paintings.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name is Mary"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.birthYear",
            "Paintings.paintingID",
            "Paintings.year",
            "Paintings.width_mm",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "widths of the paintings",
            "created by the artist",
            "born before 1850"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.birthYear",
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.year",
            "Paintings.width_mm",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paintings by the artist",
            "born prior to 1850"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.fname",
            "Paintings.medium",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "location",
            "medium type",
            "first name is Pablo"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.fname",
            "Paintings.medium",
            "Paintings.mediumOn",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name Pablo"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.painterID",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "works of paintings",
            "works of sculptures"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.painterID",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "created paintings",
            "created sculptures"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.medium",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "artists who have not only medium oil paintings",
            "also paintings with the lithographic medium"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.medium",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "painted using both oil",
            "painted using lithographic mediums"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.birthYear",
            "Paintings.year",
            "Paintings.mediumOn",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "birth year of the artist",
            "painting created in 1884",
            "painting on canvas"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.birthYear",
            "Paintings.year",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "painting in 1884"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.fname",
            "Paintings.medium",
            "Paintings.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "first names of the artists",
            "medium oil paintings",
            "located in gallery 241"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.fname",
            "Paintings.medium",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first names of the artists",
            "oil paintings",
            "gallery 241"
        ]
    },
    {
        "tables": [
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Paintings.medium",
            "Sculptures.medium"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Paintings.medium",
            "Sculptures.medium"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.height_mm",
            "Paintings.medium"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.height_mm",
            "Paintings.medium"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "paintings created before 1900",
            "different places"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "paintings created before 1900",
            "different locations"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.year",
            "Paintings.medium"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "created after 1910",
            "medium is oil"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.year",
            "Paintings.medium"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "oil paintings",
            "created after 1910"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Paintings.medium",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "medium oil paintings",
            "exhibited at gallery 240"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Paintings.medium",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "unique id of every painter",
            "medium oil painting",
            "displayed at gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.height_mm",
            "Paintings.mediumOn"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "height longer than some painting on canvas"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.height_mm",
            "Paintings.mediumOn"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "height greater than some painting on canvas"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "older than some painting",
            "location gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "older than some painting in gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.year"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "oldest painting"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.year"
        ],
        "sql_keywords": [
            "MIN",
            "="
        ],
        "conditions": [
            "oldest painting"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.lname",
            "Artists.fname",
            "Sculptures.title",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "first name of the artist",
            "last name of the artist",
            "sculpture work",
            "title has the word “female” in it"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Sculptures.title",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "artist with a sculpture whose title includes the word 'female'"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "distinct painting",
            "alphabetical order"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "ordered by length"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "distinct paintings",
            "shortest to longest in height"
        ]
    },
    {
        "tables": [
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Paintings.title",
            "Sculptures.title",
            "Paintings.year",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "paintings",
            "sculptures",
            "created between 1900 and 1950"
        ]
    },
    {
        "tables": [
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.year",
            "Sculptures.title",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "UNION",
            "="
        ],
        "conditions": [
            "paintings",
            "sculptures",
            "created between 1900 and 1950"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Paintings.title",
            "Paintings.painterID",
            "Sculptures.title",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "artist id is 222"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Paintings.title",
            "Paintings.painterID",
            "Sculptures.title",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "UNION",
            "="
        ],
        "conditions": [
            "artist id is 222",
            "titles of paintings and sculpture works"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Paintings.painterID",
            "Paintings.year"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "artist has the highest number of painting works",
            "before 1900"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Paintings.painterID",
            "Paintings.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "artist with the most paintings",
            "before 1900"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.fname",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "artist who has the highest number of sculptures"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.fname",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "sculptor",
            "greatest number of works"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.width_mm",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "=",
            "<",
            ">"
        ],
        "conditions": [
            "width is less than 600",
            "height is larger than 800"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.height_mm",
            "Paintings.width_mm"
        ],
        "sql_keywords": [
            "<",
            ">"
        ],
        "conditions": [
            "width less than 600",
            "height taller than 800"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paintings created before 1885",
            "paintings created after 1930"
        ]
    },
    {
        "tables": [
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Paintings.location",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "works painted before 1885",
            "works painted after 1930"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "height is bigger than 500",
            "height is less than 2000"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "taller than 500",
            "shorter than 2000"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.location",
            "Paintings.mediumOn"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "mediums of on panel",
            "mediums of on canvas"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.location",
            "Paintings.mediumOn"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "locations have paintings",
            "mediums of on panels",
            "mediums of on canvas"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "paintings created before 1885",
            "paintings created after 1930"
        ]
    },
    {
        "tables": [
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Paintings.location",
            "Sculptures.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "works painted before 1885",
            "works painted after 1930"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.medium",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "oil medium",
            "place of gallery 241"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.medium",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "oil medium",
            "gallery 241"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "height",
            "id",
            "paintings painted before 1900"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "height",
            "id",
            "tallest painting",
            "created before 1900"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.year",
            "Paintings.height_mm",
            "Paintings.width_mm"
        ],
        "sql_keywords": [
            "MAX"
        ],
        "conditions": [
            "maximum height of paintings",
            "maximum width of paintings",
            "each year"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.year",
            "Paintings.height_mm",
            "Paintings.width_mm"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "largest height",
            "largest width",
            "each year"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY"
        ],
        "conditions": [
            "average height",
            "average width",
            "grouped by painters",
            "ordered by name"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.fname",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least two paintings"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.fname",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "artists have at least two paintings"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.deathYear",
            "Paintings.paintingID",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "at most 3 paintings"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.deathYear",
            "Paintings.painterID",
            "Paintings.year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "created less than 4 paintings",
            "died"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.deathYear",
            "Sculptures.sculptorID",
            "Sculptures.year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "made the least number of sculptures"
        ]
    },
    {
        "tables": [
            "Artists",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.deathYear",
            "Sculptures.sculptureID",
            "Sculptures.year",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "artist who made the fewest sculptures",
            "die"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm",
            "Paintings.width_mm",
            "Paintings.location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "id of the painting",
            "height of the painting",
            "longest width in gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm",
            "Paintings.width_mm"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "widest painting",
            "gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "paintings created before all of the paintings in gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.year",
            "Paintings.location"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "created before the oldest painting in gallery 240"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm",
            "Paintings.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "height is longer than the height of all paintings created after 1900"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.height_mm",
            "Paintings.year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "taller than the longest painting created after 1900"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.medium",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "medium is oil",
            "top 3 artists",
            "biggest number of painting works"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.paintingID",
            "Paintings.title",
            "Paintings.medium",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "artists",
            "most paintings",
            "oil"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.location",
            "Paintings.title",
            "Paintings.year",
            "Paintings.medium"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "medium oil paintings",
            "ordered by year"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.paintingID",
            "Paintings.location",
            "Paintings.title"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "order by date of creation",
            "list ids",
            "list locations",
            "list titles"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.title",
            "Paintings.year",
            "Paintings.location",
            "Paintings.height_mm"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "height is longer than 1000",
            "ordered by title"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.year",
            "Paintings.height_mm",
            "Paintings.location",
            "Paintings.painterID"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "taller than 1000",
            "alphabetical order"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.painterID",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT",
            "EXCEPT"
        ],
        "conditions": [
            "have painting",
            "no sculpture work"
        ]
    },
    {
        "tables": [
            "Artists",
            "Paintings",
            "Sculptures"
        ],
        "columns": [
            "Artists.artistID",
            "Artists.lname",
            "Artists.fname",
            "Paintings.painterID",
            "Sculptures.sculptorID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "did not sculpt",
            "could paint"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.location",
            "Paintings.year",
            "Paintings.mediumOn"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "paintings before 1885",
            "no work with medium on canvas"
        ]
    },
    {
        "tables": [
            "Paintings"
        ],
        "columns": [
            "Paintings.year",
            "Paintings.mediumOn",
            "Paintings.location"
        ],
        "sql_keywords": [
            "<",
            "!="
        ],
        "conditions": [
            "paintings created before 1885",
            "not on canvas"
        ]
    },
    {
        "tables": [
            "race"
        ],
        "columns": [
            "race.Race_Name"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "race"
        ],
        "columns": [
            "race.Race_Name"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "race"
        ],
        "columns": [
            "race.Winning_driver",
            "race.Winning_team"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "race",
            "driver"
        ],
        "columns": [
            "race.Winning_driver",
            "race.Winning_team",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "winning drivers",
            "winning teams",
            "ordered alphabetically by team"
        ]
    },
    {
        "tables": [
            "race",
            "driver"
        ],
        "columns": [
            "race.Winning_driver",
            "race.Pole_Position",
            "driver.Driver_Name"
        ],
        "sql_keywords": [
            "=",
            "NOT LIKE"
        ],
        "conditions": [
            "winning drivers of races",
            "had pole position",
            "not 'Junior Strous'"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Race_Name",
            "race.Pole_Position",
            "race.Winning_driver"
        ],
        "sql_keywords": [
            "NOT LIKE",
            "="
        ],
        "conditions": [
            "winning drivers of races",
            "did not have the pole position",
            "Junior Strous"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_Name",
            "driver.Constructor",
            "driver.Age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "drivers' age in ascending order"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Constructor",
            "driver.Age"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "ordered by age ascending"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Entrant",
            "driver.Age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "drivers aged 20 or older"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Entrant",
            "driver.Age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "drivers at least 20 years old"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Age"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum age of driver",
            "minimum age of driver"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Age"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Engine",
            "driver.Age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "age older than 30",
            "age younger than 20"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Engine",
            "driver.Age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "age over 30",
            "age under 20"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of drivers",
            "descending alphabetical order"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of drivers",
            "ordered descending alphabetically"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_Name",
            "race.Race_Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_Name",
            "race.Race_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names of drivers",
            "names of the races they took part in"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID",
            "race.Race_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Age",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "driver participated in the most number of races"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "driver.Age",
            "race.Driver_ID",
            "race.Race_Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "raced in the most races"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_Name",
            "driver.Age",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "participated in at least two races"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_Name",
            "driver.Age",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "names",
            "ages",
            "drivers who raced in two or more races"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "driver.Age",
            "race.Driver_ID",
            "race.Race_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "drivers aged 26 or older"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "driver.Age",
            "race.Race_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "drivers 26 or older"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_Name",
            "driver.Constructor"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "constructor is not 'Bugatti'"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_Name",
            "driver.Constructor"
        ],
        "sql_keywords": [
            "NOT LIKE"
        ],
        "conditions": [
            "did not have the constructor Bugatti"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Constructor",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Constructor"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Engine"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Engine"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Engine",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "used by at least two drivers"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Engine"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "engine types",
            "used by two or more drivers"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not participate in any race"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "did not take part in a race"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Constructor",
            "driver.Age"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "age lower than 20",
            "age over than 30"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Constructor",
            "driver.Age"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "drivers who are younger than 20",
            "drivers older than 30"
        ]
    },
    {
        "tables": [
            "race"
        ],
        "columns": [
            "race.Winning_team"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "won more than once"
        ]
    },
    {
        "tables": [
            "race"
        ],
        "columns": [
            "race.Winning_team"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "teams won more than 1 race"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID",
            "race.Pole_Position"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "in both 'James Hinchcliffe' pole positions",
            "in both 'Carl Skerlong' pole positions"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID",
            "race.Pole_Position"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "pole position James Hinchcliffe",
            "pole position Carl Skerlong"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID",
            "race.Pole_Position"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "SUBQUERY"
        ],
        "conditions": [
            "never in 'James Hinchcliffe' pole position before"
        ]
    },
    {
        "tables": [
            "driver",
            "race"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver_Name",
            "race.Driver_ID",
            "race.Pole_Position"
        ],
        "sql_keywords": [
            "NOT LIKE",
            "="
        ],
        "conditions": [
            "except for those who had the pole position James Hinchcliffe"
        ]
    },
    {
        "tables": [
            "languages"
        ],
        "columns": [
            "languages.id",
            "languages.name"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages"
        ],
        "columns": [
            "languages.id",
            "languages.name"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages"
        ],
        "columns": [
            "languages.name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages"
        ],
        "columns": [
            "languages.name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages"
        ],
        "columns": [
            "languages.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "contains the word 'ish'"
        ]
    },
    {
        "tables": [
            "languages"
        ],
        "columns": [
            "languages.name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "contains the substring 'ish'"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.name",
            "countries.overall_score"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "descending order of overall scores"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.name",
            "countries.overall_score"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "ordered descending by overall score"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.justice_score"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.justice_score"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.health_score"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "country is not 'Norway'"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.health_score"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "countries other than Norway"
        ]
    },
    {
        "tables": [
            "languages",
            "official_languages"
        ],
        "columns": [
            "languages.id",
            "languages.name",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages",
            "official_languages"
        ],
        "columns": [
            "languages.id",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.name",
            "countries.education_score"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "education_score"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.name",
            "countries.education_score"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "ordered descending by education score"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.name",
            "countries.politics_score"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "name of the country",
            "biggest score in politics"
        ]
    },
    {
        "tables": [
            "countries"
        ],
        "columns": [
            "countries.name",
            "countries.politics_score"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "highest politics score"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages",
            "languages"
        ],
        "columns": [
            "countries.name",
            "languages.name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "countries",
            "languages",
            "official_languages"
        ],
        "columns": [
            "countries.name",
            "languages.name",
            "official_languages.country_id",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "names of the countries",
            "names of their official languages"
        ]
    },
    {
        "tables": [
            "languages",
            "official_languages",
            "countries"
        ],
        "columns": [
            "languages.id",
            "languages.name",
            "official_languages.language_id",
            "official_languages.country_id",
            "countries.id",
            "countries.name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages",
            "official_languages",
            "countries"
        ],
        "columns": [
            "languages.name",
            "official_languages.language_id",
            "official_languages.country_id",
            "countries.id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "countries.name",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "official language",
            "most common"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.id",
            "languages.name",
            "countries.id",
            "countries.name",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "official languages spoken by at least two countries"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "countries.name",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "official languages",
            "spoken in two or more countries"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages",
            "languages"
        ],
        "columns": [
            "countries.id",
            "countries.name",
            "countries.overall_score",
            "official_languages.language_id",
            "official_languages.country_id",
            "languages.id",
            "languages.name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "official language is 'English'"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages",
            "languages"
        ],
        "columns": [
            "countries.overall_score",
            "official_languages.country_id",
            "official_languages.language_id",
            "languages.name"
        ],
        "sql_keywords": [
            "JOIN",
            "WHERE",
            "AVG"
        ],
        "conditions": [
            "English as their official language"
        ]
    },
    {
        "tables": [
            "languages",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most commonly spoken",
            "three official languages"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "countries.name",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names of the three official languages",
            "spoken in the most countries"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.id",
            "languages.name",
            "countries.id",
            "countries.name",
            "countries.overall_score",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "official languages",
            "sorted in descending order",
            "average overall scores",
            "countries speaking them"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "countries.overall_score",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "official languages",
            "sorted descending",
            "average overall scores",
            "countries"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages",
            "languages"
        ],
        "columns": [
            "countries.name",
            "official_languages.country_id",
            "languages.id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "greatest number of official languages"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages",
            "languages"
        ],
        "columns": [
            "countries.id",
            "countries.name",
            "official_languages.country_id",
            "official_languages.language_id",
            "languages.id",
            "languages.name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "languages",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "not the official language of any countries"
        ]
    },
    {
        "tables": [
            "languages",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "official_languages.language_id"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "not the official language of any country"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages"
        ],
        "columns": [
            "countries.name",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "countries do not have any official language"
        ]
    },
    {
        "tables": [
            "countries",
            "official_languages"
        ],
        "columns": [
            "countries.name",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "countries do not have an official language"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "countries.overall_score",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "official language for both countries",
            "overall score greater than 95",
            "overall score less than 90"
        ]
    },
    {
        "tables": [
            "languages",
            "countries",
            "official_languages"
        ],
        "columns": [
            "languages.name",
            "countries.overall_score",
            "official_languages.language_id",
            "official_languages.country_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "official language for countries with an overall score above 95",
            "official language for countries with an overall score below 90"
        ]
    },
    {
        "tables": [
            "Addresses"
        ],
        "columns": [
            "Addresses.town_city",
            "Addresses.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "countries included in addresses",
            "cities included in addresses"
        ]
    },
    {
        "tables": [
            "Addresses"
        ],
        "columns": [
            "Addresses.town_city",
            "Addresses.country"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Addresses",
            "Properties"
        ],
        "columns": [
            "Addresses.county_state_province",
            "Properties.property_address_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Addresses",
            "Properties"
        ],
        "columns": [
            "Addresses.county_state_province",
            "Properties.property_address_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Features"
        ],
        "columns": [
            "Features.feature_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "feature rooftop"
        ]
    },
    {
        "tables": [
            "Features"
        ],
        "columns": [
            "Features.feature_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "feature 'rooftop'"
        ]
    },
    {
        "tables": [
            "Features",
            "Property_Features"
        ],
        "columns": [
            "Features.feature_name",
            "Features.feature_description",
            "Property_Features.feature_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "most commonly seen feature",
            "properties"
        ]
    },
    {
        "tables": [
            "Features",
            "Property_Features"
        ],
        "columns": [
            "Features.feature_name",
            "Features.feature_description",
            "Property_Features.feature_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.room_count"
        ],
        "sql_keywords": [
            "MIN"
        ],
        "conditions": [
            "minimum number of rooms"
        ]
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.room_count"
        ],
        "sql_keywords": [
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.property_id",
            "Properties.garage_yn",
            "Properties.parking_lots"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "1 parking lot",
            "1 garage"
        ]
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.garage_yn",
            "Properties.parking_lots"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "1 parking lot",
            "1 garage"
        ]
    },
    {
        "tables": [
            "Users",
            "Ref_Age_Categories",
            "Ref_User_Categories"
        ],
        "columns": [
            "Users.user_id",
            "Users.age_category_code",
            "Users.user_category_code",
            "Ref_Age_Categories.age_category_code",
            "Ref_Age_Categories.age_category_description",
            "Ref_User_Categories.user_category_code",
            "Ref_User_Categories.user_category_description"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "description contains 'Mother'"
        ]
    },
    {
        "tables": [
            "Users",
            "Ref_Age_Categories"
        ],
        "columns": [
            "Users.age_category_code",
            "Ref_Age_Categories.age_category_description"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "description contains the string Mother"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties"
        ],
        "columns": [
            "Users.user_id",
            "Users.first_name",
            "Properties.owner_user_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "owns the greatest number of properties"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties"
        ],
        "columns": [
            "Users.first_name",
            "Properties.owner_user_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "owns the most properties"
        ]
    },
    {
        "tables": [
            "Properties",
            "Property_Features",
            "Features"
        ],
        "columns": [
            "Properties.property_id",
            "Properties.room_count",
            "Property_Features.property_id",
            "Property_Features.feature_id",
            "Features.feature_id",
            "Features.feature_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "properties with gardens"
        ]
    },
    {
        "tables": [
            "Properties",
            "Property_Features",
            "Features"
        ],
        "columns": [
            "Properties.property_id",
            "Properties.room_count",
            "Property_Features.property_id",
            "Property_Features.feature_id",
            "Features.feature_id",
            "Features.feature_name"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "properties with garden features"
        ]
    },
    {
        "tables": [
            "Properties",
            "Property_Features",
            "Features",
            "Addresses"
        ],
        "columns": [
            "Properties.property_id",
            "Property_Features.property_id",
            "Property_Features.feature_id",
            "Features.feature_id",
            "Features.feature_name",
            "Addresses.address_id",
            "Addresses.town_city"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "properties equipped with a swimming pool"
        ]
    },
    {
        "tables": [
            "Addresses",
            "Properties",
            "Property_Features",
            "Features"
        ],
        "columns": [
            "Addresses.address_id",
            "Addresses.town_city",
            "Properties.property_id",
            "Properties.property_address_id",
            "Property_Features.property_id",
            "Property_Features.feature_id",
            "Features.feature_id",
            "Features.feature_name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "properties have swimming pools"
        ]
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.property_id",
            "Properties.vendor_requested_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lowest price",
            "requested by the vendor",
            "list the id",
            "list the price"
        ]
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.property_id",
            "Properties.vendor_requested_price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lowest requested price from the vendor"
        ]
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.room_count"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Properties"
        ],
        "columns": [
            "Properties.room_count"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Rooms"
        ],
        "columns": [
            "Rooms.room_size"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Rooms"
        ],
        "columns": [
            "Rooms.room_size"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Users",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "User_Searches.search_string"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "users who have searched at least twice",
            "what did they search"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "User_Searches.user_id",
            "User_Searches.search_seq"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "performed two or more searches",
            "search sequence"
        ]
    },
    {
        "tables": [
            "User_Searches"
        ],
        "columns": [
            "User_Searches.search_datetime"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "time of the latest search by a user"
        ]
    },
    {
        "tables": [
            "User_Searches"
        ],
        "columns": [
            "User_Searches.search_datetime"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most recent search"
        ]
    },
    {
        "tables": [
            "User_Searches"
        ],
        "columns": [
            "User_Searches.search_datetime",
            "User_Searches.search_string"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "user searches",
            "time",
            "content",
            "Sort the result descending by content"
        ]
    },
    {
        "tables": [
            "User_Searches"
        ],
        "columns": [
            "User_Searches.search_datetime",
            "User_Searches.search_string"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "search strings",
            "time stamps",
            "sorted by search string descending"
        ]
    },
    {
        "tables": [
            "Addresses",
            "Properties",
            "Users"
        ],
        "columns": [
            "Addresses.zip_postcode",
            "Properties.property_address_id",
            "Properties.owner_user_id",
            "Users.user_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "properties do not belong to users who own at most 2 properties"
        ]
    },
    {
        "tables": [
            "Properties",
            "Addresses",
            "Users"
        ],
        "columns": [
            "Properties.property_address_id",
            "Addresses.zip_postcode",
            "Properties.owner_user_id",
            "Users.user_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "properties not belonging to users who own two or fewer properties"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Users.user_category_code",
            "User_Searches.user_id",
            "User_Searches.search_seq"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "making only one search",
            "list both category and user id"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Users.user_category_code",
            "User_Searches.user_id",
            "User_Searches.search_seq"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "用户只进行了一次搜索",
            "用户的分类代码"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches",
            "Ref_Age_Categories"
        ],
        "columns": [
            "Users.user_id",
            "Users.age_category_code",
            "User_Searches.user_id",
            "User_Searches.search_datetime",
            "Ref_Age_Categories.age_category_code",
            "Ref_Age_Categories.age_category_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age range category",
            "first search"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches",
            "Ref_Age_Categories"
        ],
        "columns": [
            "Users.user_id",
            "Users.age_category_code",
            "User_Searches.user_id",
            "User_Searches.search_datetime",
            "Ref_Age_Categories.age_category_code",
            "Ref_Age_Categories.age_category_description"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "user who made the earliest search"
        ]
    },
    {
        "tables": [
            "Users",
            "Ref_User_Categories"
        ],
        "columns": [
            "Users.login_name",
            "Users.first_name",
            "Ref_User_Categories.user_category_code"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "senior citizen users",
            "ordered by their first names"
        ]
    },
    {
        "tables": [
            "Users",
            "Ref_User_Categories"
        ],
        "columns": [
            "Users.login_name",
            "Users.first_name",
            "Ref_User_Categories.user_category_code"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "senior citizens",
            "sorted by first name"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Users.is_buyer",
            "User_Searches.user_id",
            "User_Searches.search_seq"
        ],
        "sql_keywords": [
            "UNION",
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Users",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Users.is_buyer",
            "User_Searches.user_id",
            "User_Searches.search_seq"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Users"
        ],
        "columns": [
            "Users.login_name",
            "Users.date_registered"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "login name ratione"
        ]
    },
    {
        "tables": [
            "Users"
        ],
        "columns": [
            "Users.date_registered"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "login name is ratione"
        ]
    },
    {
        "tables": [
            "Users"
        ],
        "columns": [
            "Users.first_name",
            "Users.middle_name",
            "Users.last_name",
            "Users.login_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "seller value is 1"
        ]
    },
    {
        "tables": [
            "Users"
        ],
        "columns": [
            "Users.first_name",
            "Users.middle_name",
            "Users.last_name",
            "Users.login_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "users who are sellers"
        ]
    },
    {
        "tables": [
            "Users",
            "Addresses"
        ],
        "columns": [
            "Users.user_address_id",
            "Addresses.line_1_number_building",
            "Addresses.line_2_number_street",
            "Addresses.town_city"
        ],
        "sql_keywords": [
            "=",
            "JOIN"
        ],
        "conditions": [
            "Senior Citizens"
        ]
    },
    {
        "tables": [
            "Users",
            "Addresses"
        ],
        "columns": [
            "Users.user_id",
            "Users.user_category_code",
            "Users.user_address_id",
            "Addresses.address_id",
            "Addresses.line_1_number_building",
            "Addresses.line_2_number_street",
            "Addresses.town_city"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "senior citizens"
        ]
    },
    {
        "tables": [
            "Properties",
            "Property_Features"
        ],
        "columns": [
            "Properties.property_id",
            "Property_Features.property_id",
            "Property_Features.feature_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least 2 features"
        ]
    },
    {
        "tables": [
            "Properties",
            "Property_Features"
        ],
        "columns": [
            "Properties.property_id",
            "Property_Features.property_id",
            "Property_Features.feature_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least two features"
        ]
    },
    {
        "tables": [
            "Properties",
            "Property_Photos"
        ],
        "columns": [
            "Properties.property_id",
            "Property_Photos.property_id",
            "Property_Photos.photo_seq"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Properties",
            "Property_Photos"
        ],
        "columns": [
            "Properties.property_id",
            "Property_Photos.property_id"
        ],
        "sql_keywords": [
            "COUNT",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Users",
            "Properties",
            "Property_Photos"
        ],
        "columns": [
            "Users.user_id",
            "Properties.property_id",
            "Properties.owner_user_id",
            "Property_Photos.property_id",
            "Property_Photos.photo_seq"
        ],
        "sql_keywords": [
            "GROUP BY",
            "COUNT"
        ],
        "conditions": [
            "each owner has photos of his or her properties",
            "list user id",
            "number of photos"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties",
            "Property_Photos"
        ],
        "columns": [
            "Users.user_id",
            "Properties.owner_user_id",
            "Property_Photos.property_id"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY"
        ],
        "conditions": [
            "property owners",
            "have property photos"
        ]
    },
    {
        "tables": [
            "Ref_User_Categories",
            "Users",
            "Properties"
        ],
        "columns": [
            "Ref_User_Categories.user_category_code",
            "Ref_User_Categories.user_category_description",
            "Users.user_id",
            "Users.user_category_code",
            "Properties.property_id",
            "Properties.owner_user_id",
            "Properties.price_max"
        ],
        "sql_keywords": [
            "SUM",
            "="
        ],
        "conditions": [
            "properties owned by single mothers",
            "properties owned by students"
        ]
    },
    {
        "tables": [
            "Ref_User_Categories",
            "Users",
            "Properties"
        ],
        "columns": [
            "Ref_User_Categories.user_category_code",
            "Ref_User_Categories.user_category_description",
            "Users.user_id",
            "Users.user_category_code",
            "Properties.property_id",
            "Properties.owner_user_id",
            "Properties.price_max"
        ],
        "sql_keywords": [
            "SUM",
            "JOIN",
            "WHERE",
            "IN"
        ],
        "conditions": [
            "properties owned by single mothers",
            "properties owned by students"
        ]
    },
    {
        "tables": [
            "User_Property_History",
            "Properties"
        ],
        "columns": [
            "User_Property_History.datestamp",
            "Properties.property_name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "date stamps",
            "property names",
            "property history",
            "ordered by date stamp"
        ]
    },
    {
        "tables": [
            "User_Property_History",
            "Properties"
        ],
        "columns": [
            "User_Property_History.datestamp",
            "Properties.property_name"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY"
        ],
        "conditions": [
            "date stamp",
            "property name",
            "property history event",
            "sorted by date stamp"
        ]
    },
    {
        "tables": [
            "Ref_Property_Types",
            "Properties"
        ],
        "columns": [
            "Ref_Property_Types.property_type_code",
            "Ref_Property_Types.property_type_description",
            "Properties.property_type_code"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "most common property type",
            "description",
            "code"
        ]
    },
    {
        "tables": [
            "Ref_Property_Types",
            "Properties"
        ],
        "columns": [
            "Ref_Property_Types.property_type_code",
            "Ref_Property_Types.property_type_description",
            "Properties.property_type_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Ref_Age_Categories"
        ],
        "columns": [
            "Ref_Age_Categories.age_category_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age category code 'Over 60'"
        ]
    },
    {
        "tables": [
            "Ref_Age_Categories"
        ],
        "columns": [
            "Ref_Age_Categories.age_category_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age category 'Over 60'"
        ]
    },
    {
        "tables": [
            "Rooms"
        ],
        "columns": [
            "Rooms.room_size"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Rooms"
        ],
        "columns": [
            "Rooms.room_size"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Users",
            "Addresses"
        ],
        "columns": [
            "Users.first_name",
            "Users.user_address_id",
            "Addresses.address_id",
            "Addresses.country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name Robbie"
        ]
    },
    {
        "tables": [
            "Addresses",
            "Users"
        ],
        "columns": [
            "Addresses.country",
            "Users.first_name",
            "Users.user_address_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "first name Robbie"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties",
            "Addresses"
        ],
        "columns": [
            "Users.user_id",
            "Users.user_address_id",
            "Users.first_name",
            "Users.middle_name",
            "Users.last_name",
            "Properties.property_address_id",
            "Properties.owner_user_id",
            "Addresses.address_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "own the property they live in"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties"
        ],
        "columns": [
            "Users.user_id",
            "Users.first_name",
            "Users.middle_name",
            "Users.last_name",
            "Properties.owner_user_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "live in properties",
            "own properties"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Properties.owner_user_id",
            "User_Searches.user_id",
            "User_Searches.search_string"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "do not own a single property"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Properties.owner_user_id",
            "User_Searches.user_id",
            "User_Searches.search_string"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "do not own any properties"
        ]
    },
    {
        "tables": [
            "Users",
            "Properties",
            "User_Searches"
        ],
        "columns": [
            "Users.user_id",
            "Users.last_name",
            "Properties.owner_user_id",
            "User_Searches.user_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least 2 properties",
            "searched at most twice"
        ]
    },
    {
        "tables": [
            "Users",
            "User_Searches",
            "Properties",
            "User_Property_History"
        ],
        "columns": [
            "Users.user_id",
            "Users.last_name",
            "User_Searches.user_id",
            "User_Searches.search_seq",
            "Properties.owner_user_id",
            "User_Property_History.user_id",
            "User_Property_History.property_id"
        ],
        "sql_keywords": [
            "DISTINCT",
            "INTERSECT"
        ],
        "conditions": [
            "searched two or fewer times",
            "own two or more properties"
        ]
    },
    {
        "tables": [
            "bike"
        ],
        "columns": [
            "bike.id",
            "bike.product_name",
            "bike.weight",
            "bike.price",
            "bike.material"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "heavier than 780 grams"
        ]
    },
    {
        "tables": [
            "bike"
        ],
        "columns": [
            "bike.product_name",
            "bike.weight",
            "bike.price"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "List the product names",
            "List the weights",
            "Bikes",
            "Ascending order of price"
        ]
    },
    {
        "tables": [
            "cyclist"
        ],
        "columns": [
            "cyclist.heat",
            "cyclist.name",
            "cyclist.nation"
        ],
        "sql_keywords": [],
        "conditions": [
            "heat",
            "name",
            "nation"
        ]
    },
    {
        "tables": [
            "bike"
        ],
        "columns": [
            "bike.weight"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "bike"
        ],
        "columns": [
            "bike.price",
            "bike.material"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "material 'Carbon CC'"
        ]
    },
    {
        "tables": [
            "cyclist"
        ],
        "columns": [
            "cyclist.name",
            "cyclist.result"
        ],
        "sql_keywords": [
            "NOT LIKE",
            "="
        ],
        "conditions": [
            "not from 'Russia'"
        ]
    },
    {
        "tables": [
            "bike",
            "cyclists_own_bikes"
        ],
        "columns": [
            "bike.id",
            "bike.product_name",
            "cyclists_own_bikes.purchase_year"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "purchased after year 2015"
        ]
    },
    {
        "tables": [
            "bike",
            "cyclists_own_bikes"
        ],
        "columns": [
            "bike.id",
            "bike.product_name",
            "cyclists_own_bikes.bike_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "purchased by at least 4 cyclists"
        ]
    },
    {
        "tables": [
            "cyclist",
            "cyclists_own_bikes"
        ],
        "columns": [
            "cyclist.id",
            "cyclist.name",
            "cyclists_own_bikes.cyclist_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "id",
            "name",
            "cyclist",
            "owns the most bikes"
        ]
    },
    {
        "tables": [
            "bike",
            "cyclist",
            "cyclists_own_bikes"
        ],
        "columns": [
            "bike.product_name",
            "cyclist.nation",
            "cyclists_own_bikes.cyclist_id",
            "cyclists_own_bikes.bike_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cyclists from 'Russia'",
            "cyclists from 'Great Britain'"
        ]
    },
    {
        "tables": [
            "cyclist"
        ],
        "columns": [
            "cyclist.heat"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "cyclist",
            "cyclists_own_bikes"
        ],
        "columns": [
            "cyclist.id",
            "cyclists_own_bikes.cyclist_id",
            "cyclists_own_bikes.purchase_year"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "did not purchase any bike",
            "after year 2015"
        ]
    },
    {
        "tables": [
            "cyclist",
            "cyclists_own_bikes",
            "bike"
        ],
        "columns": [
            "cyclist.name",
            "cyclist.result",
            "cyclists_own_bikes.cyclist_id",
            "cyclists_own_bikes.bike_id",
            "bike.product_name"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "cyclists with better results than '4:21.558'",
            "distinct racing bikes"
        ]
    },
    {
        "tables": [
            "bike",
            "cyclist",
            "cyclists_own_bikes"
        ],
        "columns": [
            "bike.product_name",
            "bike.price",
            "cyclist.name",
            "cyclists_own_bikes.cyclist_id",
            "cyclists_own_bikes.bike_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "name of the bike",
            "price of the bike",
            "owned by both the cyclists named 'Bradley Wiggins'",
            "owned by the cyclist named 'Antonio Tauler'"
        ]
    },
    {
        "tables": [
            "cyclist",
            "cyclists_own_bikes"
        ],
        "columns": [
            "cyclist.name",
            "cyclist.nation",
            "cyclist.result",
            "cyclists_own_bikes.cyclist_id"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "did not purchase any racing bike"
        ]
    },
    {
        "tables": [
            "bike"
        ],
        "columns": [
            "bike.product_name",
            "bike.material"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "substring 'fiber' in their material"
        ]
    },
    {
        "tables": [
            "cyclist",
            "cyclists_own_bikes"
        ],
        "columns": [
            "cyclist.id",
            "cyclists_own_bikes.cyclist_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "Order by cyclist id"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "most expensive cake",
            "its flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "most expensive cake"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cheapest cookie",
            "flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cheapest cookie",
            "id",
            "flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "has apple flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "apple flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cost less than 3 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cost less than 3 dollars"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "items.Receipt",
            "items.Item",
            "receipts.ReceiptNumber",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "bought a cake",
            "with lemon flavor"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "items.Receipt",
            "items.Item",
            "receipts.ReceiptNumber",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "bought lemon flavored cake"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "goods.Id",
            "goods.Food",
            "items.Receipt",
            "items.Item",
            "receipts.ReceiptNumber",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "items.Item",
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "shopped at the bakery at least 15 times"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "at least 15 receipts"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.LastName",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "shopped at the bakery more than 10 times"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.LastName",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "last names of customers",
            "been to the bakery more than 10 times"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "receipts.ReceiptNumber",
            "items.Receipt",
            "items.Item",
            "goods.Id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "customer number 15"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "receipts.ReceiptNumber",
            "items.Receipt",
            "items.Item",
            "goods.Id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "customer 15"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average prices",
            "minimum prices",
            "maximum prices"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "items.Receipt",
            "goods.Id",
            "goods.Food"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "Cake was bought",
            "Cookie was bought"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "items.Receipt",
            "goods.Id",
            "goods.Food"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "cakes were purchased",
            "cookies were purchased"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.LastName",
            "receipts.ReceiptNumber",
            "receipts.CustomerId",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Food"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "customer with last name LOGAN",
            "purchased Croissant"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.LastName",
            "receipts.ReceiptNumber",
            "receipts.CustomerId",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Food"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "last name is Logan",
            "purchased a croissant"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "most expensive item"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "most expensive item was purchased"
        ]
    },
    {
        "tables": [
            "goods",
            "items"
        ],
        "columns": [
            "goods.Id",
            "items.Item"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "bought the least number of times"
        ]
    },
    {
        "tables": [
            "items",
            "goods"
        ],
        "columns": [
            "items.Item",
            "goods.Id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Price"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "Apricot flavor",
            "cheaper than 5 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Price"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "Apricot flavor",
            "price lower than 5 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "cost more than 10 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "cost more than 10 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "price is below the average of all goods"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cost less than the average good"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "goods are cheaper than some goods of type Tart",
            "distinct ids of all goods"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cost less than any Tart"
        ]
    },
    {
        "tables": [
            "goods",
            "items"
        ],
        "columns": [
            "goods.Id",
            "goods.Price",
            "items.Receipt",
            "items.Item"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "bought a good",
            "costs more than 13 dollars"
        ]
    },
    {
        "tables": [
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "goods.Id",
            "goods.Price",
            "items.Receipt",
            "items.Item",
            "receipts.ReceiptNumber"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "bought a good that costs more than 13 dollars"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "goods.Price",
            "receipts.Date",
            "receipts.CustomerId",
            "customers.Id",
            "items.Item",
            "items.Receipt"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "costs more than 15 dollars"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "goods.Price",
            "receipts.Date",
            "receipts.CustomerId",
            "customers.Id",
            "items.Item",
            "goods.Id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "purchased a good costing over 15 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "id has 'APP'"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "id contains 'APP'"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "good has '70' in its id",
            "price of the good"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "id包含'70'",
            "查询id和价格"
        ]
    },
    {
        "tables": [
            "customers"
        ],
        "columns": [
            "customers.LastName"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customers"
        ],
        "columns": [
            "customers.LastName"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "last names of the customers",
            "alphabetical order"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "distinct good ids"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods",
            "customers"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "receipts.CustomerId",
            "items.Receipt",
            "items.Ordinal",
            "items.Item",
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price",
            "customers.Id",
            "customers.LastName",
            "customers.FirstName"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "apple flavor pie was bought",
            "customer id 12 shopped"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods",
            "customers"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "items.Receipt",
            "goods.Id",
            "goods.Flavor",
            "customers.Id"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "an apple flavor pie was purchased",
            "the customer with id 12 shopped"
        ]
    },
    {
        "tables": [
            "receipts"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "receipts have the latest date"
        ]
    },
    {
        "tables": [
            "receipts"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "receipt number with the latest date",
            "latest date"
        ]
    },
    {
        "tables": [
            "receipts",
            "goods",
            "items"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "goods.Id",
            "goods.Price",
            "items.Receipt",
            "items.Item"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "receipt has the earliest date",
            "receipt has a good with price above 10"
        ]
    },
    {
        "tables": [
            "receipts",
            "goods",
            "items"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "goods.Price",
            "items.Receipt",
            "items.Item"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "price above 10",
            "earliest date"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "Cookie",
            "Cake",
            "cost between 3 and 7 dollars"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "cost between 3 and 7 dollars"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.FirstName",
            "customers.LastName",
            "receipts.Date"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "visited on the earliest date"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "customers.LastName",
            "customers.FirstName",
            "receipts.Date",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "visited on the earliest date"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "flavor is blackberry",
            "flavor is blueberry"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "blackberry flavor",
            "blueberry flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "goods with cheese flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cheapest",
            "cheese flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Price"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY"
        ],
        "conditions": [
            "highest prices",
            "lowest prices",
            "average prices",
            "grouped by flavor",
            "ordered by flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Price"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "maximum prices",
            "minimum prices",
            "average prices",
            "ordered by flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "MIN",
            "MAX",
            "ORDER BY"
        ],
        "conditions": [
            "minimum prices of food goods",
            "maximum prices of food goods",
            "ordered by food"
        ]
    },
    {
        "tables": [
            "receipts"
        ],
        "columns": [
            "receipts.Date"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "receipts"
        ],
        "columns": [
            "receipts.Date"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "most receipts were given"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "customers.LastName",
            "customers.FirstName",
            "receipts.ReceiptNumber",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "customer shopped most often",
            "how many times"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "receipts.ReceiptNumber"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "customer made the most purchases",
            "number of purchases made"
        ]
    },
    {
        "tables": [
            "receipts",
            "customers"
        ],
        "columns": [
            "receipts.Date",
            "receipts.CustomerId",
            "customers.Id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "receipts",
            "customers"
        ],
        "columns": [
            "receipts.Date",
            "receipts.CustomerId",
            "customers.Id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.FirstName",
            "customers.LastName",
            "receipts.CustomerId",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Flavor",
            "goods.Food"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "bought apple flavor Tart"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "customers.LastName",
            "customers.FirstName",
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "items.Receipt",
            "items.Item",
            "receipts.ReceiptNumber",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "bought apple flavored Tarts"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "=",
            "<"
        ],
        "conditions": [
            "price is lower than any Croissant"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "cheaper than any croissant"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "price is at least as much as the average price of Tart"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "cakes that are at least as expensive as the average Tart"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "price is above twice the average price of all goods"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "价格超过平均价格的两倍"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "id",
            "flavor",
            "type of food",
            "price"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ids",
            "flavors",
            "food types",
            "ordered by price"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "id",
            "flavor"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ids of cakes",
            "flavors of cakes",
            "ordered by flavor"
        ]
    },
    {
        "tables": [
            "goods",
            "items"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "items.Item",
            "items.Receipt"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "have chocolate flavor",
            "were not bought more than 10 times"
        ]
    },
    {
        "tables": [
            "goods",
            "items"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price",
            "items.Receipt",
            "items.Ordinal",
            "items.Item"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "items with chocolate flavor",
            "purchased at most 10 times"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT",
            "NOT IN"
        ],
        "conditions": [
            "flavors available for Cake",
            "not available for Tart"
        ]
    },
    {
        "tables": [
            "goods"
        ],
        "columns": [
            "goods.Flavor",
            "goods.Food"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "flavors of Cakes that are not available for Tart"
        ]
    },
    {
        "tables": [
            "goods",
            "items"
        ],
        "columns": [
            "goods.Id",
            "goods.Flavor",
            "goods.Food",
            "goods.Price",
            "items.Receipt",
            "items.Ordinal",
            "items.Item"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "goods",
            "items"
        ],
        "columns": [
            "goods.Id",
            "items.Item"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "receipts.ReceiptNumber",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "spent more than 150 dollars in total"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "receipts.ReceiptNumber",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "spent over 150 dollars in total"
        ]
    },
    {
        "tables": [
            "customers",
            "goods",
            "items",
            "receipts"
        ],
        "columns": [
            "customers.Id",
            "goods.Id",
            "goods.Price",
            "items.Receipt",
            "items.Item",
            "receipts.ReceiptNumber",
            "receipts.CustomerId"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average spending for each good is above 5"
        ]
    },
    {
        "tables": [
            "customers",
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "customers.Id",
            "receipts.CustomerId",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "AVG",
            ">"
        ],
        "conditions": [
            "spend more than 5 on average for each good"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "bakery sell more than 100 dollars in total"
        ]
    },
    {
        "tables": [
            "receipts",
            "items",
            "goods"
        ],
        "columns": [
            "receipts.ReceiptNumber",
            "receipts.Date",
            "items.Receipt",
            "items.Item",
            "goods.Id",
            "goods.Price"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "bakery sold more than 100 dollars worth of goods in total"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver"
        ],
        "sql_keywords": [
            "COUNT",
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "team"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Make",
            "driver.Points",
            "team.Make"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": [
            "points are greater than 150"
        ]
    },
    {
        "tables": [
            "driver",
            "team"
        ],
        "columns": [
            "driver.Make",
            "driver.Points",
            "team.Make"
        ],
        "sql_keywords": [
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "points greater than 150"
        ]
    },
    {
        "tables": [
            "driver",
            "team"
        ],
        "columns": [
            "driver.Age",
            "driver.Make",
            "team.Make"
        ],
        "sql_keywords": [
            "GROUP BY",
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "team",
            "team_driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Age",
            "driver.Make",
            "team.Team_ID",
            "team.Make",
            "team_driver.Team_ID",
            "team_driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average age of drivers",
            "each make"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Age",
            "driver.Laps"
        ],
        "sql_keywords": [
            "AVG",
            "WHERE"
        ],
        "conditions": [
            "younger than 20"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Age",
            "driver.Laps"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age under 20"
        ]
    },
    {
        "tables": [
            "team"
        ],
        "columns": [
            "team.Manager",
            "team.Sponsor",
            "team.Car_Owner"
        ],
        "sql_keywords": [
            "=",
            "ORDER BY"
        ],
        "conditions": [
            "managers",
            "sponsors",
            "teams",
            "Car Owners"
        ]
    },
    {
        "tables": [
            "team"
        ],
        "columns": [
            "team.Manager",
            "team.Sponsor",
            "team.Car_Owner"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "manager",
            "sponsor",
            "team",
            "car owner"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver"
        ],
        "columns": [
            "team.Make",
            "team_driver.Team_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "has more than one team"
        ]
    },
    {
        "tables": [
            "team",
            "driver"
        ],
        "columns": [
            "team.Make",
            "driver.Make"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "make has more than one team"
        ]
    },
    {
        "tables": [
            "team"
        ],
        "columns": [
            "team.Make"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "car owner 'Buddy Arrington'"
        ]
    },
    {
        "tables": [
            "team"
        ],
        "columns": [
            "team.Make"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "car owner is 'Buddy Arrington'"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Points"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum points",
            "minimum points"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Points"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Points"
        ],
        "sql_keywords": [
            "<"
        ],
        "conditions": [
            "points smaller than 150"
        ]
    },

    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Country",
            "driver.Age",
            "driver.Car_#",
            "driver.Make",
            "driver.Points",
            "driver.Laps",
            "driver.Winnings"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "points are below 150"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ascending order of age"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Age"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sort driver names by age in ascending order"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Points"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "driver names",
            "descending order of points"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Driver",
            "driver.Points"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "country"
        ],
        "columns": [
            "driver.Driver",
            "country.Country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver",
            "country"
        ],
        "columns": [
            "driver.Driver",
            "country.Country"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "driver's name",
            "driver's country"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "country.Capital",
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Country",
            "driver.Points"
        ],
        "sql_keywords": [],
        "conditions": [
            "countries with capital 'Dublin'"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "country.Capital",
            "driver.Driver",
            "driver.Country",
            "driver.Points"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "capital is Dublin"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "country.Official_native_language",
            "driver.Driver",
            "driver.Country",
            "driver.Age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "official native language is English"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "country.Official_native_language",
            "driver.Driver",
            "driver.Country",
            "driver.Age"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "countries use 'English' as official native language"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Country",
            "driver.Points"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "drivers with points larger than 150"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Country",
            "driver.Points"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "some drivers have points above 150"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "country.Capital",
            "driver.Driver",
            "driver.Country",
            "driver.Points"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "driver with the most points"
        ]
    },
    {
        "tables": [
            "driver",
            "country"
        ],
        "columns": [
            "driver.Country",
            "driver.Points",
            "country.Country_Id",
            "country.Capital"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "driver with the highest points",
            "capital of the country"
        ]
    },
    {
        "tables": [
            "team",
            "driver",
            "team_driver"
        ],
        "columns": [
            "team.Make",
            "driver.Driver",
            "team_driver.Team_ID",
            "team_driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "team",
            "driver"
        ],
        "columns": [
            "team.Make",
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Make"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "make",
            "count of drivers"
        ]
    },
    {
        "tables": [
            "team",
            "driver",
            "team_driver"
        ],
        "columns": [
            "team.Make",
            "driver.Driver",
            "team_driver.Team_ID",
            "team_driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "make associated with most drivers"
        ]
    },
    {
        "tables": [
            "driver",
            "team"
        ],
        "columns": [
            "driver.Make",
            "team.Make"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Make"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "driver makes associated with at least three drivers"
        ]
    },
    {
        "tables": [
            "team",
            "driver",
            "team_driver"
        ],
        "columns": [
            "team.Make",
            "driver.Driver_ID",
            "team_driver.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "make is associated with 3 or more drivers"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver"
        ],
        "columns": [
            "team.Team_ID",
            "team.Team",
            "team_driver.Team_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "do not have any drivers"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver"
        ],
        "columns": [
            "team.Team_ID",
            "team_driver.Team_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "team does not have drivers"
        ]
    },
    {
        "tables": [
            "country",
            "driver",
            "team"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Country",
            "driver.Make",
            "team.Make"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "drivers with make 'Dodge'",
            "drivers with make 'Chevrolet'"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "driver.Driver_ID",
            "driver.Driver",
            "driver.Country",
            "driver.Make"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "drivers with make 'Dodge'",
            "drivers with make 'Chevrolet'"
        ]
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Points"
        ],
        "sql_keywords": [
            "SUM",
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "driver"
        ],
        "columns": [
            "driver.Points"
        ],
        "sql_keywords": [
            "SUM",
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "driver.Driver",
            "driver.Country"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no driver come from"
        ]
    },
    {
        "tables": [
            "country",
            "driver"
        ],
        "columns": [
            "country.Country_Id",
            "country.Country",
            "driver.Driver",
            "driver.Country"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "do not have any drivers"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver",
            "driver"
        ],
        "columns": [
            "team.Manager",
            "team.Sponsor",
            "team_driver.Team_ID",
            "team_driver.Driver_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "team that has the most drivers"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver",
            "driver"
        ],
        "columns": [
            "team.Manager",
            "team.Sponsor",
            "team_driver.Team_ID",
            "team_driver.Driver_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "DISTINCT",
            "GROUP BY",
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "team that has the most drivers"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver",
            "driver"
        ],
        "columns": [
            "team.Manager",
            "team.Car_Owner",
            "team_driver.Team_ID",
            "team_driver.Driver_ID",
            "driver.Driver_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "manager",
            "car owner",
            "team has at least 2 drivers"
        ]
    },
    {
        "tables": [
            "team",
            "team_driver",
            "driver"
        ],
        "columns": [
            "team.Manager",
            "team.Car_Owner",
            "team_driver.Team_ID",
            "team_driver.Driver_ID",
            "driver.Driver"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "team with two or more drivers"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Institution_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ordered alphabetically"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Name",
            "institution.Founded"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ascending order of founded year"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Name",
            "institution.Founded"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of institutions",
            "ordered by the years in which they were founded"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.City",
            "institution.Province"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "cities",
            "provinces",
            "institutions"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.City",
            "institution.Province"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Enrollment"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum enrollment",
            "minimum enrollment"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Enrollment"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Affiliation",
            "institution.City"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "not in city 'Vancouver'"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Affiliation",
            "institution.City"
        ],
        "sql_keywords": [
            "NOT LIKE"
        ],
        "conditions": [
            "not in the city of Vancouver"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Stadium",
            "institution.Capacity"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "stadiums of institutions",
            "descending order of the capacity"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Stadium",
            "institution.Capacity"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "stadiums of institutions",
            "ordered by capacity descending"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Enrollment",
            "institution.Stadium"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "stadium of the institution",
            "largest enrollment"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Enrollment",
            "institution.Stadium"
        ],
        "sql_keywords": [
            "MAX",
            "="
        ],
        "conditions": [
            "institution has the greatest enrollment"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Name",
            "Championship.Nickname"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "names of institutions",
            "nicknames of institutions"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Name",
            "Championship.Nickname"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "Return the names of institutions",
            "Return their nicknames"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Name",
            "institution.Enrollment",
            "Championship.Nickname"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "smallest enrollment"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Name",
            "institution.Enrollment",
            "Championship.Nickname"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lowest enrollment"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Name",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "descending order of the number of championships"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Name",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "ordered descending by their number of championships"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Name",
            "Championship.Institution_ID",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "at least one championship"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Name",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "have 1 or more championships"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Affiliation",
            "Championship.Institution_ID",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "SUM",
            "JOIN"
        ],
        "conditions": [
            "institution with public affiliation"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Affiliation",
            "Championship.Institution_ID",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Public affiliation"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Affiliation",
            "institution.Institution_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Affiliation"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Affiliation"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Affiliation"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Founded"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than one institution founded"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Founded"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 1 institution was founded",
            "number of institutions founded in each of those"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Capacity",
            "Championship.Nickname"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "nicknames of institutions",
            "descending order of capacity"
        ]
    },
    {
        "tables": [
            "institution",
            "Championship"
        ],
        "columns": [
            "institution.Institution_ID",
            "institution.Name",
            "institution.Team",
            "institution.City",
            "institution.Province",
            "institution.Founded",
            "institution.Affiliation",
            "institution.Enrollment",
            "institution.Endowment",
            "institution.Stadium",
            "institution.Capacity",
            "Championship.Institution_ID",
            "Championship.Nickname",
            "Championship.Joined",
            "Championship.Number_of_Championships"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "ordered descending by their capacities"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.City",
            "institution.Enrollment"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "city is Vancouver",
            "city is Calgary"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.City",
            "institution.Enrollment"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "city of Vancouver",
            "city of Calgary"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Province",
            "institution.Founded"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "institutions founded before 1920",
            "institutions founded after 1950"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Province",
            "institution.Founded"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "institutions founded before 1920",
            "institutions founded after 1950"
        ]
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Province"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "institution"
        ],
        "columns": [
            "institution.Province"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "value larger than $150"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "value greater than 150"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Value"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Value"
        ],
        "sql_keywords": [
            "AVG",
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "AVG",
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "SUM",
            "AVG"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": [
            "has the highest total values in all boxes"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Value"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Value"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Location"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "stored at the warehouses located at Chicago",
            "stored at the warehouses located at New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "LIKE",
            "UNION"
        ],
        "conditions": [
            "boxes stored in warehouses",
            "warehouses in either Chicago or New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "located at Chicago",
            "located at New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "located in Chicago",
            "located in New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "warehouses located in Chicago",
            "warehouses located in New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "stored in Chicago",
            "stored in New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT",
            "NOT IN"
        ],
        "conditions": [
            "not in the warehouses located at New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT",
            "NOT IN"
        ],
        "conditions": [
            "contents cannot be found in warehouses in New York"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "contents Rocks",
            "not Scissors"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "warehouses have boxes containing Rocks",
            "warehouses do not have boxes containing Scissors"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "store contents Rocks",
            "store contents Scissors"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "contents are Rocks",
            "contents are Scissors"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "store contents Rocks",
            "store contents Scissors"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "boxes that contain Rocks",
            "boxes that contain Scissors"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sorted by their values"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "ordered by their values"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "lowest value"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "has the smallest value"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "value is higher than the average value of all boxes"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "value is higher than the average value across all boxes"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": [
            "List all different types of contents",
            "ordered by contents"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "DISTINCT",
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Value",
            "Boxes.Contents"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "value is higher than the value of any boxes with Rocks as content"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "value is greater than the value of any box that contains Rocks"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "value is higher than the value of all boxes with Scissors as content"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "value is higher than the values of all boxes containing Scissors"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "SUM",
            "MAX"
        ],
        "conditions": [
            "boxes stored in the warehouse",
            "largest capacity"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "SUM",
            "MAX"
        ],
        "conditions": [
            "boxes kept in the warehouse",
            "greatest capacity"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "AVG",
            ">"
        ],
        "conditions": [
            "average value of the boxes is greater than 150"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "AVG",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "average value greater than 150"
        ]
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Boxes"
        ],
        "columns": [
            "Boxes.Contents",
            "Boxes.Value"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Location",
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Location",
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "SUM"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Location",
            "Boxes.Contents",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "Rocks stored within boxes"
        ]
    },
    {
        "tables": [
            "Boxes",
            "Warehouses"
        ],
        "columns": [
            "Boxes.Code",
            "Warehouses.Location"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Select the code of each box",
            "along with the name of the city the box is located in"
        ]
    },
    {
        "tables": [
            "Boxes",
            "Warehouses"
        ],
        "columns": [
            "Boxes.Code",
            "Warehouses.Location"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "located in Chicago"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "boxes stored in warehouses",
            "warehouses in Chicago"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Warehouses.Capacity",
            "Boxes.Code",
            "Boxes.Contents",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Warehouses"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Capacity"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "warehouses that are above capacity"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Capacity",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "warehouses have more boxes than their capacity"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Code",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "NOT IN"
        ],
        "conditions": [
            "boxes are not in the warehouses located at Chicago"
        ]
    },
    {
        "tables": [
            "Warehouses",
            "Boxes"
        ],
        "columns": [
            "Warehouses.Code",
            "Warehouses.Location",
            "Boxes.Value",
            "Boxes.Warehouse"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "contained in any location but Chicago"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.University_Name",
            "university.City",
            "university.State"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "alphabetical order of university name"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.University_Name",
            "university.City",
            "university.State"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names",
            "cities",
            "states",
            "alphabetical order by name of the university"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "university.City",
            "university.State"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "universities in Illinois",
            "universities in Ohio"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "university.City",
            "university.State"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "located in Illinois",
            "located in Ohio"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Enrollment"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Enrollment"
        ],
        "sql_keywords": [
            "MAX",
            "AVG",
            "MIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Team_Name",
            "university.Enrollment"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "enrollments above the average"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.Team_Name",
            "university.Enrollment",
            "overall_ranking.University_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "universities that have more people enrolled than average"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "home conferences"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference",
            "university.University_ID"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference",
            "university.University_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.State"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.State"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference",
            "university.Enrollment"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average enrollment of universities above 2000"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference",
            "university.Enrollment"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "average university enrollment above 2000"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Enrollment",
            "university.Home_Conference"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "least number of total enrollment"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.Home_Conference",
            "university.Enrollment"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "home conferences",
            "fewest number of people enrolled"
        ]
    },
    {
        "tables": [
            "major"
        ],
        "columns": [
            "major.Major_Name",
            "major.Major_Code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "major"
        ],
        "columns": [
            "major.Major_Name",
            "major.Major_Code"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names",
            "codes",
            "ordered by their code"
        ]
    },
    {
        "tables": [
            "university",
            "major_ranking",
            "major"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "major_ranking.Rank",
            "major_ranking.Major_ID",
            "major.Major_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "university with name Augustana College"
        ]
    },
    {
        "tables": [
            "university",
            "major",
            "major_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "major.Major_ID",
            "major.Major_Name",
            "major_ranking.Rank"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "university",
            "major_ranking",
            "major"
        ],
        "columns": [
            "university.University_Name",
            "university.City",
            "university.State",
            "major_ranking.Rank",
            "major_ranking.Major_ID",
            "major.Major_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rank 1 on Accounting major"
        ]
    },
    {
        "tables": [
            "university",
            "major_ranking",
            "major"
        ],
        "columns": [
            "university.University_Name",
            "university.City",
            "university.State",
            "major_ranking.Rank",
            "major_ranking.University_ID",
            "major_ranking.Major_ID",
            "major.Major_Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "number 1 ranked Accounting major"
        ]
    },
    {
        "tables": [
            "university",
            "major_ranking"
        ],
        "columns": [
            "university.University_Name",
            "major_ranking.Rank",
            "major_ranking.University_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "most number of majors with rank 1"
        ]
    },
    {
        "tables": [
            "university",
            "major_ranking"
        ],
        "columns": [
            "university.University_Name",
            "major_ranking.Rank",
            "major_ranking.University_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "most majors ranked number 1"
        ]
    },
    {
        "tables": [
            "university",
            "major_ranking",
            "overall_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "major_ranking.Rank",
            "major_ranking.University_ID",
            "overall_ranking.University_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "university names without a major with rank 1"
        ]
    },
    {
        "tables": [
            "university",
            "major_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "major_ranking.Rank",
            "major_ranking.University_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "universities without any majors ranked number 1"
        ]
    },
    {
        "tables": [
            "university",
            "major",
            "major_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "major.Major_ID",
            "major.Major_Name",
            "major_ranking.Rank",
            "major_ranking.University_ID",
            "major_ranking.Major_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "major Accounting",
            "major Urban Education"
        ]
    },
    {
        "tables": [
            "university",
            "major",
            "major_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "major.Major_ID",
            "major.Major_Name",
            "major_ranking.Rank",
            "major_ranking.University_ID",
            "major_ranking.Major_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "has Accounting major",
            "has Urban Education major"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Rank"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "universities in Wisconsin state"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Rank",
            "university.State"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "university in Wisconsin"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Research_point"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "university name",
            "highest research point"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Research_point"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "university with the most research points"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Reputation_point"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "university names",
            "ascending order",
            "reputation points"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.University_Name",
            "overall_ranking.Reputation_point"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "names of all universities",
            "ascending order of reputation points"
        ]
    },
    {
        "tables": [
            "university",
            "major",
            "major_ranking"
        ],
        "columns": [
            "university.University_Name",
            "major.Major_Name",
            "major_ranking.Rank"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "university with major Accounting",
            "ranked 3 or above"
        ]
    },
    {
        "tables": [
            "university",
            "major",
            "major_ranking"
        ],
        "columns": [
            "university.University_Name",
            "major.Major_Name",
            "major_ranking.Rank"
        ],
        "sql_keywords": [
            "=",
            "AND"
        ],
        "conditions": [
            "Accounting major ranked 3 or higher"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.Enrollment",
            "overall_ranking.Rank",
            "overall_ranking.University_ID"
        ],
        "sql_keywords": [
            "=",
            "<="
        ],
        "conditions": [
            "overall rank 5 or below"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_ID",
            "university.Enrollment",
            "overall_ranking.Rank",
            "overall_ranking.University_ID"
        ],
        "sql_keywords": [
            "=",
            "<="
        ],
        "conditions": [
            "rank of 5 or below"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Citation_point"
        ],
        "sql_keywords": [
            "=",
            "INTERSECT"
        ],
        "conditions": [
            "reputation points are top 3 and above"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking"
        ],
        "columns": [
            "university.University_Name",
            "overall_ranking.Citation_point"
        ],
        "sql_keywords": [
            "DISTINCT",
            "="
        ],
        "conditions": [
            "name of the universities",
            "citation point of the universities",
            "top 3 reputation points"
        ]
    },
    {
        "tables": [
            "university"
        ],
        "columns": [
            "university.State",
            "university.Enrollment"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than two universities",
            "enrollment smaller than 3000"
        ]
    },
    {
        "tables": [
            "university",
            "overall_ranking",
            "major_ranking"
        ],
        "columns": [
            "university.State",
            "university.Enrollment",
            "university.University_ID",
            "overall_ranking.University_ID",
            "major_ranking.University_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "more than 2 universities",
            "enrollment less than 3000"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "movies don’t have any rating"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "movies do not have any ratings"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is ‘G’"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "movies",
            "G ratings"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "played in the Odeon theater"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "played in the Odeon theater"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "movies are played in any theater",
            "name of the corresponding theater"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "movies are played in any theater",
            "name of the corresponding theater"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is ‘G’"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "movies had a 'G' rating"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating",
            "MovieTheaters.Code",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating",
            "MovieTheaters.Code",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating",
            "MovieTheaters.Code",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating",
            "MovieTheaters.Code",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Code",
            "MovieTheaters.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Code",
            "MovieTheaters.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name includes the word 'Citizen'"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "name including a word like 'Citizen'"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating",
            "MovieTheaters.Code",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "=",
            "UNION"
        ],
        "conditions": [
            "rating 'G'",
            "rating 'PG'"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Rating",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "playing 'G' rated movies",
            "playing 'PG' rated movies"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "=",
            "OR"
        ],
        "conditions": [
            "played in cinema Odeon",
            "played in cinema Imperial"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "played at the Odeon theater",
            "played at the Imperial theater"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "movie is on in Odeon theater",
            "movie is on in Imperial theater"
        ]
    },
    {
        "tables": [
            "MovieTheaters",
            "Movies"
        ],
        "columns": [
            "MovieTheaters.Movie",
            "Movies.Title"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "movie is playing at the Odeon",
            "movie is playing at the Imperial theater"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "not played in Odeon theater"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "NOT",
            "IN"
        ],
        "conditions": [
            "not playing at the Odeon theater"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "movie names",
            "alphabetical order"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "titles of all movies",
            "sorted by their ratings"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "sorted by rating"
        ]
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "theater is playing the most number of movies"
        ]
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "theater playing the most movies"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "played in the most number of theaters"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "film playing at the most number of theaters"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "movies",
            "rating"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "COUNT",
            "NOT NULL"
        ],
        "conditions": [
            "rating is not null"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "NOT NULL"
        ],
        "conditions": [
            "rating is not null"
        ]
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "theaters that has at least one movie playing"
        ]
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "theater with at least one movie playing"
        ]
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "not currently showing a movie"
        ]
    },
    {
        "tables": [
            "MovieTheaters"
        ],
        "columns": [
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "IS NULL"
        ],
        "conditions": [
            "cinemas not showing any movies"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating",
            "MovieTheaters.Code",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rating is 'G'"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Rating",
            "MovieTheaters.Name",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "theaters playing 'G' rated movies"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Title"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Rating"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "unrated movies"
        ]
    },
    {
        "tables": [
            "Movies"
        ],
        "columns": [
            "Movies.Code",
            "Movies.Title",
            "Movies.Rating"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "unrated movies"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "movies not currently being shown in any theaters"
        ]
    },
    {
        "tables": [
            "Movies",
            "MovieTheaters"
        ],
        "columns": [
            "Movies.Title",
            "MovieTheaters.Movie"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "not being shown in any theaters"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.Recipient",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "receieved the heaviest package"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.Name",
            "Package.Weight",
            "Package.Recipient"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "received the heaviest package"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.Weight",
            "Package.Sender"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "customer Leo Wong"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.Weight",
            "Package.Sender",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Leo Wong sent"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Position"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Position"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Name",
            "Employee.Position",
            "Employee.Salary"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Turanga Leela's salary",
            "Turanga Leela's position"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Name",
            "Employee.Position",
            "Employee.Salary"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "employee named Turanga Leela"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Salary"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "job type is intern"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Salary"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "average salary",
            "intern"
        ]
    },
    {
        "tables": [
            "Employee",
            "Has_Clearance"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Employee.Position",
            "Has_Clearance.Employee",
            "Has_Clearance.Level"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "level is Physician"
        ]
    },
    {
        "tables": [
            "Employee",
            "Has_Clearance"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Employee.Name",
            "Employee.Position",
            "Has_Clearance.Employee",
            "Has_Clearance.Level"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "clearance level of a physician"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Sender",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent by Leo Wong"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.Sender",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "Leo Wong sent"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Recipient",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "received by Leo Wong"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Recipient",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "received by Leo Wong"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.Sender",
            "Package.Recipient",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "package sent by Leo Wong",
            "package received by Leo Wong"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Sender",
            "Package.Recipient",
            "Client.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.Sender",
            "Package.Recipient"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent by Ogden Wernstrom",
            "received by Leo Wong"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.Sender",
            "Package.Recipient"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent by Ogden Wernstrom",
            "received by Leo Wong"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.Contents",
            "Package.Sender",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent by John Zoidfarb"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.Contents",
            "Package.Sender",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent by John Zoidfarb"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.PackageNumber",
            "Package.Weight",
            "Package.Sender"
        ],
        "sql_keywords": [
            "LIKE",
            "="
        ],
        "conditions": [
            "package sent by the clients",
            "John is part of their name"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Weight",
            "Client.Name"
        ],
        "sql_keywords": [
            "LIKE"
        ],
        "conditions": [
            "package number",
            "weight of the heaviest package",
            "sent by a client named John or something similar"
        ]
    },
    {
        "tables": [
            "Package"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Weight"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "top 3 lightest packages"
        ]
    },
    {
        "tables": [
            "Package"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Weight"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "3 lightest packages"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.Name",
            "Package.Sender"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.Name",
            "Package.Sender"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent the most packages"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.Name",
            "Package.Recipient"
        ],
        "sql_keywords": [
            "GROUP BY",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "received least number of packages",
            "list client name",
            "number of packages received by that client"
        ]
    },
    {
        "tables": [
            "Package",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Recipient",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "MIN",
            "="
        ],
        "conditions": [
            "smallest number of packages received",
            "by whom"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.Sender"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "sent more than one packages"
        ]
    },
    {
        "tables": [
            "Client",
            "Package"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.PackageNumber",
            "Package.Sender"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "sent more than one package"
        ]
    },
    {
        "tables": [
            "Planet"
        ],
        "columns": [
            "Planet.Coordinates"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet"
        ],
        "columns": [
            "Planet.Coordinates"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "planet named Mars"
        ]
    },
    {
        "tables": [
            "Planet"
        ],
        "columns": [
            "Planet.Name",
            "Planet.Coordinates"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet"
        ],
        "columns": [
            "Planet.Name",
            "Planet.Coordinates"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Employee",
            "Shipment"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Employee.Name",
            "Shipment.ShipmentID",
            "Shipment.Manager"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "shipment id under Phillip J. Fry's management"
        ]
    },
    {
        "tables": [
            "Employee",
            "Shipment"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Employee.Name",
            "Shipment.ShipmentID",
            "Shipment.Manager"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "delivery managed by Phillip J Fry"
        ]
    },
    {
        "tables": [
            "Shipment"
        ],
        "columns": [
            "Shipment.Date"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Shipment"
        ],
        "columns": [
            "Shipment.Date"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Shipment.ShipmentID",
            "Shipment.Planet"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "planet Mars"
        ]
    },
    {
        "tables": [
            "Planet",
            "Shipment"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Shipment.ShipmentID",
            "Shipment.Planet"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "planet Mars"
        ]
    },
    {
        "tables": [
            "Shipment",
            "Planet",
            "Employee"
        ],
        "columns": [
            "Shipment.ShipmentID",
            "Shipment.Manager",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name",
            "Employee.EmployeeID",
            "Employee.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "planet Mars",
            "under the management of Turanga Leela"
        ]
    },
    {
        "tables": [
            "Shipment",
            "Planet",
            "Employee"
        ],
        "columns": [
            "Shipment.ShipmentID",
            "Shipment.Manager",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name",
            "Employee.EmployeeID",
            "Employee.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "shipments on the planet Mars",
            "managed by Turanga Leela"
        ]
    },
    {
        "tables": [
            "Shipment",
            "Planet",
            "Employee"
        ],
        "columns": [
            "Shipment.ShipmentID",
            "Shipment.Manager",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name",
            "Employee.EmployeeID",
            "Employee.Name"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "on the planet Mars",
            "under the management of Turanga Leela"
        ]
    },
    {
        "tables": [
            "Shipment",
            "Planet",
            "Employee"
        ],
        "columns": [
            "Shipment.ShipmentID",
            "Shipment.Manager",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name",
            "Employee.EmployeeID",
            "Employee.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "shipments on the planet Mars",
            "Turanga Leela manages"
        ]
    },
    {
        "tables": [
            "Planet",
            "Shipment"
        ],
        "columns": [
            "Planet.Name",
            "Shipment.ShipmentID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Shipment.Planet"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment"
        ],
        "columns": [
            "Planet.Name",
            "Shipment.Planet"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "planet has most shipments"
        ]
    },
    {
        "tables": [
            "Planet",
            "Shipment"
        ],
        "columns": [
            "Planet.Name",
            "Shipment.Planet"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Employee",
            "Shipment"
        ],
        "columns": [
            "Employee.Name",
            "Shipment.Manager",
            "Shipment.ShipmentID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Employee",
            "Shipment"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Employee.Name",
            "Shipment.Manager"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Shipment.ShipmentID",
            "Shipment.Planet",
            "Package.Shipment",
            "Package.Weight"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Shipment.ShipmentID",
            "Shipment.Planet",
            "Package.Shipment",
            "Package.Weight"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "shipped on Mars"
        ]
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package"
        ],
        "columns": [
            "Planet.Name",
            "Shipment.ShipmentID",
            "Package.Weight"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package"
        ],
        "columns": [
            "Planet.Name",
            "Package.Weight",
            "Shipment.Planet"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package"
        ],
        "columns": [
            "Planet.Name",
            "Shipment.ShipmentID",
            "Package.Weight"
        ],
        "sql_keywords": [
            "SUM",
            ">",
            "GROUP BY"
        ],
        "conditions": [
            "total weight of shipment greater than 30"
        ]
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package"
        ],
        "columns": [
            "Planet.Name",
            "Shipment.ShipmentID",
            "Package.Weight"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "total shipment weight greater than 30"
        ]
    },
    {
        "tables": [
            "Package",
            "Shipment",
            "Planet",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Shipment",
            "Package.Sender",
            "Shipment.ShipmentID",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "shipped in planet Omicron Persei 8",
            "sent by Zapp Brannigan"
        ]
    },
    {
        "tables": [
            "Client",
            "Package",
            "Shipment",
            "Planet"
        ],
        "columns": [
            "Client.AccountNumber",
            "Client.Name",
            "Package.Shipment",
            "Package.Sender",
            "Shipment.ShipmentID",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sent by Zapp Brannigan",
            "shipped on the Omicron Persei 8"
        ]
    },
    {
        "tables": [
            "Package",
            "Shipment",
            "Planet",
            "Client"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Shipment",
            "Shipment.Planet",
            "Planet.PlanetID",
            "Planet.Name",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "shipped in Omicron Persei 8 planet",
            "sent by Zapp Brannigan"
        ]
    },
    {
        "tables": [
            "Planet",
            "Shipment",
            "Package",
            "Client"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Shipment.ShipmentID",
            "Shipment.Planet",
            "Package.Shipment",
            "Package.Sender",
            "Client.AccountNumber",
            "Client.Name"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "shipped on Omicron Persei 8 planet",
            "sent by Zapp Brannigan"
        ]
    },
    {
        "tables": [
            "Package"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Weight"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "weight between 10 and 30"
        ]
    },
    {
        "tables": [
            "Package"
        ],
        "columns": [
            "Package.PackageNumber",
            "Package.Weight"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "package numbers",
            "weights between 10 and 30"
        ]
    },
    {
        "tables": [
            "Employee",
            "Planet",
            "Has_Clearance"
        ],
        "columns": [
            "Employee.Name",
            "Planet.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "do not have clearance in Mars"
        ]
    },
    {
        "tables": [
            "Employee",
            "Has_Clearance",
            "Planet"
        ],
        "columns": [
            "Employee.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet",
            "Planet.Name"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "don't have clearance on Mars"
        ]
    },
    {
        "tables": [
            "Employee",
            "Planet",
            "Has_Clearance"
        ],
        "columns": [
            "Employee.Name",
            "Planet.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet",
            "Has_Clearance.Level"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "clearance in Omega III"
        ]
    },
    {
        "tables": [
            "Employee",
            "Planet",
            "Has_Clearance"
        ],
        "columns": [
            "Employee.Name",
            "Planet.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "clearance on Omega III"
        ]
    },
    {
        "tables": [
            "Planet",
            "Has_Clearance",
            "Employee"
        ],
        "columns": [
            "Planet.PlanetID",
            "Planet.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet",
            "Employee.EmployeeID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "planets have exact one employee",
            "employee has clearance"
        ]
    },
    {
        "tables": [
            "Planet",
            "Has_Clearance",
            "Employee"
        ],
        "columns": [
            "Planet.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet",
            "Employee.Name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "planet has one employee",
            "employee has clearance"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Name",
            "Employee.Salary"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "salaries between 5000 and 10000"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Name",
            "Employee.Salary"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "salaries between 5000 and 10000"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Name",
            "Employee.Salary"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "salary is above the average salary",
            "salary is more than 5000"
        ]
    },
    {
        "tables": [
            "Employee"
        ],
        "columns": [
            "Employee.Name",
            "Employee.Salary"
        ],
        "sql_keywords": [
            "=",
            ">"
        ],
        "conditions": [
            "salary greater than average",
            "salary more than 5000"
        ]
    },
    {
        "tables": [
            "Employee",
            "Planet",
            "Has_Clearance"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Planet.PlanetID",
            "Planet.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "do not have clearance",
            "in Mars"
        ]
    },
    {
        "tables": [
            "Employee",
            "Has_Clearance",
            "Planet"
        ],
        "columns": [
            "Employee.EmployeeID",
            "Employee.Name",
            "Has_Clearance.Employee",
            "Has_Clearance.Planet",
            "Has_Clearance.Level",
            "Planet.PlanetID",
            "Planet.Name"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "do not have clearance",
            "on Mars"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Game_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Game_ID"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Title",
            "game.Developers",
            "game.Units_sold_Millions"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "List the Title and Developers of all games",
            "ordered by units sold from large to small"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Title",
            "game.Developers",
            "game.Units_sold_Millions"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "titles",
            "developers",
            "units sold descending"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Developers",
            "game.Units_sold_Millions"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "not developed by Nintendo"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Units_sold_Millions",
            "game.Developers"
        ],
        "sql_keywords": [],
        "conditions": [
            "games not developed by Nintendo"
        ]
    },
    {
        "tables": [
            "platform"
        ],
        "columns": [
            "platform.Platform_name",
            "platform.Market_district"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "names",
            "market districts"
        ]
    },
    {
        "tables": [
            "platform"
        ],
        "columns": [
            "platform.Platform_name",
            "platform.Market_district"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "platform"
        ],
        "columns": [
            "platform.Platform_ID",
            "platform.Platform_name",
            "platform.Download_rank"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "download rank is 1"
        ]
    },
    {
        "tables": [
            "platform"
        ],
        "columns": [
            "platform.Platform_ID",
            "platform.Platform_name",
            "platform.Download_rank"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "download rank of 1"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Rank_of_the_year"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum rank",
            "minimum rank",
            "year of players"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Rank_of_the_year"
        ],
        "sql_keywords": [
            "MAX",
            "MIN"
        ],
        "conditions": [
            "maximum rank",
            "minimum rank",
            "year",
            "all players"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Player_ID",
            "player.Rank_of_the_year",
            "player.Player_name",
            "player.Position",
            "player.College"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rank of the year smaller than 3"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Player_ID",
            "player.Rank_of_the_year"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "rank of year of at most 3"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Player_name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Player_name"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of all players",
            "alphabetical order"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Player_name",
            "player.College",
            "player.Rank_of_the_year"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "List names",
            "List colleges",
            "Descending order of rank",
            "Year"
        ]
    },
    {
        "tables": [
            "player"
        ],
        "columns": [
            "player.Player_name",
            "player.College",
            "player.Rank_of_the_year"
        ],
        "sql_keywords": [
            "ORDER BY"
        ],
        "conditions": [
            "names of all players",
            "colleges of all players",
            "ordered by rank of year descending"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Game_ID",
            "game.Title",
            "player.Player_ID",
            "player.Rank_of_the_year",
            "player.Player_name",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "played the game titled 'Super Mario World'",
            "show the names and rank of players"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Game_ID",
            "game.Title",
            "player.Player_ID",
            "player.Rank_of_the_year",
            "player.Player_name",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "played the game with the title 'Super Mario World'",
            "names and ranks of players"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Developers",
            "player.College",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "players go to college 'Auburn'"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Developers",
            "player.College",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "players attend Auburn college"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Game_ID",
            "game.Units_sold_Millions",
            "player.Player_ID",
            "player.Position",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [],
        "conditions": [
            "position \"Guard\""
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Game_ID",
            "game.Units_sold_Millions",
            "player.Player_ID",
            "player.Position",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [],
        "conditions": [
            "players have the position Guard"
        ]
    },
    {
        "tables": [
            "game",
            "platform"
        ],
        "columns": [
            "game.Title",
            "platform.Platform_name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "title",
            "platform name"
        ]
    },
    {
        "tables": [
            "game",
            "platform"
        ],
        "columns": [
            "game.Title",
            "platform.Platform_name"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "titles",
            "platform names"
        ]
    },
    {
        "tables": [
            "game",
            "platform"
        ],
        "columns": [
            "game.Title",
            "platform.Market_district"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "platform has market district in Asia",
            "platform has market district in USA"
        ]
    },
    {
        "tables": [
            "platform",
            "game"
        ],
        "columns": [
            "platform.Platform_ID",
            "platform.Market_district",
            "game.Title",
            "game.Platform_ID"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "platforms in the market districts of Asia",
            "platforms in the market districts of USA"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise",
            "game.Game_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise",
            "game.Game_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "franchises have at least two games"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "franchises that have two or more games"
        ]
    },
    {
        "tables": [
            "player",
            "game_player"
        ],
        "columns": [
            "player.Player_ID",
            "player.Player_name",
            "game_player.Player_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not play any game"
        ]
    },
    {
        "tables": [
            "player",
            "game_player"
        ],
        "columns": [
            "player.Player_ID",
            "player.Player_name",
            "game_player.Player_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "do not play any games"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Title",
            "player.College",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "players from college 'Oklahoma'",
            "players from college 'Auburn'"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Title",
            "player.College",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "LIKE",
            "UNION"
        ],
        "conditions": [
            "players from Oklahoma college",
            "players from Auburn college"
        ]
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game"
        ],
        "columns": [
            "game.Franchise"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Title",
            "player.Position",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "not played by any player who is in the Guard position"
        ]
    },
    {
        "tables": [
            "game",
            "player",
            "game_player"
        ],
        "columns": [
            "game.Game_ID",
            "game.Title",
            "player.Player_ID",
            "player.Position",
            "game_player.Player_ID",
            "game_player.Game_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "not played by any players who play the Guard position"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Year_Profits_billion"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "descending order of the profit of the year"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Year_Profits_billion"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "year profits in descending order"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Month_Profits_billion",
            "press.Year_Profits_billion"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "made more than 15 billion profits each year",
            "1 billion each month"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Month_Profits_billion",
            "press.Year_Profits_billion"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "yearly profit is more than 15 billion",
            "monthly profit is more than 1 billion"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Year_Profits_billion"
        ],
        "sql_keywords": [
            "AVG",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Press_ID",
            "press.Name",
            "press.Year_Profits_billion"
        ],
        "sql_keywords": [
            "AVG",
            "MAX"
        ],
        "conditions": []
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Month_Profits_billion"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "monthly profit is the highest"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Month_Profits_billion"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Month_Profits_billion"
        ],
        "sql_keywords": [
            "MIN",
            "MAX"
        ],
        "conditions": [
            "monthly profit is the highest",
            "monthly profit is the lowest"
        ]
    },
    {
        "tables": [
            "press"
        ],
        "columns": [
            "press.Name",
            "press.Month_Profits_billion"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "makes the highest monthly profit",
            "makes the lowest monthly profit"
        ]
    },
    {
        "tables": [
            "author"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "author.Age",
            "author.Gender"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "age under 30"
        ]
    },
    {
        "tables": [
            "author"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "author.Age",
            "author.Gender"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": [
            "age below 30"
        ]
    },
    {
        "tables": [
            "author"
        ],
        "columns": [
            "author.Age",
            "author.Gender"
        ],
        "sql_keywords": [
            "GROUP BY",
            "AVG"
        ],
        "conditions": [
            "authors",
            "gender"
        ]
    },
    {
        "tables": [
            "author"
        ],
        "columns": [
            "author.Gender",
            "author.Age"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "gender"
        ]
    },
    {
        "tables": [
            "author"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "author.Age",
            "author.Gender"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": [
            "older than 30",
            "for each gender"
        ]
    },
    {
        "tables": [
            "author"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "author.Age",
            "author.Gender"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": [
            "age above 30",
            "for each gender"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Release_date"
        ],
        "sql_keywords": [],
        "conditions": [
            "List all book titles",
            "in the order of their release date",
            "from the most recent to the past"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Release_date"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC"
        ],
        "conditions": [
            "sort books in descending order of release date",
            "return book titles"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Book_Series"
        ],
        "sql_keywords": [
            "COUNT",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Book_Series",
            "book.Book_ID"
        ],
        "sql_keywords": [
            "GROUP BY",
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Release_date",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "titles",
            "publish dates",
            "top 5 best sale books"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Title",
            "book.Sale_Amount",
            "book.Release_date"
        ],
        "sql_keywords": [
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "5 best books",
            "sale amount",
            "titles",
            "release dates"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Book_Series",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "some book selling more than 1000",
            "some book less 500"
        ]
    },
    {
        "tables": [
            "book"
        ],
        "columns": [
            "book.Book_Series",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "sale amount above 1000",
            "sale amount below 500"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Book_Series",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "publish their books in 'MM' series",
            "publish their books in 'LT' series"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Book_Series",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "publish books in 'MM' series",
            "publish books in 'LT' series"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Name",
            "author.Age",
            "author.Author_ID",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "authors do not have any book in the record"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "authors in the record",
            "have not published any books"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Author_ID",
            "book.Book_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "authors who have more than one book"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "published more than 1 book"
        ]
    },
    {
        "tables": [
            "book",
            "author",
            "press"
        ],
        "columns": [
            "book.Title",
            "author.Name",
            "press.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "JOIN",
            "ORDER BY",
            "LIMIT"
        ],
        "conditions": [
            "title",
            "author name",
            "publisher name",
            "top 3 best sales books"
        ]
    },
    {
        "tables": [
            "book",
            "author",
            "press"
        ],
        "columns": [
            "book.Title",
            "author.Name",
            "press.Name"
        ],
        "sql_keywords": [
            "ORDER BY",
            "DESC",
            "LIMIT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "press",
            "book"
        ],
        "columns": [
            "press.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "press",
            "book"
        ],
        "columns": [
            "press.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "SUM",
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "press",
            "book"
        ],
        "columns": [
            "press.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "sold more than 1000",
            "for each publisher",
            "list the press name"
        ]
    },
    {
        "tables": [
            "press",
            "book"
        ],
        "columns": [
            "press.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "sale amount above 1000"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "best selling book"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Name",
            "book.Sale_Amount"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Name",
            "author.Gender",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "published the most books"
        ]
    },
    {
        "tables": [
            "author",
            "book"
        ],
        "columns": [
            "author.Name",
            "author.Gender",
            "book.Author_ID"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "wrote the largest number of books",
            "author name",
            "gender"
        ]
    },
    {
        "tables": [
            "author",
            "book",
            "press"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Author_ID",
            "book.Press_ID",
            "press.Press_ID",
            "press.Name"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "did not have any book with the 'Accor' press"
        ]
    },
    {
        "tables": [
            "author",
            "book",
            "press"
        ],
        "columns": [
            "author.Author_ID",
            "author.Name",
            "book.Author_ID",
            "book.Press_ID",
            "press.Press_ID",
            "press.Name"
        ],
        "sql_keywords": [
            "NOT EXISTS",
            "JOIN"
        ],
        "conditions": [
            "authors have never published under the 'Accor' press"
        ]
    },
    {
        "tables": [
            "press",
            "book"
        ],
        "columns": [
            "press.Name",
            "press.Year_Profits_billion",
            "book.Press_ID"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "published more than two books"
        ]
    },
    {
        "tables": [
            "press",
            "book"
        ],
        "columns": [
            "press.Name",
            "press.Year_Profits_billion",
            "book.Press_ID"
        ],
        "sql_keywords": [
            "JOIN",
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "published more than two books",
            "return its name",
            "return yearly profit in billion"
        ]
    },
    {
        "tables": [
            "Authors"
        ],
        "columns": [
            "Authors.author_name"
        ],
        "sql_keywords": [
            "COUNT",
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Authors"
        ],
        "columns": [
            "Authors.author_name"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Authors"
        ],
        "columns": [
            "Authors.author_name",
            "Authors.other_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Authors"
        ],
        "columns": [
            "Authors.other_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "author Addison Denesik"
        ]
    },
    {
        "tables": [
            "Documents"
        ],
        "columns": [
            "Documents.document_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Documents",
            "Authors"
        ],
        "columns": [
            "Documents.document_id",
            "Documents.author_name",
            "Authors.author_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document id is 4"
        ]
    },
    {
        "tables": [
            "Authors",
            "Documents"
        ],
        "columns": [
            "Authors.author_name",
            "Documents.author_name",
            "Documents.document_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "author of the document 'Travel to Brazil'"
        ]
    },
    {
        "tables": [
            "Authors",
            "Documents"
        ],
        "columns": [
            "Authors.author_name",
            "Documents.author_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "author Era Kerluke"
        ]
    },
    {
        "tables": [
            "Documents"
        ],
        "columns": [
            "Documents.document_name",
            "Documents.document_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Documents",
            "Authors"
        ],
        "columns": [
            "Documents.document_id",
            "Documents.document_name",
            "Authors.author_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "author Bianka Cummings"
        ]
    },
    {
        "tables": [
            "Authors",
            "Documents"
        ],
        "columns": [
            "Authors.author_name",
            "Authors.other_details",
            "Documents.author_name",
            "Documents.document_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document name is 'Travel to China'"
        ]
    },
    {
        "tables": [
            "Authors",
            "Documents"
        ],
        "columns": [
            "Authors.author_name",
            "Documents.author_name"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Authors",
            "Documents"
        ],
        "columns": [
            "Authors.author_name",
            "Documents.author_name",
            "Documents.document_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most number of documents"
        ]
    },
    {
        "tables": [
            "Authors",
            "Documents"
        ],
        "columns": [
            "Authors.author_name",
            "Documents.author_name",
            "Documents.document_id"
        ],
        "sql_keywords": [
            "GROUP BY",
            "HAVING"
        ],
        "conditions": [
            "authors with at least two documents"
        ]
    },
    {
        "tables": [
            "Business_Processes"
        ],
        "columns": [
            "Business_Processes.process_id",
            "Business_Processes.process_name",
            "Business_Processes.process_description",
            "Business_Processes.other_details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Business_Processes"
        ],
        "columns": [
            "Business_Processes.next_process_id",
            "Business_Processes.process_name",
            "Business_Processes.process_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "process id 9"
        ]
    },
    {
        "tables": [
            "Business_Processes"
        ],
        "columns": [
            "Business_Processes.process_name"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "process with id 9"
        ]
    },
    {
        "tables": [
            "Process_Outcomes"
        ],
        "columns": [
            "Process_Outcomes.process_outcome_code",
            "Process_Outcomes.process_outcome_description"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Process_Outcomes"
        ],
        "columns": [
            "Process_Outcomes.process_outcome_code",
            "Process_Outcomes.process_outcome_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Process_Outcomes"
        ],
        "columns": [
            "Process_Outcomes.process_outcome_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Process_Status"
        ],
        "columns": [
            "Process_Status.process_status_code",
            "Process_Status.process_status_description"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Process_Status"
        ],
        "columns": [
            "Process_Status.process_status_code",
            "Process_Status.process_status_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Process_Status",
            "Documents_Processes"
        ],
        "columns": [
            "Process_Status.process_status_description",
            "Documents_Processes.process_status_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff"
        ],
        "columns": [
            "Staff.staff_id",
            "Staff.staff_details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff"
        ],
        "columns": [
            "Staff.staff_id",
            "Staff.staff_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff"
        ],
        "columns": [
            "Staff.staff_id",
            "Staff.staff_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "id 100"
        ]
    },
    {
        "tables": [
            "Ref_Staff_Roles"
        ],
        "columns": [
            "Ref_Staff_Roles.staff_role_code",
            "Ref_Staff_Roles.staff_role_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Ref_Staff_Roles"
        ],
        "columns": [
            "Ref_Staff_Roles.staff_role_code",
            "Ref_Staff_Roles.staff_role_description"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Ref_Staff_Roles",
            "Staff_in_Processes"
        ],
        "columns": [
            "Ref_Staff_Roles.staff_role_description",
            "Staff_in_Processes.staff_role_code"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "staff role code HR"
        ]
    },
    {
        "tables": [
            "Documents",
            "Business_Processes",
            "Documents_Processes"
        ],
        "columns": [
            "Documents.document_id",
            "Business_Processes.process_id",
            "Documents_Processes.document_id",
            "Documents_Processes.process_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "has a process"
        ]
    },
    {
        "tables": [
            "Documents",
            "Business_Processes",
            "Documents_Processes"
        ],
        "columns": [
            "Documents.document_id",
            "Business_Processes.process_id",
            "Documents_Processes.document_id",
            "Documents_Processes.process_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "with a document"
        ]
    },
    {
        "tables": [
            "Documents",
            "Documents_Processes"
        ],
        "columns": [
            "Documents.document_id",
            "Documents_Processes.document_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "without a process"
        ]
    },
    {
        "tables": [
            "Business_Processes",
            "Documents_Processes"
        ],
        "columns": [
            "Business_Processes.process_id",
            "Documents_Processes.process_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "no document"
        ]
    },
    {
        "tables": [
            "Documents",
            "Documents_Processes",
            "Process_Outcomes",
            "Process_Status"
        ],
        "columns": [
            "Documents.document_id",
            "Documents_Processes.document_id",
            "Documents_Processes.process_outcome_code",
            "Documents_Processes.process_status_code",
            "Process_Outcomes.process_outcome_description",
            "Process_Status.process_status_description"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document with id 0"
        ]
    },
    {
        "tables": [
            "Documents",
            "Business_Processes",
            "Documents_Processes"
        ],
        "columns": [
            "Documents.document_id",
            "Documents.document_name",
            "Business_Processes.process_id",
            "Business_Processes.process_name",
            "Documents_Processes.document_id",
            "Documents_Processes.process_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "process name for the document 'Travel to Brazil'"
        ]
    },
    {
        "tables": [
            "Business_Processes",
            "Documents_Processes"
        ],
        "columns": [
            "Business_Processes.process_id",
            "Documents_Processes.process_id",
            "Documents_Processes.document_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff",
            "Documents",
            "Business_Processes",
            "Documents_Processes",
            "Staff_in_Processes"
        ],
        "columns": [
            "Staff.staff_id",
            "Documents.document_id",
            "Business_Processes.process_id",
            "Documents_Processes.document_id",
            "Documents_Processes.process_id",
            "Staff_in_Processes.document_id",
            "Staff_in_Processes.process_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "document with id 0",
            "process with id 9"
        ]
    },
    {
        "tables": [
            "Staff",
            "Documents_Processes",
            "Staff_in_Processes"
        ],
        "columns": [
            "Staff.staff_id",
            "Documents_Processes.document_id",
            "Documents_Processes.process_id",
            "Staff_in_Processes.document_id",
            "Staff_in_Processes.process_id",
            "Staff_in_Processes.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Ref_Staff_Roles",
            "Documents_Processes",
            "Staff_in_Processes"
        ],
        "columns": [
            "Ref_Staff_Roles.staff_role_code",
            "Documents_Processes.document_id",
            "Staff_in_Processes.document_id",
            "Staff_in_Processes.staff_role_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff",
            "Ref_Staff_Roles",
            "Staff_in_Processes"
        ],
        "columns": [
            "Staff.staff_id",
            "Ref_Staff_Roles.staff_role_code",
            "Staff_in_Processes.staff_id",
            "Staff_in_Processes.staff_role_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "staff with id 3"
        ]
    },
    {
        "tables": [
            "Agencies"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies"
        ],
        "columns": [
            "Agencies.agency_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Clients.client_id",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "most number of clients"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "agency with the greatest number of clients"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.client_id",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "at least 2 clients"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "agency ids",
            "details agencies",
            "at least 2 clients"
        ]
    },
    {
        "tables": [
            "Clients",
            "Agencies"
        ],
        "columns": [
            "Clients.agency_id",
            "Clients.client_details",
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client with detail 'Mac'"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.agency_id",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "detail Mac"
        ]
    },
    {
        "tables": [
            "Clients",
            "Agencies"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.agency_id",
            "Clients.sic_code",
            "Clients.client_details",
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Agencies"
        ],
        "columns": [
            "Clients.client_details",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.sic_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.sic_code"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sic code 'Bad'"
        ]
    },
    {
        "tables": [
            "Clients"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "sic code Bad"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "agencies with a client"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "JOIN",
            "ON"
        ],
        "conditions": [
            "agencies have a client"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "agency ids without any client"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Clients"
        ],
        "columns": [
            "Agencies.agency_id",
            "Clients.agency_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "agencies do not have any clients"
        ]
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_id"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Invoices.invoice_status",
            "Invoices.invoice_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Invoices.invoice_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "ids",
            "statuses",
            "details"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Invoices.client_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Invoices.client_id",
            "Invoices.invoice_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details",
            "Invoices.client_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details",
            "Invoices.client_id"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "client with the most invoices"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Invoices.client_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "clients with at least 2 invoices"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices"
        ],
        "columns": [
            "Clients.client_id",
            "Invoices.client_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "clients with two or more invoices"
        ]
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_status"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_status"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_status"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices"
        ],
        "columns": [
            "Invoices.invoice_status"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "invoice status",
            "most invoices"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Clients",
            "Agencies"
        ],
        "columns": [
            "Invoices.client_id",
            "Invoices.invoice_status",
            "Invoices.invoice_details",
            "Clients.client_id",
            "Clients.client_details",
            "Clients.agency_id",
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices",
            "Clients",
            "Agencies"
        ],
        "columns": [
            "Invoices.client_id",
            "Invoices.invoice_status",
            "Invoices.invoice_details",
            "Clients.client_id",
            "Clients.client_details",
            "Clients.agency_id",
            "Agencies.agency_id",
            "Agencies.agency_details"
        ],
        "sql_keywords": [
            "JOIN",
            "ON",
            "SELECT"
        ],
        "conditions": [
            "invoice status",
            "invoice details",
            "client ids",
            "client details",
            "agency id",
            "agency details"
        ]
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_type",
            "Meetings.other_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_type",
            "Meetings.other_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_outcome",
            "Meetings.purpose_of_meeting"
        ],
        "sql_keywords": [],
        "conditions": []
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_outcome",
            "Meetings.purpose_of_meeting"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Payments.payment_id",
            "Payments.payment_details"
        ],
        "sql_keywords": [
            "JOIN",
            "="
        ],
        "conditions": [
            "status is 'Working'"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Payments.payment_id",
            "Payments.payment_details"
        ],
        "sql_keywords": [
            "JOIN",
            "="
        ],
        "conditions": [
            "invoices with status Working"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "NOT EXISTS"
        ],
        "conditions": [
            "without a payment"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "invoices without a payment"
        ]
    },
    {
        "tables": [
            "Payments"
        ],
        "columns": [
            "Payments.payment_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Payments"
        ],
        "columns": [
            "Payments.payment_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Payments",
            "Invoices"
        ],
        "columns": [
            "Payments.payment_id",
            "Payments.invoice_id",
            "Invoices.invoice_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Payments"
        ],
        "columns": [
            "Payments.payment_id",
            "Payments.invoice_id",
            "Payments.payment_details"
        ],
        "sql_keywords": [
            "="
        ],
        "conditions": [
            "payment ids",
            "invoice ids",
            "payment details"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Payments.payment_id",
            "Payments.payment_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "invoice ids",
            "statuses of the payments"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Payments.payment_id",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "distinct invoice ids",
            "statuses for all payments"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Payments.payment_id",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Invoices.invoice_details",
            "Payments.payment_id",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "most number of payments"
        ]
    },
    {
        "tables": [
            "Invoices",
            "Payments"
        ],
        "columns": [
            "Invoices.invoice_id",
            "Invoices.invoice_status",
            "Invoices.invoice_details",
            "Payments.invoice_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "invoices with the most payments"
        ]
    },
    {
        "tables": [
            "Staff"
        ],
        "columns": [
            "Staff.staff_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff"
        ],
        "columns": [
            "Staff.staff_id"
        ],
        "sql_keywords": [
            "COUNT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies",
            "Staff"
        ],
        "columns": [
            "Agencies.agency_id",
            "Staff.agency_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies",
            "Staff"
        ],
        "columns": [
            "Agencies.agency_id",
            "Staff.agency_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Agencies",
            "Staff"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Staff.agency_id",
            "Staff.staff_details"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "agency with most staff"
        ]
    },
    {
        "tables": [
            "Agencies",
            "Staff"
        ],
        "columns": [
            "Agencies.agency_id",
            "Agencies.agency_details",
            "Staff.staff_id",
            "Staff.agency_id",
            "Staff.staff_details"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "agency with the most staff"
        ]
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_outcome"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_outcome"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Meetings"
        ],
        "columns": [
            "Clients.client_id",
            "Meetings.client_id",
            "Meetings.meeting_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings",
            "Clients"
        ],
        "columns": [
            "Meetings.meeting_id",
            "Meetings.client_id",
            "Clients.client_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Clients",
            "Meetings"
        ],
        "columns": [
            "Clients.client_id",
            "Meetings.meeting_type",
            "Meetings.client_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings"
        ],
        "columns": [
            "Meetings.meeting_type"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings",
            "Clients"
        ],
        "columns": [
            "Meetings.meeting_id",
            "Meetings.meeting_outcome",
            "Meetings.meeting_type",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings",
            "Clients"
        ],
        "columns": [
            "Meetings.meeting_id",
            "Meetings.meeting_outcome",
            "Meetings.meeting_type",
            "Clients.client_details"
        ],
        "sql_keywords": [
            "JOIN",
            "SELECT"
        ],
        "conditions": [
            "meeting ids",
            "meeting outcomes",
            "meeting types",
            "client details"
        ]
    },
    {
        "tables": [
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "GROUP BY"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "attended some meeting",
            "had the lowest attendance"
        ]
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "attended the least meetings",
            "attended some meeting"
        ]
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "attended a meeting"
        ]
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": []
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "did not attend any meeting"
        ]
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "DISTINCT"
        ],
        "conditions": [
            "did not attend any meeting"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices",
            "Meetings"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details",
            "Invoices.client_id",
            "Meetings.client_id"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "attended any meeting",
            "have any invoice"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices",
            "Meetings"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.client_details",
            "Invoices.client_id",
            "Meetings.client_id"
        ],
        "sql_keywords": [
            "UNION"
        ],
        "conditions": [
            "attended a meeting",
            "had an invoice"
        ]
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Staff.staff_details",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "attended at least 1 meetings",
            "detail with letter 's'"
        ]
    },
    {
        "tables": [
            "Staff",
            "Meetings",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Staff.staff_id",
            "Staff.staff_details",
            "Meetings.meeting_id",
            "Staff_in_Meetings.meeting_id",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "LIKE",
            "JOIN"
        ],
        "conditions": [
            "attended at least 1 meeting",
            "have an 's' in their staff details"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices",
            "Meetings"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.sic_code",
            "Clients.agency_id",
            "Invoices.client_id",
            "Meetings.client_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "attended 1 meeting",
            "has any invoice"
        ]
    },
    {
        "tables": [
            "Clients",
            "Invoices",
            "Meetings"
        ],
        "columns": [
            "Clients.client_id",
            "Clients.sic_code",
            "Clients.agency_id",
            "Invoices.client_id",
            "Meetings.client_id"
        ],
        "sql_keywords": [
            "INTERSECT"
        ],
        "conditions": [
            "attended 1 meeting",
            "had an invoice"
        ]
    },
    {
        "tables": [
            "Meetings",
            "Clients",
            "Staff",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Meetings.start_date_time",
            "Meetings.end_date_time",
            "Clients.client_details",
            "Staff.staff_details"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "start time",
            "end time",
            "client detail",
            "staff detail"
        ]
    },
    {
        "tables": [
            "Meetings",
            "Clients",
            "Staff",
            "Staff_in_Meetings"
        ],
        "columns": [
            "Meetings.meeting_id",
            "Meetings.client_id",
            "Meetings.start_date_time",
            "Meetings.end_date_time",
            "Clients.client_details",
            "Staff.staff_details",
            "Staff_in_Meetings.staff_id"
        ],
        "sql_keywords": [
            "JOIN"
        ],
        "conditions": [
            "start time of each meeting",
            "end time of each meeting",
            "corresponding client details",
            "corresponding staff details",
            "attendees"
        ]
    }
]