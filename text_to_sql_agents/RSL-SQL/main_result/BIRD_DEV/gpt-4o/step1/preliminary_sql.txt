SELECT MAX(`frpm`.`Percent (%) Eligible Free (K-12)`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Alameda'
SELECT `schools`.`School`, `frpm`.`Percent (%) Eligible Free (Ages 5-17)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`SOCType` = 'Continuation School' ORDER BY `frpm`.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3
SELECT DISTINCT `schools`.`Zip` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`County Name` = 'Fresno' AND `frpm`.`Charter School (Y/N)` = 1
SELECT `schools`.`MailStreet` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT DISTINCT `schools`.`Phone` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 AND `frpm`.`Charter Funding Type` = 'Directly funded' AND `schools`.`OpenDate` > '2000-01-01'
SELECT COUNT(DISTINCT `schools`.`CDSCode`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 400 AND `schools`.`Virtual` = 'F'
SELECT `schools`.`School` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumTstTakr` > 500 AND `schools`.`Magnet` = 1
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT SUM(`satscores`.`NumTstTakr`) FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 1
SELECT COUNT(DISTINCT `satscores`.`cds`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `satscores`.`AvgScrMath` > 560 AND `frpm`.`Charter Funding Type` = 'Directly funded'
SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1
SELECT DISTINCT `frpm`.`CDSCode` FROM `frpm` WHERE (`frpm`.`Enrollment (K-12)` + `frpm`.`Enrollment (Ages 5-17)`) > 500
SELECT MAX(CAST(`frpm`.`Free Meal Count (Ages 5-17)` AS REAL) / `frpm`.`Enrollment (Ages 5-17)`) AS highest_eligible_free_rate FROM `satscores` INNER JOIN `frpm` ON `satscores`.`cds` = `frpm`.`CDSCode` WHERE CAST(`satscores`.`NumGE1500` AS REAL) / `satscores`.`NumTstTakr` > 0.3
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY (`satscores`.`NumGE1500` * 1.0 / `satscores`.`NumTstTakr`) DESC LIMIT 3
SELECT `schools`.`NCESSchool` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (Ages 5-17)` DESC LIMIT 5
SELECT `dname` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`StatusType` = 'Active' GROUP BY `dname` ORDER BY AVG(`AvgScrRead`) DESC LIMIT 1
SELECT COUNT(*) FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`County` = 'Alameda' AND T1.`NumTstTakr` < 100
SELECT `schools`.`CharterNum`, `satscores`.`AvgScrWrite` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`AvgScrWrite` > 499 AND `schools`.`CharterNum` IS NOT NULL ORDER BY `satscores`.`AvgScrWrite` DESC
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`County` = 'Fresno' AND `schools`.`FundingType` = 'Directly funded' AND `satscores`.`NumTstTakr` <= 250
SELECT `schools`.`Phone` FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1
SELECT COUNT(`schools`.`CDSCode`) FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`County` = 'Amador' AND `frpm`.`Low Grade` = '9' AND `frpm`.`High Grade` = '12'
SELECT COUNT(`frpm`.`CDSCode`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `frpm`.`Free Meal Count (K-12)` > 500 AND `frpm`.`FRPM Count (K-12)` < 700
SELECT `schools`.`School` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Contra Costa' ORDER BY `satscores`.`NumTstTakr` DESC LIMIT 1
SELECT frpm.`School Name`, schools.`Street`, schools.`City`, schools.`Zip`, schools.`State` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE (frpm.`Enrollment (K-12)` - frpm.`Enrollment (Ages 5-17)`) > 30
SELECT DISTINCT `frpm`.`School Name` FROM `frpm` INNER JOIN `satscores` ON `frpm`.`CDSCode` = `satscores`.`cds` WHERE `frpm`.`Percent (%) Eligible Free (K-12)` > 0.1 AND `satscores`.`NumGE1500` >= 1500
SELECT `schools`.`School`, `schools`.`FundingType` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Riverside' AND `satscores`.`AvgScrMath` > 400
SELECT `frpm`.`School Name`, `schools`.`Street`, `schools`.`City`, `schools`.`State`, `schools`.`Zip` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`City` = 'Monterey' AND `frpm`.`School Type` = 'High Schools (Public)' AND `frpm`.`FRPM Count (Ages 5-17)` > 800
SELECT `schools`.`School`, `satscores`.`AvgScrWrite`, `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`OpenDate` > '1991-01-01' OR `schools`.`ClosedDate` < '2000-01-01'
SELECT `schools`.`School`, `schools`.`DOCType` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter Funding Type` = 'Locally funded' AND (`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) > (SELECT AVG(`frpm`.`Enrollment (K-12)` - `frpm`.`Enrollment (Ages 5-17)`) FROM `frpm` WHERE `frpm`.`Charter Funding Type` = 'Locally funded')
SELECT `schools`.`OpenDate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 1
SELECT `schools`.`City` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 5
SELECT `frpm`.`Free Meal Count (K-12)` / `frpm`.`Enrollment (K-12)` AS `eligible_free_rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 1 OFFSET 9
SELECT `frpm`.`School Name`, (`frpm`.`FRPM Count (K-12)` / `frpm`.`Enrollment (K-12)`) AS `Eligible FRPM Rate` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`SOC` = 66 ORDER BY `frpm`.`FRPM Count (K-12)` DESC LIMIT 5
SELECT `schools`.`School`, `schools`.`Website` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000
SELECT (T1.`Free Meal Count (Ages 5-17)` * 1.0 / T1.`Enrollment (Ages 5-17)`) AS free_rate FROM `frpm` AS T1 INNER JOIN `schools` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`AdmFName1` = 'Kacey' AND T2.`AdmLName1` = 'Gibson'
SELECT `schools`.`AdmEmail1` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Charter School (Y/N)` = 1 ORDER BY `frpm`.`Enrollment (K-12)` ASC LIMIT 1
SELECT `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT `schools`.`Street`, `schools`.`City`, `schools`.`State`, `schools`.`Zip` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY (`satscores`.`NumGE1500` * 1.0 / `satscores`.`NumTstTakr`) ASC LIMIT 1
SELECT `schools`.`Website` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `satscores`.`NumTstTakr` BETWEEN 2000 AND 3000
SELECT AVG(`satscores`.`NumTstTakr`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Fresno' AND `schools`.`OpenDate` BETWEEN '1980-01-01' AND '1980-12-31'
SELECT `schools`.`Phone` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`dname` = 'Fresno Unified' ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT T2.`School` FROM (SELECT T1.`cds`, T1.`AvgScrRead`, T1.`County`, RANK() OVER (PARTITION BY T1.`County` ORDER BY T1.`AvgScrRead` DESC) AS rank FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`Virtual` = 'Y') WHERE rank <= 5
SELECT `schools`.`EdOpsName` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1
SELECT T1.`AvgScrMath`, T2.`County` FROM `satscores` AS T1 INNER JOIN `schools` AS T2 ON T1.`cds` = T2.`CDSCode` ORDER BY (T1.`AvgScrMath` + T1.`AvgScrRead` + T1.`AvgScrWrite`) ASC LIMIT 1
SELECT `satscores`.`AvgScrWrite`, `schools`.`City` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `satscores`.`NumGE1500` = (SELECT MAX(`NumGE1500`) FROM `satscores`) LIMIT 1
SELECT `schools`.`School`, AVG(`satscores`.`AvgScrWrite`) AS `AvgWritingScore` FROM `schools` INNER JOIN `satscores` ON `schools`.`CDSCode` = `satscores`.`cds` WHERE `schools`.`AdmFName1` = 'Ricci' AND `schools`.`AdmLName1` = 'Ulrich' GROUP BY `schools`.`School`
SELECT `schools`.`School` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`DOC` = 31 ORDER BY `frpm`.`Enrollment (K-12)` DESC LIMIT 1
SELECT COUNT(`CDSCode`) / 12 AS monthly_average FROM `schools` WHERE `County` = 'Alameda' AND `DOC` = 52 AND `OpenDate` LIKE '1980%'
SELECT (SELECT COUNT(*) FROM `schools` WHERE `County` = 'Orange' AND `DOC` = 54) * 1.0 / (SELECT COUNT(*) FROM `schools` WHERE `County` = 'Orange' AND `DOC` = 52) AS ratio
SELECT `schools`.`County`, `schools`.`School`, `schools`.`ClosedDate` FROM `schools` WHERE `schools`.`StatusType` = 'Closed' GROUP BY `schools`.`County` ORDER BY COUNT(`schools`.`CDSCode`) DESC LIMIT 1
SELECT `schools`.`School`, `schools`.`Street` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrMath` DESC LIMIT 1 OFFSET 6
SELECT `schools`.`School`, `schools`.`MailStreet` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrRead` ASC LIMIT 1
SELECT COUNT(DISTINCT `schools`.`CDSCode`) FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE (`satscores`.`AvgScrRead` + `satscores`.`AvgScrMath` + `satscores`.`AvgScrWrite`) >= 1500 AND `schools`.`MailCity` = 'Lakeport'
SELECT SUM(`satscores`.`NumTstTakr`) FROM `satscores` JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` WHERE `schools`.`MailCity` = 'Fresno'
SELECT `School`, `MailZip` FROM `schools` WHERE `AdmFName1` = 'Avetik' AND `AdmLName1` = 'Atoian'
SELECT (SELECT COUNT(*) FROM `schools` WHERE `County` = 'Colusa' AND `MailState` = 'CA') * 1.0 / (SELECT COUNT(*) FROM `schools` WHERE `County` = 'Humboldt' AND `MailState` = 'CA') AS ratio
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `MailState` = 'CA' AND `StatusType` = 'Active' AND `City` = 'San Joaquin'
SELECT `schools`.`Phone`, `schools`.`Ext` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`AvgScrWrite` DESC LIMIT 1 OFFSET 332
SELECT `School`, `Phone`, `Ext` FROM `schools` WHERE `Zip` = '95203-3704'
SELECT `Website` FROM `schools` WHERE (`AdmFName1` = 'Mike' AND `AdmLName1` = 'Larson') OR (`AdmFName1` = 'Dante' AND `AdmLName1` = 'Alvarez')
SELECT `Website` FROM `schools` WHERE `County` = 'San Joaquin' AND `Charter` = 1 AND `Virtual` = 'P'
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `City` = 'Hickman' AND `Charter` = 1 AND `DOC` = 52
SELECT COUNT(DISTINCT `frpm`.`CDSCode`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `schools`.`Charter` = 0 AND (`frpm`.`Free Meal Count (K-12)` * 100 / `frpm`.`Enrollment (K-12)`) < 0.18
SELECT `schools`.`School`, `schools`.`City`, `schools`.`AdmFName1`, `schools`.`AdmLName1`, `schools`.`AdmFName2`, `schools`.`AdmLName2`, `schools`.`AdmFName3`, `schools`.`AdmLName3` FROM `schools` WHERE `schools`.`Charter` = 1 AND `schools`.`CharterNum` = '00D2'
SELECT COUNT(*) AS total_schools FROM `schools` WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4'
SELECT CAST(SUM(CASE WHEN `FundingType` = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`CDSCode`) AS ratio_percentage FROM `schools` WHERE `County` = 'Santa Clara'
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `FundingType` = 'Directly funded' AND `County` = 'Stanislaus' AND `OpenDate` BETWEEN '2000-01-01' AND '2005-12-31'
SELECT COUNT(*) FROM `schools` WHERE `StatusType` = 'Closed' AND `City` = 'San Francisco' AND `ClosedDate` LIKE '1989%' AND `District` LIKE '%Community College%'
SELECT `County` FROM `schools` WHERE `SOC` = 11 AND `ClosedDate` BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY `County` ORDER BY COUNT(`ClosedDate`) DESC LIMIT 1
SELECT `NCESDist` FROM `schools` WHERE `SOC` = 31
SELECT COUNT(`CDSCode`) FROM `schools` WHERE `County` = 'Alpine' AND `StatusType` IN ('Active', 'Closed') AND `DOCType` = 'District Community Day School'
SELECT `District` FROM `schools` WHERE `Magnet` = 0 AND `City` = 'Fresno'
SELECT SUM(`frpm`.`Enrollment (Ages 5-17)`) FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`City` = 'Fremont' AND `frpm`.`Academic Year` = '2014-2015' AND `schools`.`EdOpsCode` = 'SSS'
SELECT `frpm`.`FRPM Count (Ages 5-17)` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `schools`.`School` = 'Youth Authority School' AND `schools`.`MailStreet` = 'PO Box 1040'
SELECT `Low Grade` FROM `schools` WHERE `EdOpsCode` = 'SPECON' AND `NCESDist` = '0613360' ORDER BY `Low Grade` ASC LIMIT 1
SELECT `schools`.`School`, `schools`.`EILName` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`NSLP Provision Status` = '2' AND `frpm`.`County Code` = '37'
SELECT `schools`.`City` FROM `frpm` INNER JOIN `schools` ON `frpm`.`CDSCode` = `schools`.`CDSCode` WHERE `frpm`.`Low Grade` = 9 AND `frpm`.`High Grade` = 12 AND `frpm`.`NSLP Provision Status` = '2' AND `frpm`.`County Name` = 'Merced' AND `schools`.`EILCode` = 'HS'
SELECT `schools`.`School`, `frpm`.`Percent (%) Eligible FRPM (Ages 5-17)` FROM `schools` JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`County` = 'Los Angeles' AND `schools`.`GSserved` = 'K-9'
SELECT `GSserved`, COUNT(`GSserved`) as count FROM `schools` WHERE `City` = 'Adelanto' GROUP BY `GSserved` ORDER BY count DESC LIMIT 1
SELECT `County`, COUNT(`School`) AS `NumberOfSchools` FROM `schools` WHERE `Virtual` = 'F' AND `County` IN ('San Diego', 'Santa Barbara') GROUP BY `County` ORDER BY `NumberOfSchools` DESC LIMIT 1
SELECT `School`, `School Type`, `Latitude` FROM `schools` ORDER BY `Latitude` DESC LIMIT 1
SELECT `City`, `Low Grade`, `School` FROM `schools` WHERE `State` = 'CA' ORDER BY `Latitude` ASC LIMIT 1
SELECT `GSoffered` FROM `schools` ORDER BY ABS(`Longitude`) DESC LIMIT 1
SELECT `schools`.`City`, COUNT(`schools`.`CDSCode`) AS `Number_of_Schools` FROM `schools` INNER JOIN `frpm` ON `schools`.`CDSCode` = `frpm`.`CDSCode` WHERE `schools`.`Magnet` = 1 AND `schools`.`GSoffered` = 'K-8' AND `frpm`.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY `schools`.`City`
SELECT `AdmFName1`, `District` FROM `schools` GROUP BY `AdmFName1`, `District` ORDER BY COUNT(`AdmFName1`) DESC LIMIT 2
SELECT T1.`District Code`, T2.`Percent (%) Eligible Free (K-12)` FROM `schools` AS T1 INNER JOIN `frpm` AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`AdmFName1` = 'Alusine'
SELECT `schools`.`AdmLName1`, `schools`.`District`, `schools`.`County`, `schools`.`School` FROM `schools` WHERE `schools`.`CharterNum` = 40
SELECT `AdmEmail1`, `AdmEmail2`, `AdmEmail3` FROM `schools` WHERE `County` = 'San Bernardino' AND `City` = 'San Bernardino City Unified' AND `OpenDate` BETWEEN '2009-01-01' AND '2010-12-31' AND (`SOCType` = 'Intermediate/Middle Schools (Public)' OR `DOCType` = 'Unified School')
SELECT `schools`.`School`, `schools`.`AdmEmail1` FROM `satscores` INNER JOIN `schools` ON `satscores`.`cds` = `schools`.`CDSCode` ORDER BY `satscores`.`NumGE1500` DESC LIMIT 1
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`frequency` = 'POPLATEK PO OBRATU' AND `district`.`A3` = 'East Bohemia'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `district`.`A3` = 'Prague'
SELECT CASE WHEN AVG(`A12`) > AVG(`A13`) THEN '1995' ELSE '1996' END AS higher_unemployment_year FROM `district`
SELECT COUNT(DISTINCT `district`.`district_id`) FROM `district` JOIN `client` ON `district`.`district_id` = `client`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A11` > 6000 AND `district`.`A11` < 10000
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'M' AND `district`.`A3` = 'North Bohemia' AND `district`.`A11` > 8000
SELECT `account`.`account_id`, (MAX(`district_high`.`A11`) - MIN(`district_low`.`A11`)) AS `gap` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` AS `district_low` ON `client`.`district_id` = `district_low`.`district_id`, `district` AS `district_high` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = (SELECT MIN(`client`.`birth_date`) FROM `client` WHERE `client`.`gender` = 'F')
SELECT `account`.`account_id` FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` ORDER BY `client`.`birth_date` DESC, `district`.`A11` DESC LIMIT 1
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `disp`.`type` = 'DISPONENT' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `account`.`account_id`, `loan`.`amount` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE STRFTIME('%Y', `loan`.`date`) = '1997' AND `loan`.`status` = 'A' AND `account`.`frequency` = 'POPLATEK TYDNE' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`duration` > 12 AND `loan`.`status` = 'A' AND STRFTIME('%Y', `account`.`date`) = '1993' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` < '1950-01-01' AND `district`.`A2` = 'Sokolov'
SELECT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE strftime('%Y', `trans`.`date`) = '1995' ORDER BY `trans`.`date` ASC LIMIT 1
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `account`.`date` < '1997-01-01' AND `trans`.`amount` > 3000
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1994-03-03'
SELECT `account`.`date` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`amount` = 840 AND `trans`.`date` = '1998-10-14'
SELECT `account`.`district_id` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`date` = '1994-08-25'
SELECT MAX(`trans`.`amount`) FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`issued` = '1996-10-21'
SELECT `client`.`gender` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A11` = (SELECT MAX(`A11`) FROM `district`) ORDER BY `client`.`birth_date` ASC LIMIT 1
SELECT t.`amount` FROM `trans` t INNER JOIN `account` a ON t.`account_id` = a.`account_id` INNER JOIN `disp` d ON a.`account_id` = d.`account_id` INNER JOIN `client` c ON d.`client_id` = c.`client_id` WHERE c.`client_id` = (SELECT d.`client_id` FROM `loan` l INNER JOIN `account` a ON l.`account_id` = a.`account_id` INNER JOIN `disp` d ON a.`account_id` = d.`account_id` ORDER BY l.`amount` DESC LIMIT 1) ORDER BY t.`date` ASC LIMIT 1
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik' AND `client`.`gender` = 'F'
SELECT `disp`.`disp_id` FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `trans`.`amount` = 5100 AND `trans`.`date` = '1998-09-02'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Litomerice' AND STRFTIME('%Y', `account`.`date`) = '1996'
SELECT `district`.`A2` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `client`.`birth_date` = '1976-01-29'
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`amount` = 98832 AND `loan`.`date` = '1996-01-03'
SELECT `account`.`account_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague' ORDER BY `account`.`date` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`client_id`) AS male_percentage FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'south Bohemia' ORDER BY `district`.`A4` DESC LIMIT 1
SELECT ((T2.`balance` - T1.`balance`) / T1.`balance`) * 100 AS increase_rate FROM `trans` AS T1 JOIN `trans` AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` = '1993-03-22' AND T2.`date` = '1998-12-27' AND T1.`account_id` = (SELECT `account_id` FROM `loan` WHERE `date` = '1993-07-05' ORDER BY `date` ASC LIMIT 1)
SELECT SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) * 100 / SUM(`amount`) AS percentage FROM `loan`
SELECT CAST(SUM(IIF(`loan`.`amount` < 100000 AND `loan`.`status` = 'C', 1, 0)) AS REAL) * 100 / COUNT(`loan`.`account_id`) AS percentage FROM `loan`
SELECT `account`.`account_id`, `district`.`A2`, `district`.`A3` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`date` LIKE '1993%' AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `client`.`client_id`, `account`.`account_id`, `account`.`frequency` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'east Bohemia' AND `account`.`date` BETWEEN '1995-01-01' AND '2000-12-31' AND `disp`.`type` = 'OWNER'
SELECT `account`.`account_id`, `account`.`date` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Prachatice'
SELECT `district`.`A2`, `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`loan_id` = 4990
SELECT `loan`.`account_id`, `district`.`A2` AS `district`, `district`.`A3` AS `region` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`amount` > 300000
SELECT `loan`.`loan_id`, `district`.`A3`, `district`.`A11` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`duration` = 60
SELECT `district`.`A2` AS `district`, ((`district`.`A13` - `district`.`A12`) / `district`.`A12`) * 100 AS `unemployment_rate_increment` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'D'
SELECT CAST(SUM(IIF(`district`.`A2` = 'Decin' AND strftime('%Y', `account`.`date`) = '1993', 1, 0)) AS REAL) * 100 / COUNT(`account`.`account_id`) AS percentage FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id`
SELECT `account_id` FROM `account` WHERE `frequency` = 'POPLATEK MESICNE'
SELECT `district`.`A2`, COUNT(`client`.`client_id`) AS `female_count` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' GROUP BY `district`.`A2` ORDER BY `female_count` DESC LIMIT 9
SELECT district.`A2`, trans.`amount` FROM `trans` INNER JOIN `account` ON trans.`account_id` = account.`account_id` INNER JOIN `district` ON account.`district_id` = district.`district_id` WHERE trans.`type` = 'VYDAJ' AND trans.`date` LIKE '1996-01%' ORDER BY trans.`amount` DESC LIMIT 10
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` LEFT JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` LEFT JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `district`.`A3` = 'South Bohemia' AND `card`.`card_id` IS NULL
SELECT `district`.`A3` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` IN ('C', 'D') GROUP BY `district`.`A3` ORDER BY COUNT(`loan`.`loan_id`) DESC LIMIT 1
SELECT AVG(`loan`.`amount`) FROM `loan` INNER JOIN `disp` ON `loan`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `client`.`gender` = 'M'
SELECT `district`.`A2`, `district`.`A3` FROM `district` ORDER BY `district`.`A13` DESC LIMIT 1
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A16` = (SELECT MAX(`A16`) FROM `district`)
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `account`.`frequency` = 'POPLATEK MESICNE' AND `trans`.`balance` < 0
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`amount` >= 250000 AND `account`.`frequency` = 'POPLATEK MESICNE' AND `loan`.`date` BETWEEN '1995-01-01' AND '1997-12-31' AND `loan`.`status` = 'A'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `account`.`district_id` = 1 AND `loan`.`status` IN ('C', 'D')
SELECT COUNT(`client`.`client_id`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A15` = (SELECT `A15` FROM `district` ORDER BY `A15` DESC LIMIT 1 OFFSET 1) AND `client`.`gender` = 'M'
SELECT COUNT(`card`.`card_id`) FROM `card` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Pisek'
SELECT DISTINCT `district`.`A2` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `trans`.`amount` > 10000 AND strftime('%Y', `trans`.`date`) = '1997'
SELECT `account`.`account_id` FROM `account` INNER JOIN `order` ON `account`.`account_id` = `order`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `order`.`k_symbol` = 'SIPO' AND `district`.`A2` = 'Pisek'
SELECT DISTINCT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold'
SELECT AVG(`trans`.`amount`) FROM `trans` JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `trans`.`date`) = '2021' AND STRFTIME('%m', `trans`.`date`) = '01'
SELECT DISTINCT `disp`.`client_id` FROM `trans` INNER JOIN `card` ON `trans`.`account_id` = `card`.`disp_id` INNER JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`amount` < (SELECT AVG(`amount`) FROM `trans` WHERE `operation` = 'VYBER KARTOU' AND STRFTIME('%Y', `date`) = '1998') AND STRFTIME('%Y', `trans`.`date`) = '1998'
SELECT DISTINCT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F'
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' AND `district`.`A3` = 'south Bohemia'
SELECT `account`.`account_id` FROM `account` INNER JOIN `disp` ON `account`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Tabor' AND `disp`.`type` = 'OWNER'
SELECT DISTINCT `disp`.`type` FROM `disp` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `disp`.`type` != 'OWNER' AND `district`.`A11` > 8000 AND `district`.`A11` <= 9000
SELECT COUNT(DISTINCT `account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `district`.`A3` = 'North Bohemia' AND `trans`.`bank` = 'AB'
SELECT DISTINCT `district`.`A2` FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` INNER JOIN `trans` ON `account`.`account_id` = `trans`.`account_id` WHERE `trans`.`type` = 'VYDAJ'
SELECT AVG(`district`.`A15`) FROM `district` INNER JOIN `account` ON `district`.`district_id` = `account`.`district_id` WHERE `district`.`A15` > 4000 AND `account`.`date` >= '1997-01-01'
SELECT COUNT(`card`.`card_id`) FROM `card` JOIN `disp` ON `card`.`disp_id` = `disp`.`disp_id` WHERE `card`.`type` = 'classic' AND `disp`.`type` = 'OWNER'
SELECT COUNT(`client`.`gender`) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Hl.m. Praha' AND `client`.`gender` = 'M'
SELECT (COUNT(*) FILTER (WHERE `type` = 'gold' AND `issued` < '1998-01-01') * 100.0 / COUNT(*)) AS percent_gold FROM `card`
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `disp`.`type` = 'OWNER' ORDER BY `loan`.`amount` DESC LIMIT 1
SELECT `district`.`A15` FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `account`.`account_id` = 532
SELECT `account`.`district_id` FROM `order` INNER JOIN `account` ON `order`.`account_id` = `account`.`account_id` WHERE `order`.`order_id` = 33333
SELECT `trans`.`trans_id`, `trans`.`date`, `trans`.`amount`, `trans`.`balance` FROM `trans` INNER JOIN `disp` ON `trans`.`account_id` = `disp`.`account_id` WHERE `disp`.`client_id` = 3356 AND `trans`.`operation` = 'VYBER'
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `loan`.`amount` < 200000
SELECT DISTINCT `card`.`type` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`client_id` = 13539
SELECT `district`.`A3` FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`client_id` = 3541
SELECT `district`.`A2` FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `loan`.`status` = 'A' GROUP BY `district`.`A2` ORDER BY COUNT(`loan`.`loan_id`) DESC LIMIT 1
SELECT `client`.`client_id` FROM `order` INNER JOIN `disp` ON `order`.`account_id` = `disp`.`account_id` INNER JOIN `client` ON `disp`.`client_id` = `client`.`client_id` WHERE `order`.`order_id` = 32423
SELECT `trans`.`trans_id`, `trans`.`account_id`, `trans`.`date`, `trans`.`type`, `trans`.`operation`, `trans`.`amount`, `trans`.`balance`, `trans`.`k_symbol`, `trans`.`bank`, `trans`.`account` FROM `trans` INNER JOIN `account` ON `trans`.`account_id` = `account`.`account_id` WHERE `account`.`district_id` = 5
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Jesenik'
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'junior' AND `card`.`issued` >= '1997-01-01'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`client_id`) FROM `client` INNER JOIN `account` ON `client`.`district_id` = `account`.`district_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A11` > 10000
SELECT (SUM(CASE WHEN STRFTIME('%Y', loan.`date`) = '1997' THEN loan.`amount` ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', loan.`date`) = '1996' THEN loan.`amount` ELSE 0 END)) * 100.0 / SUM(CASE WHEN STRFTIME('%Y', loan.`date`) = '1996' THEN loan.`amount` ELSE 0 END) AS growth_rate FROM loan INNER JOIN account ON loan.`account_id` = account.`account_id` INNER JOIN disp ON account.`account_id` = disp.`account_id` INNER JOIN client ON disp.`client_id` = client.`client_id` WHERE client.`gender` = 'M'
SELECT COUNT(`trans`.`trans_id`) FROM `trans` WHERE `trans`.`operation` = 'VYBER KARTOU' AND `trans`.`date` > '1995-12-31'
SELECT (SELECT `A16` FROM `district` WHERE `A3` = 'north Bohemia') - (SELECT `A16` FROM `district` WHERE `A3` = 'east Bohemia') AS `crime_difference`
SELECT COUNT(*) FROM `disp` WHERE `account_id` BETWEEN 1 AND 10 AND `type` IN ('OWNER', 'DISPONENT')
SELECT `account`.`frequency`, `order`.`k_symbol` FROM `account` INNER JOIN `order` ON `account`.`account_id` = `order`.`account_id` WHERE `account`.`account_id` = 3 AND `order`.`amount` = 3539
SELECT `client`.`birth_date` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`account_id` = 130 AND `disp`.`type` = 'OWNER'
SELECT COUNT(*) FROM `account` AS T1 INNER JOIN `disp` AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'OWNER' AND T1.`frequency` = 'POPLATEK PO OBRATU'
SELECT l.`amount`, l.`status` FROM `loan` l JOIN `disp` d ON l.`account_id` = d.`account_id` WHERE d.`client_id` = 992
SELECT SUM(T4.`balance`), T1.`gender` FROM `client` AS T1 INNER JOIN `disp` AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN `account` AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN `trans` AS T4 ON T3.`account_id` = T4.`account_id` WHERE T1.`client_id` = 4 AND T4.`trans_id` > 851 GROUP BY T1.`gender`
SELECT DISTINCT `card`.`type` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`client_id` = 9
SELECT SUM(t.`amount`) FROM `trans` t INNER JOIN `disp` d ON t.`account_id` = d.`account_id` WHERE d.`client_id` = 617 AND t.`date` LIKE '1998%'
SELECT `client`.`client_id` FROM `client` JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` JOIN `account` ON `disp`.`account_id` = `account`.`account_id` JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND `district`.`A3` = 'East Bohemia'
SELECT `client`.`client_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `loan` ON `disp`.`account_id` = `loan`.`account_id` WHERE `client`.`gender` = 'F' ORDER BY `loan`.`amount` DESC LIMIT 3
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `order` ON `account`.`account_id` = `order`.`account_id` WHERE `client`.`gender` = 'M' AND `client`.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND `order`.`k_symbol` = 'SIPO' AND `order`.`amount` > 4000
SELECT COUNT(`account`.`account_id`) FROM `account` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A2` = 'Beroun' AND `account`.`date` > '1996-12-31'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `client`.`gender` = 'F' AND `card`.`type` = 'junior'
SELECT CAST(COUNT(CASE WHEN `client`.`gender` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `account`.`district_id` = `district`.`district_id` WHERE `district`.`A3` = 'Prague'
SELECT CAST(SUM(CASE WHEN `client`.`gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client`.`gender`) AS percentage_of_male_clients FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE'
SELECT COUNT(DISTINCT `client`.`client_id`) FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` WHERE `account`.`frequency` = 'POPLATEK TYDNE' AND `disp`.`type` = 'OWNER'
SELECT `account`.`account_id` FROM `account` INNER JOIN `loan` ON `account`.`account_id` = `loan`.`account_id` WHERE `loan`.`duration` > 24 AND `loan`.`status` = 'A' AND `account`.`date` < '1997-01-01' ORDER BY `loan`.`amount` ASC LIMIT 1
SELECT `account`.`account_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `account` ON `disp`.`account_id` = `account`.`account_id` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`gender` = 'F' ORDER BY `client`.`birth_date` ASC, `district`.`A11` ASC LIMIT 1
SELECT COUNT(*) FROM `client` INNER JOIN `district` ON `client`.`district_id` = `district`.`district_id` WHERE `client`.`birth_date` LIKE '1920%' AND `district`.`A3` = 'east Bohemia'
SELECT COUNT(`loan`.`loan_id`) FROM `loan` INNER JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`duration` = 24 AND `account`.`frequency` = 'POPLATEK TYDNE'
SELECT AVG(`loan`.`amount`) FROM `loan` JOIN `account` ON `loan`.`account_id` = `account`.`account_id` WHERE `loan`.`status` IN ('C', 'D') AND `account`.`frequency` = 'POPLATEK PO OBRATU'
SELECT `client`.`client_id`, `client`.`district_id` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` WHERE `disp`.`type` = 'OWNER'
SELECT `client`.`client_id`, (strftime('%Y', 'now') - strftime('%Y', `client`.`birth_date`)) AS `age` FROM `client` INNER JOIN `disp` ON `client`.`client_id` = `disp`.`client_id` INNER JOIN `card` ON `disp`.`disp_id` = `card`.`disp_id` WHERE `card`.`type` = 'gold' AND `disp`.`type` = 'OWNER'
SELECT `bond_type` FROM `bond` GROUP BY `bond_type` ORDER BY COUNT(`bond_type`) DESC LIMIT 1
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' AND `atom`.`element` = 'cl'
SELECT AVG(CASE WHEN `atom`.`element` = 'o' THEN 1 ELSE 0 END) FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`atom_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT COUNT(DISTINCT T2.`molecule_id`) FROM `atom` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'na' AND T2.`label` = '-'
SELECT `bond`.`molecule_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '+'
SELECT SUM(CASE WHEN `atom`.`element` = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(`atom`.`atom_id`) * 100 AS percentage FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '='
SELECT COUNT(`bond_id`) FROM `bond` WHERE `bond_type` = '#'
SELECT COUNT(`atom_id`) FROM `atom` WHERE `element` != 'br'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+'
SELECT DISTINCT `molecule_id` FROM `atom` WHERE `element` = 'c'
SELECT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` WHERE `connected`.`bond_id` = 'TR004_8_9'
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '='
SELECT `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' GROUP BY `molecule`.`label` ORDER BY COUNT(`atom`.`atom_id`) DESC LIMIT 1
SELECT DISTINCT `bond`.`bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `atom`.`element` = 'cl'
SELECT T1.`atom_id`, T1.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '-'
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-'
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `atom`.`element` ORDER BY COUNT(`atom`.`element`) ASC LIMIT 1
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE (`connected`.`atom_id` = 'TR004_8' AND `connected`.`atom_id2` = 'TR004_20') OR (`connected`.`atom_id` = 'TR004_20' AND `connected`.`atom_id2` = 'TR004_8')
SELECT DISTINCT `molecule`.`label` FROM `molecule` WHERE `molecule`.`label` NOT IN (SELECT DISTINCT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'sn')
SELECT COUNT(DISTINCT T1.`atom_id`) FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `bond` AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE (T1.`element` = 'i' OR T1.`element` = 's') AND T3.`bond_type` = '-'
SELECT DISTINCT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT DISTINCT T2.`atom_id2` FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`molecule_id` = 'TR181' UNION SELECT DISTINCT T1.`atom_id` FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`molecule_id` = 'TR181'
SELECT 100 - (CAST(SUM(CASE WHEN `atom`.`element` = 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT `atom`.`atom_id`)) AS percentage FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '#' THEN 1 ELSE 0 END) * 100 AS REAL) / COUNT(`bond`.`bond_id`) AS `percent` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR000' ORDER BY `element` ASC LIMIT 3
SELECT T1.`atom_id`, T1.`atom_id2` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`molecule_id` = 'TR001' AND T1.`bond_id` = 'TR001_2_6'
SELECT (SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN `label` = '-' THEN 1 ELSE 0 END)) AS difference FROM `molecule`
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` WHERE `connected`.`bond_id` = 'TR000_2_5'
SELECT `bond_id` FROM `connected` WHERE `atom_id2` = 'TR000_2'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '=' ORDER BY `molecule`.`molecule_id` ASC LIMIT 5
SELECT CAST(SUM(CASE WHEN `bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(`bond_id`) AS percent FROM `bond` WHERE `molecule_id` = 'TR008'
SELECT ROUND(CAST(SUM(CASE WHEN `label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`molecule_id`), 3) AS percent FROM `molecule`
SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(`atom_id`) AS percent FROM `atom` WHERE `molecule_id` = 'TR206'
SELECT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` = 'TR000'
SELECT `atom`.`element`, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR060'
SELECT T1.`bond_type`, T2.`label` FROM `bond` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`molecule_id` = 'TR010' GROUP BY T1.`bond_type` ORDER BY COUNT(T1.`bond_type`) DESC LIMIT 1
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '-' AND `bond`.`bond_type` = '-' GROUP BY `molecule`.`molecule_id` ORDER BY `molecule`.`molecule_id` ASC LIMIT 3
SELECT `bond_id` FROM `bond` WHERE `molecule_id` = 'TR006' ORDER BY `bond_id` ASC LIMIT 2
SELECT COUNT(`bond`.`bond_id`) FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`molecule_id` = 'TR009' AND (`connected`.`atom_id` = 'TR009_12' OR `connected`.`atom_id2` = 'TR009_12')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'br'
SELECT `bond`.`bond_type`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_id` = 'TR001_6_9'
SELECT `molecule`.`molecule_id`, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_10'
SELECT COUNT(DISTINCT `bond`.`molecule_id`) FROM `bond` WHERE `bond`.`bond_type` = '#'
SELECT COUNT(`bond_id`) FROM `connected` WHERE `atom_id` LIKE 'TR%_19' OR `atom_id2` LIKE 'TR%_19'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR004'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE SUBSTR(`atom`.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND `molecule`.`label` = '+'
SELECT DISTINCT `bond`.`bond_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` AS `a1` ON `connected`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `connected`.`atom_id2` = `a2`.`atom_id` WHERE (`a1`.`element` = 'p' AND `a2`.`element` = 'n') OR (`a1`.`element` = 'n' AND `a2`.`element` = 'p')
SELECT `molecule`.`label` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '=' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`bond`.`bond_id`) DESC LIMIT 1
SELECT CAST(COUNT(`connected`.`bond_id`) AS REAL) / COUNT(DISTINCT `atom`.`atom_id`) FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT `bond`.`bond_type`, `bond`.`bond_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE SUBSTR(`connected`.`atom_id`, 7, 2) + 0 = 45 OR SUBSTR(`connected`.`atom_id2`, 7, 2) + 0 = 45
SELECT `element` FROM `atom` WHERE `atom_id` NOT IN (SELECT `atom_id` FROM `connected` UNION SELECT `atom_id2` FROM `connected`)
SELECT T1.`atom_id` FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`molecule_id` = 'TR041' AND T2.`bond_type` = '#'
SELECT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` WHERE `connected`.`bond_id` = 'TR144_8_19'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `molecule`.`label` = '+' AND `bond`.`bond_type` = '=' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`bond`.`bond_id`) DESC LIMIT 1
SELECT `atom`.`element` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `atom`.`element` ORDER BY COUNT(`atom`.`atom_id`) ASC LIMIT 1
SELECT `connected`.`atom_id2` FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'pb'
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT CAST(COUNT(`bond`.`bond_id`) AS FLOAT) * 100 / (SELECT COUNT(`bond`.`bond_id`) FROM `bond`) AS `percentage` FROM `connected` INNER JOIN `atom` AS `a1` ON `connected`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `connected`.`atom_id2` = `a2`.`atom_id` GROUP BY `a1`.`element`, `a2`.`element` ORDER BY COUNT(`connected`.`bond_id`) DESC LIMIT 1
SELECT ROUND(CAST(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`), 5) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT COUNT(*) FROM `atom` WHERE `element` IN ('c', 'h')
SELECT `connected`.`atom_id2` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `atom`.`element` = 's'
SELECT T2.`bond_type` FROM `atom` AS T1 INNER JOIN `connected` AS T3 ON T1.`atom_id` = T3.`atom_id` INNER JOIN `bond` AS T2 ON T3.`bond_id` = T2.`bond_id` WHERE T1.`element` = 'sn'
SELECT COUNT(DISTINCT T1.`element`) FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN `bond` AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`bond_type` = '-'
SELECT COUNT(DISTINCT `atom`.`atom_id`) FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#' AND (`atom`.`element` = 'p' OR `atom`.`element` = 'br')
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(`atom`.`atom_id`) AS `percent` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-'
SELECT `molecule_id`, `label` FROM `molecule` WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')
SELECT `molecule_id` FROM `molecule` WHERE `label` = '-'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '+' AND `molecule_id` BETWEEN 'TR000' AND 'TR030'
SELECT `bond`.`bond_type` FROM `bond` WHERE `bond`.`molecule_id` BETWEEN 'TR000' AND 'TR050'
SELECT DISTINCT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` WHERE T2.`bond_id` = 'TR001_10_11'
SELECT COUNT(DISTINCT `connected`.`bond_id`) FROM `connected` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` WHERE `atom`.`element` = 'i'
SELECT CASE WHEN COUNT(CASE WHEN `molecule`.`label` = '+' THEN 1 END) > COUNT(CASE WHEN `molecule`.`label` = '-' THEN 1 END) THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS `Majority_Label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'ca'
SELECT COUNT(*) FROM `connected` AS C INNER JOIN `atom` AS A1 ON C.`atom_id` = A1.`atom_id` INNER JOIN `atom` AS A2 ON C.`atom_id2` = A2.`atom_id` WHERE C.`bond_id` = 'TR001_1_8' AND ((A1.`element` = 'cl' AND A2.`element` = 'c') OR (A1.`element` = 'c' AND A2.`element` = 'cl'))
SELECT DISTINCT T1.`molecule_id` FROM `atom` AS T1 INNER JOIN `bond` AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN `molecule` AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE T1.`element` = 'c' AND T2.`bond_type` = '#' AND T3.`label` = '-' LIMIT 2
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`atom`.`atom_id`) AS percentage FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT DISTINCT `element` FROM `atom` WHERE `molecule_id` = 'TR001'
SELECT `bond`.`molecule_id` FROM `bond` WHERE `bond`.`bond_type` = '='
SELECT `connected`.`atom_id`, `connected`.`atom_id2` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `bond`.`bond_type` = '#'
SELECT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` WHERE `connected`.`bond_id` = 'TR000_1_2'
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '-' AND `molecule`.`label` = '-'
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_10_11'
SELECT `bond`.`bond_id`, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#'
SELECT `atom`.`element`, COUNT(*) AS `count` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND SUBSTR(`atom`.`atom_id`, 7, 1) = '4' GROUP BY `atom`.`element`
SELECT CAST(SUM(CASE WHEN `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(`atom`.`element`) AS ratio, `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR006'
SELECT DISTINCT `molecule`.`label` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'ca'
SELECT DISTINCT `bond`.`bond_type` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` INNER JOIN `atom` ON `connected`.`atom_id` = `atom`.`atom_id` OR `connected`.`atom_id2` = `atom`.`atom_id` WHERE `atom`.`element` = 'c'
SELECT T1.`element` FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` WHERE T2.`bond_id` = 'TR001_10_11'
SELECT CAST(COUNT(DISTINCT T1.`molecule_id`) AS REAL) * 100 / COUNT(DISTINCT T2.`molecule_id`) FROM `bond` AS T1, `molecule` AS T2 WHERE T1.`molecule_id` = T2.`molecule_id` AND T1.`bond_type` = '#'
SELECT CAST(SUM(CASE WHEN `bond`.`bond_type` = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`bond`.`bond_id`) AS `percent` FROM `bond` WHERE `bond`.`molecule_id` = 'TR047'
SELECT `molecule`.`label` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`atom_id` = 'TR001_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR151'
SELECT `element` FROM `atom` WHERE `molecule_id` = 'TR151' AND `element` IN ('cl', 'br', 'f', 'i', 'sn', 'pb', 'te')
SELECT COUNT(*) FROM `molecule` WHERE `label` = '+'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND substr(`atom`.`molecule_id`, 3, 3) >= 10 AND substr(`atom`.`molecule_id`, 3, 3) <= 50
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `bond`.`bond_id` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '=' AND `molecule`.`label` = '+'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'h' AND `molecule`.`label` = '+'
SELECT `bond`.`molecule_id` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `connected`.`atom_id` = 'TR000_1' AND `bond`.`bond_id` = 'TR000_1_2'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR124'
SELECT `atom`.`atom_id` FROM `atom` WHERE `atom`.`molecule_id` = 'TR186'
SELECT `bond_type` FROM `bond` WHERE `bond_id` = 'TR007_4_19'
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` OR `atom`.`atom_id` = `connected`.`atom_id2` WHERE `connected`.`bond_id` = 'TR000_2_4'
SELECT COUNT(`bond`.`bond_id`) AS double_bonds, `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`molecule_id` = 'TR006' AND `bond`.`bond_type` = '=' GROUP BY `molecule`.`label`
SELECT `molecule`.`molecule_id`, `atom`.`element` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+'
SELECT `bond`.`bond_id`, `connected`.`atom_id`, `connected`.`atom_id2` FROM `bond` INNER JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `bond`.`bond_type` = '-'
SELECT DISTINCT m.`molecule_id`, a.`element` FROM `molecule` m INNER JOIN `bond` b ON m.`molecule_id` = b.`molecule_id` INNER JOIN `atom` a ON m.`molecule_id` = a.`molecule_id` WHERE b.`bond_type` = '#' ORDER BY m.`molecule_id`, a.`element`
SELECT `element` FROM `atom` WHERE `atom_id` IN (SELECT `atom_id` FROM `connected` WHERE `bond_id` = 'TR000_2_3' UNION SELECT `atom_id2` FROM `connected` WHERE `bond_id` = 'TR000_2_3')
SELECT COUNT(`connected`.`bond_id`) FROM `connected` INNER JOIN `atom` AS `a1` ON `connected`.`atom_id` = `a1`.`atom_id` INNER JOIN `atom` AS `a2` ON `connected`.`atom_id2` = `a2`.`atom_id` WHERE `a1`.`element` = 'cl' OR `a2`.`element` = 'cl'
SELECT `atom`.`atom_id`, COUNT(DISTINCT `bond`.`bond_type`) AS `bond_type_count` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR346' GROUP BY `atom`.`atom_id`
SELECT COUNT(DISTINCT T1.`molecule_id`), COUNT(DISTINCT T1.`molecule_id`) FILTER (WHERE T2.`label` = '+') FROM `bond` AS T1 INNER JOIN `molecule` AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '='
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` LEFT JOIN `bond` ON `molecule`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`element` != 's' AND (`bond`.`bond_type` IS NULL OR `bond`.`bond_type` != '=')
SELECT `molecule`.`label` FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_id` = 'TR001_2_4'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` WHERE `atom`.`molecule_id` = 'TR001'
SELECT COUNT(*) FROM `bond` WHERE `bond_type` = '-'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'cl' AND `molecule`.`label` = '+'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `atom`.`element` = 'c' AND `molecule`.`label` = '-'
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' AND `atom`.`element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT `molecule`.`molecule_id`) AS percentage FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id`
SELECT `molecule_id` FROM `bond` WHERE `bond_id` = 'TR001_1_7'
SELECT COUNT(DISTINCT T1.`element`) FROM `atom` AS T1 INNER JOIN `connected` AS T2 ON T1.`atom_id` = T2.`atom_id` OR T1.`atom_id` = T2.`atom_id2` WHERE T2.`bond_id` = 'TR001_3_4'
SELECT `bond`.`bond_type` FROM `connected` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `connected`.`atom_id` = 'TR000_1' AND `connected`.`atom_id2` = 'TR000_2'
SELECT T2.`molecule_id` FROM `connected` AS T1 INNER JOIN `atom` AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T1.`atom_id` = 'TR000_2' AND T1.`atom_id2` = 'TR000_4'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR000_1'
SELECT `label` FROM `molecule` WHERE `molecule_id` = 'TR000'
SELECT CAST(SUM(CASE WHEN T2.`bond_type` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.`atom_id`) AS percentage FROM `connected` AS T1 INNER JOIN `bond` AS T2 ON T1.`bond_id` = T2.`bond_id`
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'n'
SELECT DISTINCT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 's' AND `bond`.`bond_type` = '='
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '-' GROUP BY `molecule`.`molecule_id` HAVING COUNT(`atom`.`atom_id`) > 5
SELECT DISTINCT `atom`.`element` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `bond`.`bond_type` = '=' AND `bond`.`molecule_id` = 'TR024'
SELECT `molecule`.`molecule_id` FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` WHERE `molecule`.`label` = '+' GROUP BY `molecule`.`molecule_id` ORDER BY COUNT(`atom`.`atom_id`) DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `molecule`.`label` = '+' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'h' AND `bond`.`bond_type` = '#'
SELECT COUNT(`molecule_id`) FROM `molecule` WHERE `label` = '+'
SELECT COUNT(DISTINCT `bond`.`molecule_id`) FROM `bond` WHERE `bond`.`bond_type` = '-' AND `bond`.`molecule_id` BETWEEN 'TR004' AND 'TR010'
SELECT COUNT(`atom`.`atom_id`) FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`molecule_id` = 'TR008' AND `atom`.`element` = 'c'
SELECT `element` FROM `atom` WHERE `atom_id` = 'TR004_7' AND `molecule_id` IN (SELECT `molecule_id` FROM `molecule` WHERE `label` = '-')
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `molecule` INNER JOIN `atom` ON `molecule`.`molecule_id` = `atom`.`molecule_id` INNER JOIN `connected` ON `atom`.`atom_id` = `connected`.`atom_id` INNER JOIN `bond` ON `connected`.`bond_id` = `bond`.`bond_id` WHERE `atom`.`element` = 'o' AND `bond`.`bond_type` = '='
SELECT COUNT(DISTINCT `molecule`.`molecule_id`) FROM `bond` INNER JOIN `molecule` ON `bond`.`molecule_id` = `molecule`.`molecule_id` WHERE `bond`.`bond_type` = '#' AND `molecule`.`label` = '-'
SELECT `atom`.`element`, `bond`.`bond_type` FROM `atom` INNER JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` WHERE `atom`.`molecule_id` = 'TR002'
SELECT `atom`.`atom_id` FROM `atom` JOIN `bond` ON `atom`.`molecule_id` = `bond`.`molecule_id` JOIN `connected` ON `bond`.`bond_id` = `connected`.`bond_id` WHERE `atom`.`element` = 'c' AND `bond`.`bond_type` = '=' AND `atom`.`molecule_id` = 'TR012'
SELECT `atom`.`atom_id` FROM `atom` INNER JOIN `molecule` ON `atom`.`molecule_id` = `molecule`.`molecule_id` WHERE `molecule`.`label` = '+' AND `atom`.`element` = 'o'
SELECT `name` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `name` FROM `cards` WHERE `borderColor` = 'borderless' AND `cardKingdomFoilId` IS NULL AND `cardKingdomId` IS NOT NULL
SELECT `name` FROM `cards` WHERE `faceConvertedManaCost` = (SELECT MAX(`faceConvertedManaCost`) FROM `cards`)
SELECT `name` FROM `cards` WHERE `frameVersion` = 2015 AND `edhrecRank` < 100
SELECT `cards`.`name` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`format` = 'gladiator' AND `legalities`.`status` = 'Banned'
SELECT `cards`.`id`, `legalities`.`status` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Artifact' AND `cards`.`side` IS NULL AND `legalities`.`format` = 'vintage'
SELECT `cards`.`id`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE (`cards`.`power` = '*' OR `cards`.`power` IS NULL) AND `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT `cards`.`id`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Stephen Daniele'
SELECT T2.`text` FROM `cards` AS T1 INNER JOIN `rulings` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Sublime Epiphany' AND T1.`number` = '74s'
SELECT `cards`.`name`, `cards`.`artist`, `cards`.`isPromo` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` GROUP BY `cards`.`uuid` ORDER BY COUNT(`rulings`.`uuid`) DESC LIMIT 1
SELECT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Annul' AND `cards`.`number` = '29'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `set_translations`.`language` = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode`
SELECT `sets`.`name`, `sets`.`totalSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian'
SELECT COUNT(DISTINCT `type`) FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT `keywords` FROM `cards` WHERE `name` = 'Angel of Mercy'
SELECT COUNT(*) FROM `cards` WHERE `power` = '*'
SELECT `promoTypes` FROM `cards` WHERE `name` = 'Duress'
SELECT `borderColor` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `originalType` FROM `cards` WHERE `name` = 'Ancestor''s Chosen'
SELECT `set_translations`.`language` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Angel of Mercy'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isTextless` = 0
SELECT `rulings`.`text` FROM `rulings` INNER JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Condemn'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'restricted' AND `cards`.`isStarter` = 1
SELECT T2.`status` FROM `cards` AS T1 INNER JOIN `legalities` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Cloudchaser Eagle'
SELECT `type` FROM `cards` WHERE `name` = 'Benalish Knight'
SELECT `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`name` = 'Benalish Knight'
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Phyrexian'
SELECT CAST(COUNT(CASE WHEN `borderColor` = 'borderless' THEN `id` ELSE NULL END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT COUNT(*) FROM `foreign_data` AS T1 INNER JOIN `cards` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`language` = 'German' AND T2.`isReprint` = 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`borderColor` = 'borderless' AND T2.`language` = 'Russian'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`isStorySpotlight` = 1
SELECT COUNT(`id`) FROM `cards` WHERE `toughness` = 99
SELECT `name` FROM `cards` WHERE `artist` = 'Aaron Boyd'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'mtgo'
SELECT `id` FROM `cards` WHERE `convertedManaCost` = 0
SELECT `layout` FROM `cards` WHERE `keywords` LIKE '%Flying%'
SELECT COUNT(*) FROM `cards` WHERE `originalType` = 'Summon - Angel' AND `subtypes` NOT LIKE '%Angel%'
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT `id` FROM `cards` WHERE `duelDeck` = 'a'
SELECT `edhrecRank` FROM `cards` WHERE `frameVersion` = 2015
SELECT DISTINCT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Chinese Simplified'
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`availability` = 'paper' AND `foreign_data`.`language` = 'Japanese'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`status` = 'Banned' AND `cards`.`borderColor` = 'white'
SELECT `cards`.`uuid`, `foreign_data`.`language` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `legalities`.`format` = 'legacy'
SELECT `rulings`.`text` FROM `rulings` INNER JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Beacon of Immortality'
SELECT COUNT(`cards`.`id`), `legalities`.`status` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = 'future' GROUP BY `legalities`.`status`
SELECT `cards`.`name`, `cards`.`colors` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`code` = 'OGW'
SELECT `cards`.`name`, `set_translations`.`language`, `set_translations`.`translation` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`setCode` = '10E' AND `cards`.`convertedManaCost` = 5
SELECT `cards`.`name`, `rulings`.`date` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`originalType` = 'Creature - Elf'
SELECT `cards`.`colors`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`id` BETWEEN 1 AND 20
SELECT `cards`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`originalType` = 'Artifact' AND `cards`.`colors` = 'B'
SELECT `cards`.`name` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'uncommon' ORDER BY `rulings`.`date` ASC LIMIT 3
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'John Avon' AND `cardKingdomId` IS NOT NULL AND `cardKingdomFoilId` IS NULL
SELECT COUNT(*) FROM `cards` WHERE `borderColor` = 'white' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'UDON' AND `availability` LIKE '%mtgo%' AND `hand` = -1
SELECT COUNT(`id`) FROM `cards` WHERE `frameVersion` = 1993 AND `availability` = 'paper' AND `hasContentWarning` = 1
SELECT `manaCost` FROM `cards` WHERE `layout` = 'normal' AND `frameVersion` = 2003 AND `borderColor` = 'black' AND `availability` = 'mtgo,paper'
SELECT SUM(`convertedManaCost`) FROM `cards` WHERE `artist` = 'Rob Alexander'
SELECT DISTINCT `type` FROM `cards` WHERE `availability` = 'arena'
SELECT DISTINCT `cards`.`setCode` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Spanish'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM `cards` WHERE `frameEffects` = 'legendary')) AS percentage FROM `cards` WHERE `isOnlineOnly` = 1 AND `frameEffects` = 'legendary'
SELECT CAST(SUM(CASE WHEN `isStorySpotlight` = 1 AND `isTextless` = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`id`) FROM `cards`
SELECT `cards`.`name`, CAST(COUNT(CASE WHEN `foreign_data`.`language` = 'Spanish' THEN `cards`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`cards`.`id`) AS percentage FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` GROUP BY `cards`.`name`
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`baseSetSize` = 309
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`block` = 'Commander' AND T2.`language` = 'Portuguese (Brasil)'
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`types` = 'Creature' AND `legalities`.`status` = 'Legal'
SELECT DISTINCT `cards`.`subtypes`, `cards`.`supertypes` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'German' AND `cards`.`subtypes` IS NOT NULL AND `cards`.`supertypes` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `text` LIKE '%triggered ability%'
SELECT COUNT(*) FROM `cards` AS c INNER JOIN `legalities` AS l ON c.`uuid` = l.`uuid` INNER JOIN `rulings` AS r ON c.`uuid` = r.`uuid` WHERE l.`format` = 'premodern' AND r.`text` = 'This is a triggered mana ability.' AND c.`side` IS NULL
SELECT `cards`.`id` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Erica Yang' AND `legalities`.`format` = 'pauper' AND `legalities`.`status` = 'Legal' AND `cards`.`availability` = 'paper'
SELECT `cards`.`artist` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`text` = 'Das perfekte Gegenmittel zu einer dichten Formation'
SELECT `foreign_data`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'French' AND `cards`.`type` LIKE '%Creature%' AND `cards`.`layout` = 'normal' AND `cards`.`borderColor` = 'black' AND `cards`.`artist` = 'Matthew D. Wilson'
SELECT COUNT(DISTINCT `cards`.`id`) FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `rulings`.`date` = '2007-02-01'
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`baseSetSize` = 180 AND `sets`.`block` = 'Ravnica'
SELECT (COUNT(CASE WHEN `cards`.`hasContentWarning` = 0 THEN 1 END) * 100.0 / COUNT(`cards`.`id`)) AS percentage FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'commander' AND `legalities`.`status` = 'Legal'
SELECT CAST(SUM(CASE WHEN `foreign_data`.`language` = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` LEFT JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`power` IS NULL OR `cards`.`power` = '*'
SELECT CAST(SUM(CASE WHEN `set_translations`.`language` = 'Japanese' AND `sets`.`type` = 'expansion' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`set_translations`.`language`) FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code`
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Daren Bader'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000
SELECT COUNT(`id`) FROM `cards` WHERE `isOversized` = 1 AND `isReprint` = 1 AND `isPromo` = 1
SELECT `name` FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `promoTypes` = 'arenaleague' ORDER BY `name` ASC LIMIT 3
SELECT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`multiverseId` = 149934
SELECT `id` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL ORDER BY `cardKingdomFoilId` ASC LIMIT 3
SELECT CAST(COUNT(CASE WHEN `isTextless` = 1 AND `layout` = 'normal' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`isTextless`) FROM `cards`
SELECT `number` FROM `cards` WHERE `side` IS NULL AND `subtypes` LIKE '%Angel%' AND `subtypes` LIKE '%Wizard%'
SELECT `code`, `name` FROM `sets` WHERE `mtgoCode` IS NULL OR `mtgoCode` = '' ORDER BY `name` ASC LIMIT 3
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`mcmName` = 'Archenemy' AND `sets`.`code` = 'ARC'
SELECT `sets`.`name`, `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 5
SELECT `set_translations`.`language`, `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`id` = 206
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`block` = 'Shadowmoor' ORDER BY `sets`.`name` ASC LIMIT 2
SELECT `sets`.`id`, `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`isForeignOnly` = 0 AND `sets`.`isFoilOnly` = 1 AND `set_translations`.`language` = 'Japanese'
SELECT `sets`.`name` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Russian' ORDER BY `sets`.`baseSetSize` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `sets`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`sets`.`isOnlineOnly`) AS percentage FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Chinese Simplified'
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` = 'Japanese' AND (T1.`mtgoCode` IS NULL OR T1.`mtgoCode` = '')
SELECT `id` FROM `cards` WHERE `borderColor` = 'black'
SELECT `id` FROM `cards` WHERE `frameEffects` = 'extendedart'
SELECT `name` FROM `cards` WHERE `borderColor` = 'black' AND `isFullArt` = 1
SELECT `set_translations`.`language` FROM `set_translations` INNER JOIN `sets` ON `set_translations`.`setCode` = `sets`.`code` WHERE `sets`.`id` = 174
SELECT `name` FROM `sets` WHERE `code` = 'ALL'
SELECT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'A Pedra Fellwar'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2007-07-13'
SELECT `baseSetSize`, `code` FROM `sets` WHERE `block` IN ('Masques', 'Mirage')
SELECT `code` FROM `sets` WHERE `type` = 'expansion'
SELECT `foreign_data`.`name`, `foreign_data`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'boros'
SELECT `foreign_data`.`language`, `foreign_data`.`flavorText`, `cards`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'colorpie'
SELECT CAST(SUM(CASE WHEN `cards`.`convertedManaCost` = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`convertedManaCost`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Abyssal Horror'
SELECT `code` FROM `sets` WHERE `type` = 'expansion' AND `name` LIKE '%commander%'
SELECT `foreign_data`.`name`, `foreign_data`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'abzan'
SELECT `foreign_data`.`language`, `foreign_data`.`type` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `cards`.`watermark` = 'azorius'
SELECT COUNT(*) FROM `cards` WHERE `artist` = 'Aaron Miller' AND `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL
SELECT COUNT(`id`) FROM `cards` WHERE `availability` LIKE '%paper%' AND `hand` = '3'
SELECT `name` FROM `cards` WHERE `isTextless` = 0
SELECT `convertedManaCost` FROM `cards` WHERE `name` = 'Ancestor\'s Chosen'
SELECT COUNT(`id`) FROM `cards` WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)
SELECT `name` FROM `cards` WHERE `isPromo` = 1 AND `side` IS NOT NULL
SELECT `subtypes`, `supertypes` FROM `cards` WHERE `name` = 'Molimo, Maro-Sorcerer'
SELECT `purchaseUrls` FROM `cards` WHERE `promoTypes` = 'bundle'
SELECT COUNT(DISTINCT `artist`) FROM `cards` WHERE `borderColor` = 'black' AND `availability` LIKE '%arena%' AND `availability` LIKE '%mtgo%'
SELECT `name` FROM `cards` WHERE `name` IN ('Serra Angel', 'Shrine Keeper') ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `flavorName` = 'Battra, Dark Destroyer'
SELECT `name` FROM `cards` WHERE `frameVersion` = '2003' ORDER BY `convertedManaCost` DESC LIMIT 3
SELECT `set_translations`.`translation` FROM `set_translations` INNER JOIN `cards` ON `set_translations`.`setCode` = `cards`.`setCode` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `set_translations`.`language` = 'Italian'
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`name` = 'Angel of Mercy'
SELECT `cards`.`name` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) > 0 AS has_korean_version FROM `cards` AS c INNER JOIN `foreign_data` AS f ON c.`uuid` = f.`uuid` WHERE c.`name` = 'Ancestor''s Chosen' AND f.`language` = 'Korean';
SELECT COUNT(*) FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition' AND `cards`.`artist` = 'Adam Rex'
SELECT `sets`.`baseSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT T2.`translation` FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`name` = 'Eighth Edition' AND T2.`language` = 'Chinese Simplified'
SELECT COUNT(*) > 0 FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`name` = 'Angel of Mercy' AND T2.`mtgoCode` IS NOT NULL
SELECT `sets`.`releaseDate` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Ancestor''s Chosen'
SELECT `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Hauptset Zehnte Edition'
SELECT COUNT(*) FROM `sets` AS s INNER JOIN `set_translations` AS st ON s.`code` = st.`setCode` WHERE s.`block` = 'Ice Age' AND st.`language` = 'Italian' AND st.`translation` IS NOT NULL
SELECT `sets`.`isForeignOnly` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Adarkar Valkyrie'
SELECT COUNT(*) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Italian' AND `sets`.`baseSetSize` < 100
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `cards`.`borderColor` = 'black'
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1
SELECT DISTINCT `artist` FROM `cards` WHERE `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap') AND `artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT `name` FROM `cards` WHERE `number` = 4 AND `setCode` = (SELECT `code` FROM `sets` WHERE `name` = 'Coldsnap')
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `sets` AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`convertedManaCost` > 5 AND (T1.`power` = '*' OR T1.`power` IS NULL)
SELECT `foreign_data`.`flavorText` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`language` = 'Italian'
SELECT `foreign_data`.`language` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`flavorText` IS NOT NULL
SELECT `foreign_data`.`type` FROM `foreign_data` INNER JOIN `cards` ON `foreign_data`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Ancestor''s Chosen' AND `foreign_data`.`language` = 'German'
SELECT `rulings`.`text` FROM `rulings` INNER JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`name` = 'Coldsnap' AND `set_translations`.`language` = 'Italian'
SELECT `foreign_data`.`name` FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap' AND `foreign_data`.`language` = 'Italian' AND `cards`.`convertedManaCost` = (SELECT MAX(`convertedManaCost`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap')
SELECT `rulings`.`date` FROM `rulings` INNER JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`name` = 'Reminisce'
SELECT CAST(SUM(CASE WHEN `cards`.`convertedManaCost` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap'
SELECT CAST(SUM(CASE WHEN `cards`.`cardKingdomFoilId` IS NOT NULL AND `cards`.`cardKingdomId` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Coldsnap'
SELECT `code` FROM `sets` WHERE `releaseDate` = '2017-07-14'
SELECT `keyruneCode` FROM `sets` WHERE `code` = 'PKHC'
SELECT `mcmId` FROM `sets` WHERE `code` = 'SS2'
SELECT `mcmName` FROM `sets` WHERE `releaseDate` = '2017-06-09'
SELECT `type` FROM `sets` WHERE `name` = 'From the Vault: Lore'
SELECT `sets`.`parentCode` FROM `sets` WHERE `sets`.`name` = 'Commander 2014 Oversized'
SELECT `cards`.`name`, `rulings`.`text`, `cards`.`hasContentWarning` FROM `cards` INNER JOIN `rulings` ON `cards`.`uuid` = `rulings`.`uuid` WHERE `cards`.`artist` = 'Jim Pavelec'
SELECT `sets`.`releaseDate` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Evacuation'
SELECT `sets`.`baseSetSize` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Rinascita di Alara'
SELECT `sets`.`type` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Huitième édition'
SELECT DISTINCT `set_translations`.`translation` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Tendo Ice Bridge' AND `set_translations`.`language` = 'French'
SELECT COUNT(*) FROM `sets` AS T1 INNER JOIN `set_translations` AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`name` = 'Tenth Edition'
SELECT `set_translations`.`translation` FROM `cards` INNER JOIN `set_translations` ON `cards`.`setCode` = `set_translations`.`setCode` WHERE `cards`.`name` = 'Fellwar Stone' AND `set_translations`.`language` = 'Japanese'
SELECT `cards`.`name` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Journey into Nyx Hero''s Path' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 1
SELECT `sets`.`releaseDate` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`translation` = 'Ola de frío'
SELECT DISTINCT `sets`.`type` FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `cards`.`name` = 'Samite Pilgrim'
SELECT COUNT(`cards`.`id`) FROM `cards` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'World Championship Decks 2004' AND `cards`.`convertedManaCost` = 3
SELECT `set_translations`.`translation` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`name` = 'Mirrodin' AND `set_translations`.`language` = 'Chinese Simplified'
SELECT CAST(SUM(CASE WHEN `sets`.`isNonFoilOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `set_translations`.`language` = 'Japanese'
SELECT CAST(SUM(CASE WHEN `cards`.`isOnlineOnly` = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`cards`.`uuid`) FROM `cards` INNER JOIN `foreign_data` ON `cards`.`uuid` = `foreign_data`.`uuid` WHERE `foreign_data`.`language` = 'Portuguese (Brazil)'
SELECT DISTINCT `availability` FROM `cards` WHERE `artist` = 'Aleksi Briclot' AND `isTextless` = 1
SELECT `id` FROM `sets` ORDER BY `baseSetSize` DESC LIMIT 1
SELECT `artist` FROM `cards` WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1
SELECT `frameEffects` FROM `cards` WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL GROUP BY `frameEffects` ORDER BY COUNT(`frameEffects`) DESC LIMIT 1
SELECT COUNT(`id`) FROM `cards` WHERE (`power` IS NULL OR `power` = '*') AND `hasFoil` = 0 AND `duelDeck` = 'a'
SELECT `id` FROM `sets` WHERE `type` = 'commander' ORDER BY `totalSetSize` DESC LIMIT 1
SELECT `cards`.`name`, `cards`.`manaCost` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'duel' ORDER BY `cards`.`convertedManaCost` DESC LIMIT 10
SELECT `cards`.`originalReleaseDate`, GROUP_CONCAT(DISTINCT `legalities`.`format`) AS `legal_play_formats` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'mythic' AND `legalities`.`status` = 'Legal' ORDER BY `cards`.`originalReleaseDate` ASC LIMIT 1
SELECT COUNT(*) FROM `cards` AS T1 INNER JOIN `foreign_data` AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Volkan Baǵa' AND T2.`language` = 'French'
SELECT COUNT(`cards`.`id`) FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`rarity` = 'rare' AND `cards`.`types` = 'Enchantment' AND `cards`.`name` = 'Abundance' AND `legalities`.`status` = 'Legal'
SELECT `legalities`.`format`, `cards`.`name` FROM `legalities` INNER JOIN `cards` ON `legalities`.`uuid` = `cards`.`uuid` WHERE `legalities`.`status` = 'Banned' GROUP BY `legalities`.`format` ORDER BY COUNT(`legalities`.`status` = 'Banned') DESC LIMIT 1
SELECT `set_translations`.`language` FROM `sets` INNER JOIN `set_translations` ON `sets`.`code` = `set_translations`.`setCode` WHERE `sets`.`name` = 'Battlebond'
SELECT `legalities`.`format`, `cards`.`artist` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` GROUP BY `cards`.`artist` ORDER BY COUNT(`cards`.`uuid`) ASC LIMIT 1
SELECT `legalities`.`status` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`frameVersion` = '1997' AND `cards`.`artist` = 'D. Alexander Gregory' AND `legalities`.`format` = 'legacy' AND (`cards`.`hasContentWarning` = 1 OR `cards`.`artist` = 'Wizards of the Coast')
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`edhrecRank` = 1 AND `legalities`.`status` = 'Banned'
SELECT AVG(`id`), (SELECT `language` FROM `set_translations` GROUP BY `language` ORDER BY COUNT(`language`) DESC LIMIT 1) AS common_language FROM `sets` WHERE `releaseDate` BETWEEN '2012-01-01' AND '2015-12-31'
SELECT DISTINCT `artist` FROM `cards` WHERE `borderColor` = 'black' AND `availability` = 'arena'
SELECT `cards`.`uuid` FROM `cards` JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `legalities`.`format` = 'oldschool' AND (`legalities`.`status` = 'banned' OR `legalities`.`status` = 'restricted')
SELECT COUNT(`id`) FROM `cards` WHERE `artist` = 'Matthew D. Wilson' AND `availability` = 'paper'
SELECT `rulings`.`text` FROM `rulings` INNER JOIN `cards` ON `rulings`.`uuid` = `cards`.`uuid` WHERE `cards`.`artist` = 'Kev Walker' ORDER BY `rulings`.`date` DESC
SELECT `cards`.`name`, `legalities`.`format` FROM `cards` INNER JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` INNER JOIN `sets` ON `cards`.`setCode` = `sets`.`code` WHERE `sets`.`name` = 'Hour of Devastation' AND `legalities`.`status` = 'Legal'
SELECT `sets`.`name` FROM `sets` INNER JOIN `set_translations` AS st1 ON `sets`.`code` = st1.`setCode` AND st1.`language` = 'Korean' LEFT JOIN `set_translations` AS st2 ON `sets`.`code` = st2.`setCode` AND st2.`language` LIKE '%Japanese%' WHERE st2.`language` IS NULL
SELECT `cards`.`frameVersion`, `cards`.`name`, `legalities`.`status` FROM `cards` LEFT JOIN `legalities` ON `cards`.`uuid` = `legalities`.`uuid` WHERE `cards`.`artist` = 'Allen Williams' AND (`legalities`.`status` = 'Banned' OR `legalities`.`status` IS NULL)
SELECT `DisplayName`, `Reputation` FROM `users` WHERE `DisplayName` IN ('Harlan', 'Jarrod Dixon') ORDER BY `Reputation` DESC LIMIT 1
SELECT `DisplayName` FROM `users` WHERE strftime('%Y', `CreationDate`) = '2011'
SELECT COUNT(`Id`) FROM `users` WHERE `LastAccessDate` > '2014-09-01'
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT COUNT(`Id`) FROM `users` WHERE `UpVotes` > 100 AND `DownVotes` > 1
SELECT COUNT(`Id`) FROM `users` WHERE `Views` > 10 AND strftime('%Y', `CreationDate`) > '2013'
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName` FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT SUM(`posts`.`CommentCount`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT MAX(`posts`.`AnswerCount`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Examples for teaching: Correlation does not mean causation'
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND `posts`.`ParentId` IS NULL
SELECT DISTINCT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ClosedDate` IS NOT NULL
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` > 65 AND `posts`.`Score` >= 20
SELECT `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Eliciting priors from experts'
SELECT `posts`.`Body` FROM `posts` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `tags`.`TagName` = 'bayesian'
SELECT `posts`.`Body` FROM `posts` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` ORDER BY `tags`.`Count` DESC LIMIT 1
SELECT COUNT(`badges`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT COUNT(`badges`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `badges`.`UserId` ORDER BY COUNT(`badges`.`Id`) DESC LIMIT 1
SELECT AVG(`posts`.`Score`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'csgillespie'
SELECT COUNT(`badges`.`Id`) * 1.0 / COUNT(DISTINCT `users`.`Id`) AS avg_badges FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Views` > 200
SELECT (SUM(CASE WHEN `users`.`Age` > 65 THEN 1 ELSE 0 END) * 100.0 / COUNT(`posts`.`Id`)) AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Score` > 5
SELECT COUNT(`votes`.`Id`) FROM `votes` WHERE `votes`.`UserId` = 58 AND `votes`.`CreationDate` = '2010-07-19'
SELECT `CreationDate` FROM `votes` GROUP BY `CreationDate` ORDER BY COUNT(`Id`) DESC LIMIT 1;
SELECT COUNT(`Id`) FROM `badges` WHERE `Name` = 'Revival'
SELECT `posts`.`Title` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT COUNT(`comments`.`Id`) FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`ViewCount` = 1910
SELECT `posts`.`FavoriteCount` FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `comments`.`UserId` = 3025 AND `comments`.`CreationDate` = '2014-04-23 20:29:39.0'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`ParentId` = 107829 AND `posts`.`CommentCount` = 1
SELECT CASE WHEN `posts`.`ClosedDate` IS NULL THEN 'not well-finished' ELSE 'well-finished' END FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`UserId` = '23853' AND `comments`.`CreationDate` = '2013-07-12 09:08:18.0'
SELECT `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 65041
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Tiago Pasqualini'
SELECT `users`.`DisplayName` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`Id` = 6347
SELECT COUNT(`votes`.`Id`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `posts`.`Title` LIKE '%data visualization%'
SELECT `badges`.`Name` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'
SELECT CAST(COUNT(`posts`.`Id`) AS FLOAT) / COUNT(`votes`.`Id`) FROM `posts` LEFT JOIN `votes` ON `posts`.`OwnerUserId` = `votes`.`UserId` WHERE `posts`.`OwnerUserId` = 24
SELECT `ViewCount` FROM `posts` WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'
SELECT `Text` FROM `comments` WHERE `Score` = 17
SELECT `DisplayName` FROM `users` WHERE `WebsiteUrl` = 'http://stackoverflow.com'
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'SilentGhost'
SELECT `users`.`DisplayName` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'thank you user93!'
SELECT `comments`.`Text` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'A Lion'
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Understanding what Dassault iSight is doing?'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'How does gentle boosting differ from AdaBoost?'
SELECT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Necromancer' LIMIT 10
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Open source tools for visualizing multi-dimensional data'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Vebjorn Ljosa'
SELECT SUM(`posts`.`Score`), `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Yevgeny'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `postHistory` ON `posts`.`Id` = `postHistory`.`PostId` WHERE `posts`.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?'
SELECT SUM(`votes`.`BountyAmount`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `posts`.`Title` LIKE '%data%'
SELECT `users`.`DisplayName` FROM `votes` INNER JOIN `posts` ON `votes`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`BountyAmount` = 50 AND `posts`.`Title` LIKE '%variance%'
SELECT `posts`.`Title`, `comments`.`Text`, AVG(`posts`.`ViewCount`) AS avg_view_count FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Tags` LIKE '%<humor>%' GROUP BY `posts`.`Id`
SELECT COUNT(`Id`) FROM `comments` WHERE `UserId` = 13
SELECT `Id` FROM `users` ORDER BY `Reputation` DESC LIMIT 1
SELECT `Id` FROM `users` ORDER BY `Views` ASC LIMIT 1
SELECT COUNT(DISTINCT `users`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT COUNT(`users`.`Id`) FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `users`.`Id` HAVING COUNT(`badges`.`Name`) > 5
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` INNER JOIN `badges` AS `b1` ON `users`.`Id` = `b1`.`UserId` INNER JOIN `badges` AS `b2` ON `users`.`Id` = `b2`.`UserId` WHERE `users`.`Location` = 'New York' AND `b1`.`Name` = 'Teacher' AND `b2`.`Name` = 'Supporter'
SELECT `users`.`DisplayName`, `users`.`Reputation` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`Id` = 1
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `postHistory` ON `posts`.`Id` = `postHistory`.`PostId` WHERE `posts`.`ViewCount` >= 1000 GROUP BY `postHistory`.`PostId`, `postHistory`.`UserId` HAVING COUNT(`postHistory`.`Id`) = 1
SELECT `users`.`DisplayName`, `badges`.`Name` FROM `users` INNER JOIN `comments` ON `users`.`Id` = `comments`.`UserId` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `users`.`Id` ORDER BY COUNT(`comments`.`Id`) DESC LIMIT 1
SELECT COUNT(*) FROM `users` AS T1 INNER JOIN `badges` AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`Location` = 'India' AND T2.`Name` = 'Teacher'
SELECT (CAST(SUM(CASE WHEN strftime('%Y', `Date`) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) - (CAST(SUM(CASE WHEN strftime('%Y', `Date`) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) AS percentage_difference FROM `badges` WHERE `Name` = 'Student'
SELECT ph.`PostHistoryTypeId`, COUNT(DISTINCT c.`UserId`) as unique_commenters FROM `postHistory` ph LEFT JOIN `comments` c ON ph.`PostId` = c.`PostId` WHERE ph.`PostId` = 3720 GROUP BY ph.`PostHistoryTypeId`
SELECT `posts`.`Id`, `posts`.`ViewCount` FROM `postLinks` INNER JOIN `posts` ON `postLinks`.`RelatedPostId` = `posts`.`Id` WHERE `postLinks`.`PostId` = 61217
SELECT `posts`.`Score`, `postLinks`.`LinkTypeId` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`PostId` WHERE `posts`.`Id` = 395
SELECT `posts`.`Id`, `posts`.`OwnerUserId` FROM `posts` WHERE `posts`.`Score` > 60
SELECT SUM(`posts`.`FavoriteCount`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Id` = 686 AND strftime('%Y', `posts`.`CreationDate`) = '2011'
SELECT AVG(`users`.`UpVotes`) AS `average_up_votes`, AVG(`users`.`Age`) AS `average_age` FROM `users` WHERE `users`.`Id` IN (SELECT `posts`.`OwnerUserId` FROM `posts` GROUP BY `posts`.`OwnerUserId` HAVING COUNT(`posts`.`OwnerUserId`) > 10)
SELECT COUNT(*) FROM `badges` WHERE `Name` = 'Announcer'
SELECT `Name` FROM `badges` WHERE `Date` = '2010-07-19 19:39:08.0'
SELECT COUNT(`Id`) FROM `comments` WHERE `Score` > 60
SELECT `Text` FROM `comments` WHERE `CreationDate` = '2010-07-19 19:25:47.0'
SELECT COUNT(*) FROM `posts` WHERE `Score` = 10;
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT `users`.`Reputation` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Pierre'
SELECT `badges`.`Date` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'Rochester, NY'
SELECT CAST(SUM(CASE WHEN `badges`.`Name` = 'Teacher' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`badges`.`UserId`) AS percentage FROM `badges`
SELECT CAST(COUNT(CASE WHEN `users`.`Age` BETWEEN 13 AND 18 THEN 1 END) AS REAL) * 100 / COUNT(`users`.`Id`) AS percentage FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Organizer'
SELECT `comments`.`Score` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:19:56.0'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`CreaionDate` = '2010-07-19 19:37:33.0'
SELECT `users`.`Age` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`Location` = 'Vienna, Austria'
SELECT COUNT(`badges`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` BETWEEN 19 AND 65
SELECT SUM(`users`.`Views`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Date` = '2010-07-19 19:39:08.0'
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Reputation` = (SELECT MIN(`Reputation`) FROM `users`)
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Sharpie'
SELECT COUNT(`badges`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Supporter' AND `users`.`Age` > 65
SELECT `DisplayName` FROM `users` WHERE `Id` = 30
SELECT COUNT(*) FROM `users` WHERE `Location` = 'New York, NY'
SELECT COUNT(`Id`) FROM `votes` WHERE strftime('%Y', `CreationDate`) = '2010';
SELECT COUNT(`Id`) FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT `DisplayName` FROM `users` ORDER BY `Views` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2010' THEN `Id` ELSE NULL END) AS REAL) / COUNT(CASE WHEN strftime('%Y', `CreationDate`) = '2011' THEN `Id` ELSE NULL END) FROM `votes`;
SELECT DISTINCT `tags`.`TagName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `users`.`DisplayName` = 'John Salvatier'
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Daniel Vassallo'
SELECT COUNT(`votes`.`Id`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harlan'
SELECT `posts`.`Id` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'slashnick' ORDER BY `posts`.`AnswerCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, SUM(`posts`.`ViewCount`) AS `TotalViews` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY `users`.`DisplayName` ORDER BY `TotalViews` DESC LIMIT 1
SELECT COUNT(`posts`.`Id`) FROM `posts` JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `users`.`DisplayName` = 'Matt Parker' AND `votes`.`PostId` > 4
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `comments`.`Score` < 60 AND `users`.`DisplayName` = 'Neil McGuigan'
SELECT DISTINCT `tags`.`TagName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `users`.`DisplayName` = 'Mark Meckes' AND `posts`.`CommentCount` = 0
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Organizer'
SELECT CAST(SUM(CASE WHEN `tags`.`TagName` = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`Id`) AS percentage FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `users`.`DisplayName` = 'Community'
SELECT SUM(CASE WHEN `users`.`DisplayName` = 'Mornington' THEN `posts`.`ViewCount` ELSE 0 END) - SUM(CASE WHEN `users`.`DisplayName` = 'Amos' THEN `posts`.`ViewCount` ELSE 0 END) AS difference FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id`
SELECT COUNT(DISTINCT `users`.`Id`) FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Commentator' AND strftime('%Y', `badges`.`Date`) = '2014'
SELECT COUNT(`Id`) FROM `posts` WHERE `CreaionDate` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'
SELECT `DisplayName`, `Age` FROM `users` WHERE `Views` = (SELECT MAX(`Views`) FROM `users`)
SELECT `LastEditDate`, `LastEditorUserId` FROM `posts` WHERE `Title` = 'Detecting a given face in a database of facial images'
SELECT COUNT(`Id`) FROM `comments` WHERE `UserId` = 13 AND `Score` < 60
SELECT `posts`.`Title`, `users`.`DisplayName` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` > 60
SELECT DISTINCT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`Location` = 'North Pole' AND strftime('%Y', `badges`.`Date`) = '2011'
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`FavoriteCount` > 150
SELECT `posts`.`Title`, COUNT(`postHistory`.`Id`) AS `HistoryCount`, MAX(`postHistory`.`CreationDate`) AS `LastEditDate` FROM `posts` INNER JOIN `postHistory` ON `posts`.`Id` = `postHistory`.`PostId` WHERE `posts`.`Title` = 'What is the best introductory Bayesian statistics textbook?' GROUP BY `posts`.`Title`
SELECT `users`.`LastAccessDate`, `users`.`Location` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `badges`.`Name` = 'Outliers'
SELECT `posts`.`Title` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`RelatedPostId` WHERE `postLinks`.`PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'How to tell if something happened in a data set which monitors a value over time')
SELECT `posts`.`Id`, `badges`.`Name` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` WHERE `users`.`DisplayName` = 'Samuel' AND strftime('%Y', `posts`.`CreationDate`) = '2013' AND strftime('%Y', `badges`.`Date`) = '2013'
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `users`.`DisplayName`, `users`.`Location` FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` INNER JOIN `tags` ON `posts`.`Id` = `tags`.`ExcerptPostId` WHERE `tags`.`TagName` = 'hypothesis-testing'
SELECT `posts`.`Title`, `postLinks`.`LinkTypeId` FROM `posts` INNER JOIN `postLinks` ON `posts`.`Id` = `postLinks`.`RelatedPostId` WHERE `postLinks`.`PostId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'What are principal component scores?')
SELECT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`ParentId` = `users`.`Id` WHERE `posts`.`Score` = (SELECT MAX(`Score`) FROM `posts` WHERE `ParentId` IS NOT NULL)
SELECT `users`.`DisplayName`, `users`.`WebsiteUrl` FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `votes`.`VoteTypeId` = 8 ORDER BY `votes`.`BountyAmount` DESC LIMIT 1
SELECT `Title` FROM `posts` ORDER BY `ViewCount` DESC LIMIT 5
SELECT COUNT(`Id`) FROM `tags` WHERE `Count` BETWEEN 5000 AND 7000
SELECT `OwnerUserId` FROM `posts` ORDER BY `FavoriteCount` DESC LIMIT 1
SELECT `Age` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE strftime('%Y', `posts`.`CreationDate`) = '2011' AND `votes`.`BountyAmount` = 50
SELECT `Id` FROM `users` WHERE `Age` = (SELECT MIN(`Age`) FROM `users`)
SELECT SUM(`Score`) FROM `posts` WHERE `LasActivityDate` LIKE '2010-07-19%'
SELECT COUNT(`postLinks`.`Id`) / 12 FROM `postLinks` JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` WHERE strftime('%Y', `postLinks`.`CreationDate`) = '2010' AND `posts`.`AnswerCount` <= 2
SELECT `posts`.`Id` FROM `posts` JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `votes`.`UserId` = 1465 ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT `posts`.`Title` FROM `postLinks` INNER JOIN `posts` ON `postLinks`.`PostId` = `posts`.`Id` ORDER BY `postLinks`.`CreationDate` ASC LIMIT 1
SELECT `users`.`DisplayName` FROM `users` INNER JOIN `badges` ON `users`.`Id` = `badges`.`UserId` GROUP BY `badges`.`UserId` ORDER BY COUNT(`badges`.`Name`) DESC LIMIT 1
SELECT MIN(`votes`.`CreationDate`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'chl'
SELECT MIN(`posts`.`CreaionDate`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`Age` = (SELECT MIN(`Age`) FROM `users`)
SELECT `users`.`DisplayName` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `badges`.`Name` = 'Autobiographer' ORDER BY `badges`.`Date` ASC LIMIT 1
SELECT COUNT(DISTINCT `users`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`Location` = 'United Kingdom' AND `posts`.`FavoriteCount` >= 4
SELECT AVG(`votes`.`PostId`) FROM `votes` INNER JOIN `users` ON `votes`.`UserId` = `users`.`Id` WHERE `users`.`Age` = (SELECT MAX(`Age`) FROM `users`)
SELECT `DisplayName` FROM `users` WHERE `Reputation` = (SELECT MAX(`Reputation`) FROM `users`)
SELECT COUNT(`Id`) FROM `users` WHERE `Reputation` > 2000 AND `Views` > 1000
SELECT `DisplayName` FROM `users` WHERE `Age` BETWEEN 19 AND 65
SELECT COUNT(`posts`.`Id`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'Jay Stevens' AND strftime('%Y', `posts`.`CreaionDate`) = '2010'
SELECT `posts`.`Id`, `posts`.`Title` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harvey Motulsky' ORDER BY `posts`.`ViewCount` DESC LIMIT 1
SELECT `Id`, `Title` FROM `posts` ORDER BY `Score` DESC LIMIT 1;
SELECT AVG(`posts`.`Score`) FROM `users` INNER JOIN `posts` ON `users`.`Id` = `posts`.`OwnerUserId` WHERE `users`.`DisplayName` = 'Stephen Turner'
SELECT DISTINCT `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE `posts`.`ViewCount` > 20000 AND strftime('%Y', `posts`.`CreationDate`) = '2011'
SELECT `posts`.`Id`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id` WHERE STRFTIME('%Y', `posts`.`CreationDate`) = '2010' ORDER BY `posts`.`FavoriteCount` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `users`.`Reputation` > 1000 AND strftime('%Y', `posts`.`CreationDate`) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`Id`) FROM `posts` INNER JOIN `users` ON `posts`.`OwnerUserId` = `users`.`Id`
SELECT (COUNT(`Id`) FILTER (WHERE `Age` BETWEEN 13 AND 18) * 1.0 / COUNT(`Id`)) * 100 AS percentage FROM `users`
SELECT `posts`.`ViewCount`, `users`.`DisplayName` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Title` = 'Computer Game Datasets'
SELECT COUNT(*) AS total_posts FROM `posts` WHERE `ViewCount` > (SELECT AVG(`ViewCount`) FROM `posts`)
SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Score` = (SELECT MAX(`Score`) FROM `posts`)
SELECT COUNT(`Id`) FROM `posts` WHERE `ViewCount` > 35000 AND `CommentCount` = 0
SELECT `users`.`DisplayName`, `users`.`Location` FROM `posts` INNER JOIN `users` ON `posts`.`LastEditorUserId` = `users`.`Id` WHERE `posts`.`Id` = 183 ORDER BY `posts`.`LastEditDate` DESC LIMIT 1
SELECT `badges`.`Name` FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Emmett' ORDER BY `badges`.`Date` DESC LIMIT 1
SELECT COUNT(`Id`) AS adult_users_with_over_5000_upvotes FROM `users` WHERE `Age` BETWEEN 19 AND 65 AND `UpVotes` > 5000
SELECT julianday(`badges`.`Date`) - julianday(`users`.`CreationDate`) AS days_to_badge FROM `badges` INNER JOIN `users` ON `badges`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Zolomon'
SELECT (SELECT COUNT(*) FROM `posts` WHERE `OwnerUserId` = (SELECT `Id` FROM `users` ORDER BY `CreationDate` DESC LIMIT 1)) AS post_count, (SELECT COUNT(*) FROM `comments` WHERE `UserId` = (SELECT `Id` FROM `users` ORDER BY `CreationDate` DESC LIMIT 1)) AS comment_count
SELECT `comments`.`Text`, `users`.`DisplayName` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `posts`.`Title` = 'Analysing wind data with R' ORDER BY `comments`.`CreationDate` DESC LIMIT 10
SELECT COUNT(`badges`.`UserId`) FROM `badges` WHERE `badges`.`Name` = 'Citizen Patrol'
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` INNER JOIN `tags` ON `posts`.`Tags` LIKE '%' || `tags`.`TagName` || '%' WHERE `tags`.`TagName` = 'careers'
SELECT `Reputation`, `Views` FROM `users` WHERE `DisplayName` = 'Jarrod Dixon'
SELECT (SELECT COUNT(`comments`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` = 'Clustering 1D data') + (SELECT COUNT(`posts`.`Id`) FROM `posts` WHERE `posts`.`ParentId` = (SELECT `Id` FROM `posts` WHERE `Title` = 'Clustering 1D data')) AS total_comments_and_answers
SELECT `CreationDate` FROM `users` WHERE `DisplayName` = 'IrishStat'
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `posts` INNER JOIN `votes` ON `posts`.`Id` = `votes`.`PostId` WHERE `votes`.`BountyAmount` >= 30
SELECT CAST(SUM(CASE WHEN `posts`.`Score` > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`posts`.`Id`) FROM `posts` WHERE `posts`.`OwnerUserId` = (SELECT `users`.`Id` FROM `users` ORDER BY `users`.`Reputation` DESC LIMIT 1)
SELECT COUNT(*) FROM `posts` WHERE `Score` < 20
SELECT COUNT(`Id`) FROM `tags` WHERE `Id` < 15 AND `Count` <= 20
SELECT `ExcerptPostId`, `WikiPostId` FROM `tags` WHERE `TagName` = 'sample'
SELECT `users`.`Reputation`, `users`.`UpVotes` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'fine, you win :)'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`Title` LIKE '%linear regression%'
SELECT `comments`.`Text` FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `posts`.`ViewCount` BETWEEN 100 AND 150 ORDER BY `comments`.`Score` DESC LIMIT 1
SELECT `comments`.`CreationDate`, `users`.`Age` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` LIKE '%http://%'
SELECT COUNT(DISTINCT `posts`.`Id`) FROM `comments` INNER JOIN `posts` ON `comments`.`PostId` = `posts`.`Id` WHERE `comments`.`Score` = 0 AND `posts`.`ViewCount` < 5
SELECT COUNT(`comments`.`Score`) FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`CommentCount` = 1 AND `comments`.`Score` = 0
SELECT COUNT(DISTINCT `users`.`Id`) FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` = 0 AND `users`.`Age` = 40
SELECT `posts`.`Id`, `comments`.`Text` FROM `posts` INNER JOIN `comments` ON `posts`.`Id` = `comments`.`PostId` WHERE `posts`.`Title` = 'Group differences on a five point Likert item'
SELECT `users`.`UpVotes` FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Text` = 'R is also lazy evaluated.'
SELECT `comments`.`Text` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `users`.`DisplayName` = 'Harvey Motulsky'
SELECT `users`.`DisplayName` FROM `comments` JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 1 AND 5 AND `users`.`DownVotes` = 0
SELECT CAST(COUNT(CASE WHEN `users`.`UpVotes` = 0 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`comments`.`UserId`) FROM `comments` INNER JOIN `users` ON `comments`.`UserId` = `users`.`Id` WHERE `comments`.`Score` BETWEEN 5 AND 10
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(T1.`id`) FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `superpower` AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Super Strength' AND T1.`height_cm` > 200
SELECT `superhero`.`full_name` FROM `superhero` WHERE (SELECT COUNT(`hero_power`.`power_id`) FROM `hero_power` WHERE `hero_power`.`hero_id` = `superhero`.`id`) > 15
SELECT COUNT(*) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Apocalypse'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN `hero_power` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `superpower` AS T4 ON T3.`power_id` = T4.`id` WHERE T2.`colour` = 'Blue' AND T4.`power_name` = 'Agility'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Blond'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `superhero_name`, `height_cm` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' ORDER BY `height_cm` DESC
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Sauron'
SELECT `colour`.`colour`, COUNT(`superhero`.`id`) AS `count` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' GROUP BY `colour`.`colour` ORDER BY `count` DESC
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics';
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics' AND `superpower`.`power_name` = 'Super Strength'
SELECT COUNT(DISTINCT `superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT COUNT(*) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `colour`.`colour` = 'Gold' AND `publisher`.`publisher_name` = 'Marvel Comics'
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`superhero_name` = 'Blue Beetle II'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`hair_colour_id` = T2.`id` WHERE T2.`colour` = 'Blond'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Intelligence' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'Copycat'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Durability' AND `hero_attribute`.`attribute_value` < 50
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Death Touch'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `hero_attribute` AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN `attribute` AS T4 ON T3.`attribute_id` = T4.`id` WHERE T2.`gender` = 'Female' AND T4.`attribute_name` = 'Strength' AND T3.`attribute_value` = 100
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` GROUP BY `superhero`.`superhero_name` ORDER BY COUNT(`hero_power`.`power_id`) DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT CAST(COUNT(CASE WHEN `alignment`.`alignment` = 'Bad' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) AS percentage, COUNT(CASE WHEN `alignment`.`alignment` = 'Bad' AND `publisher`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE NULL END) AS marvel_count FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT SUM(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN `publisher`.`publisher_name` = 'DC Comics' THEN 1 ELSE 0 END) AS difference FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id`
SELECT `id` FROM `publisher` WHERE `publisher_name` = 'Star Trek'
SELECT AVG(`attribute_value`) FROM `hero_attribute`
SELECT COUNT(*) FROM `superhero` WHERE `full_name` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`id` = 75
SELECT DISTINCT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Deathlok'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT DISTINCT `superpower`.`power_name` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `gender`.`gender` = 'Male' LIMIT 5
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`height_cm` BETWEEN 170 AND 190 AND `colour`.`colour` = 'No Colour'
SELECT `superpower`.`power_name` FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `hero_power`.`hero_id` = 56
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Demi-God' LIMIT 5
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `alignment` AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Bad'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 169
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` WHERE `superhero`.`height_cm` = 185 AND `race`.`race` = 'human'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `publisher`.`publisher_name` = 'Marvel Comics' THEN `superhero`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`height_cm` BETWEEN 150 AND 180
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Male' AND `superhero`.`weight_kg` > (SELECT AVG(`weight_kg`) * 0.79 FROM `superhero`)
SELECT `superpower`.`power_name` FROM `superpower` INNER JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` GROUP BY `superpower`.`power_name` ORDER BY COUNT(`hero_power`.`hero_id`) DESC LIMIT 1
SELECT T3.`attribute_name`, T2.`attribute_value` FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `attribute` AS T3 ON T2.`attribute_id` = T3.`id` WHERE T1.`superhero_name` = 'Abomination'
SELECT T3.`power_name` FROM `hero_power` AS T1 INNER JOIN `superhero` AS T2 ON T1.`hero_id` = T2.`id` INNER JOIN `superpower` AS T3 ON T1.`power_id` = T3.`id` WHERE T1.`hero_id` = 1
SELECT COUNT(DISTINCT `hero_power`.`hero_id`) FROM `hero_power` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'stealth'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(`superhero`.`id`) * 1.0 / SUM(`superhero`.`skin_colour_id` = 1) AS average FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` WHERE `colour`.`id` = 1
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `publisher`.`publisher_name` = 'Dark Horse Comics' AND `attribute`.`attribute_name` = 'durability' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Abraham Sapien'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Flight'
SELECT `colour1`.`colour` AS `eye_colour`, `colour2`.`colour` AS `hair_colour`, `colour3`.`colour` AS `skin_colour` FROM `superhero` INNER JOIN `colour` AS `colour1` ON `superhero`.`eye_colour_id` = `colour1`.`id` INNER JOIN `colour` AS `colour2` ON `superhero`.`hair_colour_id` = `colour2`.`id` INNER JOIN `colour` AS `colour3` ON `superhero`.`skin_colour_id` = `colour3`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `gender`.`gender` = 'Female' AND `publisher`.`publisher_name` = 'Dark Horse Comics'
SELECT `superhero`.`superhero_name`, `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`hair_colour_id` = `superhero`.`skin_colour_id` AND `superhero`.`hair_colour_id` = `superhero`.`eye_colour_id`
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`superhero_name` = 'A-Bomb'
SELECT CAST(SUM(`colour`.`colour` = 'Blue') AS REAL) * 100 / COUNT(`gender`.`gender`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `gender`.`gender` = 'Female'
SELECT `superhero`.`superhero_name`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`full_name` = 'Charles Chandler'
SELECT `gender`.`gender` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `superhero`.`superhero_name` = 'Agent 13'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Adaptation'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `hero_power` AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`superhero_name` = 'Amazo'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Hunter Zolomon'
SELECT `superhero`.`height_cm` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Amber'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Black' AND `hair_colour`.`colour` = 'Black'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`skin_colour_id` = (SELECT `id` FROM `colour` WHERE `colour` = 'Gold')
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Vampire'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT COUNT(DISTINCT `hero_attribute`.`hero_id`) FROM `hero_attribute` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength' AND `hero_attribute`.`attribute_value` = (SELECT MAX(`hero_attribute`.`attribute_value`) FROM `hero_attribute` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Strength')
SELECT `race`.`race`, `alignment`.`alignment` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `superhero`.`superhero_name` = 'Cameron Hicks'
SELECT (CAST(COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN 1 ELSE NULL END) AS REAL) / COUNT(*)) * 100 AS percent_female_heroes FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT AVG(`superhero`.`weight_kg`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Emil Blonsky') - (SELECT SUM(`weight_kg`) FROM `superhero` WHERE `full_name` = 'Charles Chandler') AS weight_difference
SELECT AVG(`height_cm`) FROM `superhero`
SELECT `superpower`.`power_name` FROM `superpower` JOIN `hero_power` ON `superpower`.`id` = `hero_power`.`power_id` JOIN `superhero` ON `hero_power`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT COUNT(*) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `race`.`id` = 21 AND `gender`.`id` = 1
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Speed' ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT COUNT(*) FROM `superhero` WHERE `alignment_id` = 3
SELECT `attribute`.`attribute_name`, `hero_attribute`.`attribute_value` FROM `hero_attribute` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` WHERE `superhero`.`superhero_name` = '3-D Man'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `colour` AS `eye_colour` ON `superhero`.`eye_colour_id` = `eye_colour`.`id` INNER JOIN `colour` AS `hair_colour` ON `superhero`.`hair_colour_id` = `hair_colour`.`id` WHERE `eye_colour`.`colour` = 'Blue' AND `hair_colour`.`colour` = 'Brown'
SELECT T3.`publisher_name` FROM `superhero` AS T1 INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T1.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT COUNT(*) FROM `superhero` WHERE `publisher_id` IS NULL
SELECT CAST(SUM(CASE WHEN `colour`.`colour` = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`superhero`.`superhero_name`) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id`
SELECT CAST(COUNT(CASE WHEN `gender`.`gender` = 'Male' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN 1 ELSE NULL END) AS RATIO FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id`
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `id` FROM `superpower` WHERE `power_name` = 'cryokinesis'
SELECT `superhero_name` FROM `superhero` WHERE `id` = 294
SELECT `full_name` FROM `superhero` WHERE `weight_kg` = 0 OR `weight_kg` IS NULL
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`full_name` = 'Karen Beecher-Duncan'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`full_name` = 'Helen Parr'
SELECT `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`weight_kg` = 108 AND `superhero`.`height_cm` = 188
SELECT `publisher`.`publisher_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `superhero`.`id` = 38
SELECT `race`.`race` FROM `hero_attribute` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` ORDER BY `hero_attribute`.`attribute_value` DESC LIMIT 1
SELECT `alignment`.`alignment`, `superpower`.`power_name` FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Atom IV'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `colour`.`colour` = 'Blue' LIMIT 5
SELECT AVG(`hero_attribute`.`attribute_value`) FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `superhero`.`alignment_id` = 3
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`skin_colour_id` = `colour`.`id` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` = 100
SELECT COUNT(*) FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `alignment`.`id` = 1 AND `gender`.`id` = 2
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `hero_attribute`.`attribute_value` BETWEEN 75 AND 80
SELECT `race`.`race` FROM `superhero` INNER JOIN `colour` ON `superhero`.`hair_colour_id` = `colour`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `colour`.`colour` = 'blue' AND `gender`.`gender` = 'Male'
SELECT (CAST(COUNT(CASE WHEN `gender`.`id` = 2 THEN 1 ELSE NULL END) AS REAL) / COUNT(*)) * 100.0 AS percentage FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `alignment`.`id` = 2
SELECT COUNT(CASE WHEN `colour`.`id` = 7 THEN 1 ELSE NULL END) - COUNT(CASE WHEN `colour`.`id` = 1 THEN 1 ELSE NULL END) FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` = 0 OR `superhero`.`weight_kg` IS NULL
SELECT `hero_attribute`.`attribute_value` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = 'Hulk' AND `attribute`.`attribute_name` = 'Strength'
SELECT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`superhero_name` = 'Ajax'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `colour` AS T2 ON T1.`skin_colour_id` = T2.`id` INNER JOIN `alignment` AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`colour` = 'Green' AND T3.`alignment` = 'Bad'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `gender` AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN `publisher` AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'
SELECT `superhero`.`superhero_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Wind Control' ORDER BY `superhero`.`superhero_name` ASC
SELECT `gender`.`gender` FROM `superhero` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superpower`.`power_name` = 'Phoenix Force'
SELECT `superhero_name` FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `publisher`.`publisher_name` = 'DC Comics' ORDER BY `superhero`.`weight_kg` DESC LIMIT 1
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` WHERE `race`.`race` <> 'Human' AND `publisher`.`publisher_name` = 'Dark Horse Comics'
SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `hero_attribute` AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN `attribute` AS T3 ON T2.`attribute_id` = T3.`id` WHERE T2.`attribute_value` = 100 AND T3.`attribute_name` = 'Speed'
SELECT (SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'DC Comics') - (SELECT COUNT(*) FROM `superhero` AS T1 INNER JOIN `publisher` AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Marvel Comics') AS difference
SELECT `attribute`.`attribute_name` FROM `hero_attribute` INNER JOIN `superhero` ON `hero_attribute`.`hero_id` = `superhero`.`id` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `superhero`.`superhero_name` = 'Black Panther' ORDER BY `hero_attribute`.`attribute_value` ASC LIMIT 1
SELECT `colour`.`colour` FROM `superhero` JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Abomination'
SELECT `superhero_name` FROM `superhero` ORDER BY `height_cm` DESC LIMIT 1
SELECT `superhero_name` FROM `superhero` WHERE `full_name` = 'Charles Chandler'
SELECT CAST(COUNT(CASE WHEN `gender`.`gender` = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`superhero`.`id`) AS percentage FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `gender` ON `superhero`.`gender_id` = `gender`.`id` WHERE `publisher`.`publisher_name` = 'George Lucas'
SELECT CAST(SUM(CASE WHEN `alignment`.`alignment` = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `superhero` INNER JOIN `publisher` ON `superhero`.`publisher_id` = `publisher`.`id` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `publisher`.`publisher_name` = 'Marvel Comics'
SELECT COUNT(*) FROM `superhero` WHERE `full_name` LIKE 'John%'
SELECT `hero_id` FROM `hero_attribute` ORDER BY `attribute_value` ASC LIMIT 1
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `race`.`race` = 'Alien'
SELECT `superhero`.`full_name` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`weight_kg` < 100 AND `colour`.`colour` = 'Brown'
SELECT `hero_attribute`.`attribute_value` FROM `superhero` INNER JOIN `hero_attribute` ON `superhero`.`id` = `hero_attribute`.`hero_id` WHERE `superhero`.`superhero_name` = 'Aquababy'
SELECT `superhero`.`weight_kg`, `race`.`race` FROM `superhero` INNER JOIN `race` ON `superhero`.`race_id` = `race`.`id` WHERE `superhero`.`id` = 40
SELECT AVG(`superhero`.`height_cm`) FROM `superhero` INNER JOIN `alignment` ON `superhero`.`alignment_id` = `alignment`.`id` WHERE `alignment`.`alignment` = 'Neutral'
SELECT `hero_attribute`.`hero_id` FROM `hero_attribute` INNER JOIN `attribute` ON `hero_attribute`.`attribute_id` = `attribute`.`id` WHERE `attribute`.`attribute_name` = 'Intelligence'
SELECT `colour`.`colour` FROM `superhero` INNER JOIN `colour` ON `superhero`.`eye_colour_id` = `colour`.`id` WHERE `superhero`.`superhero_name` = 'Blackwulf'
SELECT DISTINCT `superpower`.`power_name` FROM `superhero` INNER JOIN `hero_power` ON `superhero`.`id` = `hero_power`.`hero_id` INNER JOIN `superpower` ON `hero_power`.`power_id` = `superpower`.`id` WHERE `superhero`.`height_cm` > (SELECT AVG(`height_cm`) * 0.8 FROM `superhero`)
SELECT `drivers`.`driverRef` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 20 ORDER BY `qualifying`.`q1` DESC LIMIT 5
SELECT `drivers`.`surname` FROM `drivers` INNER JOIN `qualifying` ON `drivers`.`driverId` = `qualifying`.`driverId` WHERE `qualifying`.`raceId` = 19 ORDER BY `qualifying`.`q2` ASC LIMIT 1
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`location` = 'Shanghai'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Germany'
SELECT `results`.`position` FROM `results` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `constructors`.`name` = 'Renault'
SELECT COUNT(`races`.`raceId`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2010 AND `circuits`.`country` NOT IN ('Asia', 'Europe')
SELECT `races`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Spain'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Australian Grand Prix'
SELECT `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `races`.`time` FROM `races` JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Sepang International Circuit'
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Abu Dhabi Grand Prix'
SELECT `constructors`.`nationality` FROM `constructorResults` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`points` = 1 AND `constructorResults`.`raceId` = 24
SELECT `qualifying`.`q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Bruno' AND `drivers`.`surname` = 'Senna' AND `qualifying`.`raceId` = 354
SELECT `drivers`.`nationality` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`q2` = '0:01:40' AND `qualifying`.`raceId` = 355
SELECT `drivers`.`number` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 903 AND `qualifying`.`q3` = '0:01:54'
SELECT COUNT(`results`.`driverId`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `races`.`name` = 'Bahrain Grand Prix' AND `races`.`year` = 2007 AND `results`.`time` IS NULL
SELECT `seasons`.`url` FROM `races` INNER JOIN `seasons` ON `races`.`year` = `seasons`.`year` WHERE `races`.`raceId` = 901
SELECT COUNT(`results`.`driverId`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `races`.`date` = '2015-11-29' AND `status`.`status` = 'Finished'
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`dob` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `results`.`raceId` = 592 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` ASC LIMIT 1
SELECT `drivers`.`url` FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `lapTimes`.`raceId` = 161 AND `lapTimes`.`time` LIKE '1:27%'
SELECT `drivers`.`nationality` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `results`.`raceId` = 933 ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'Malaysian Grand Prix'
SELECT `constructors`.`url` FROM `constructorResults` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `constructorResults`.`raceId` = 9 ORDER BY `constructorResults`.`points` DESC LIMIT 1
SELECT `qualifying`.`q1` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lucas' AND `drivers`.`surname` = 'di Grassi' AND `qualifying`.`raceId` = 345
SELECT `drivers`.`nationality` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 347 AND `qualifying`.`q2` = '0:01:15'
SELECT `drivers`.`code` FROM `qualifying` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`raceId` = 45 AND `qualifying`.`q3` LIKE '0:01:33%'
SELECT T3.`time` FROM `drivers` AS T1 INNER JOIN `results` AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN `races` AS T3 ON T2.`raceId` = T3.`raceId` WHERE T1.`forename` = 'Bruce' AND T1.`surname` = 'McLaren' AND T3.`raceId` = 743
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'San Marino Grand Prix' AND `races`.`year` = 2006 AND `results`.`position` = 2
SELECT `seasons`.`url` FROM `seasons` INNER JOIN `races` ON `seasons`.`year` = `races`.`year` WHERE `races`.`raceId` = 901
SELECT COUNT(*) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `races`.`date` = '2015-11-29' AND `status`.`status` != 'Finished'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `results`.`raceId` = 872 AND `results`.`time` IS NOT NULL ORDER BY `drivers`.`dob` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `lapTimes`.`raceId` = 348 ORDER BY `lapTimes`.`time` ASC LIMIT 1
SELECT `drivers`.`nationality` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT (T3.`fastestLapSpeed` - T4.`fastestLapSpeed`) * 100.0 / T3.`fastestLapSpeed` AS percentage FROM `drivers` AS T1 INNER JOIN `results` AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN `results` AS T3 ON T2.`driverId` = T3.`driverId` AND T3.`raceId` = 853 INNER JOIN `results` AS T4 ON T2.`driverId` = T4.`driverId` AND T4.`raceId` = 854 WHERE T1.`forename` = 'Paul' AND T1.`surname` = 'di Resta`
SELECT CAST(SUM(CASE WHEN `results`.`time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`driverId`) AS percentage FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`date` = '1983-07-16'
SELECT MIN(`year`) FROM `races` WHERE `name` = 'Singapore Grand Prix'
SELECT `raceId`, `name` FROM `races` WHERE `year` = 2005 ORDER BY `name` DESC
SELECT `name` FROM `races` WHERE strftime('%Y-%m', `date`) = (SELECT strftime('%Y-%m', MIN(`date`)) FROM `races`)
SELECT `name`, `date` FROM `races` WHERE `year` = 1999 ORDER BY `round` DESC LIMIT 1
SELECT `year` FROM `races` GROUP BY `year` ORDER BY COUNT(`round`) DESC LIMIT 1
SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2017 AND `races`.`name` NOT IN (SELECT `races`.`name` FROM `races` WHERE `races`.`year` = 2000)
SELECT T2.`country`, T2.`name`, T2.`location` FROM `races` AS T1 INNER JOIN `circuits` AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`name` = 'European Grand Prix' ORDER BY T1.`year` ASC LIMIT 1
SELECT MAX(`races`.`year`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Brands Hatch' AND `races`.`name` = 'British Grand Prix'
SELECT COUNT(DISTINCT `races`.`year`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit' AND `races`.`name` LIKE '%British Grand Prix%'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Singapore Grand Prix' AND `races`.`year` = 2010 ORDER BY `results`.`positionOrder`
SELECT `drivers`.`forename`, `drivers`.`surname`, `driverStandings`.`points` FROM `driverStandings` INNER JOIN `drivers` ON `driverStandings`.`driverId` = `drivers`.`driverId` ORDER BY `driverStandings`.`points` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname`, `results`.`points` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Chinese Grand Prix' AND `races`.`year` = 2017 ORDER BY `results`.`points` DESC LIMIT 3
SELECT `drivers`.`forename`, `drivers`.`surname`, `races`.`name`, `lapTimes`.`milliseconds` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(`lapTimes`.`milliseconds`) FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Malaysian Grand Prix' AND `races`.`year` = 2009
SELECT CAST(SUM(CASE WHEN `results`.`position` > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`raceId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`surname` = 'Hamilton' AND `races`.`year` >= 2010
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`nationality`, MAX(`driverStandings`.`points`) AS `max_points` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` GROUP BY `drivers`.`forename`, `drivers`.`surname`, `drivers`.`nationality` ORDER BY COUNT(`driverStandings`.`wins`) DESC LIMIT 1
SELECT `forename`, `surname`, (strftime('%Y', 'now') - strftime('%Y', `dob`)) AS `age` FROM `drivers` WHERE `nationality` = 'Japanese' ORDER BY `dob` DESC LIMIT 1
SELECT `circuits`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`year` BETWEEN 1990 AND 2000 GROUP BY `circuits`.`name` HAVING COUNT(`races`.`raceId`) = 4
SELECT `circuits`.`name`, `circuits`.`location`, `races`.`name` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `circuits`.`country` = 'USA' AND `races`.`year` = 2006
SELECT `races`.`name`, `circuits`.`name`, `circuits`.`location` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE strftime('%m', `races`.`date`) = '09' AND strftime('%Y', `races`.`date`) = '2005'
SELECT `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Alex' AND `drivers`.`surname` = 'Yoong' AND `results`.`position` < 20
SELECT COUNT(*) FROM `results` AS T1 INNER JOIN `races` AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN `circuits` AS T3 ON T2.`circuitId` = T3.`circuitId` INNER JOIN `drivers` AS T4 ON T1.`driverId` = T4.`driverId` WHERE T4.`forename` = 'Michael' AND T4.`surname` = 'Schumacher' AND T3.`name` = 'Sepang International Circuit' AND T1.`position` = 1
SELECT `races`.`name`, `races`.`year` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Michael' AND `drivers`.`surname` = 'Schumacher' ORDER BY `results`.`milliseconds` ASC LIMIT 1
SELECT AVG(`results`.`points`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Eddie' AND `drivers`.`surname` = 'Irvine' AND `races`.`year` = 2000
SELECT `races`.`name`, `races`.`year`, `results`.`points` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `races`.`year` ASC LIMIT 1
SELECT `races`.`name`, `circuits`.`country`, `races`.`date` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2017 ORDER BY `races`.`date`
SELECT `races`.`name`, `races`.`year`, `circuits`.`location` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` ORDER BY `results`.`laps` DESC LIMIT 1
SELECT CAST(SUM(CASE WHEN `circuits`.`country` = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`races`.`raceId`) FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`name` = 'European Grand Prix'
SELECT `lat`, `lng` FROM `circuits` WHERE `name` = 'Silverstone Circuit'
SELECT `name` FROM `circuits` WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1
SELECT `circuitRef` FROM `circuits` WHERE `name` = 'Marina Bay Street Circuit'
SELECT `country` FROM `circuits` ORDER BY `alt` DESC LIMIT 1
SELECT COUNT(`driverId`) FROM `drivers` WHERE `code` IS NULL
SELECT `nationality` FROM `drivers` ORDER BY `dob` ASC LIMIT 1
SELECT `surname` FROM `drivers` WHERE `nationality` = 'Italian'
SELECT `url` FROM `drivers` WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton'
SELECT `circuits`.`name` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`raceId`, `races`.`year`, `races`.`round`, `races`.`circuitId`, `races`.`name`, `races`.`date`, `races`.`time`, `races`.`url` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Silverstone Circuit'
SELECT `races`.`time` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `races`.`year` = 2010 AND `circuits`.`name` = 'Abu Dhabi Circuit'
SELECT COUNT(*) FROM `races` AS r INNER JOIN `circuits` AS c ON r.`circuitId` = c.`circuitId` WHERE c.`country` = 'Italy'
SELECT `races`.`date` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Circuit de Barcelona-Catalunya'
SELECT `circuits`.`url` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT MIN(`results`.`fastestLapTime`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` ORDER BY `results`.`fastestLapSpeed` DESC LIMIT 1
SELECT `drivers`.`driverRef` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Canadian Grand Prix' AND `races`.`year` = 2007 AND `results`.`position` = 1
SELECT `races`.`name`, `races`.`date`, `races`.`year` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `races`.`name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `results`.`rank` ASC LIMIT 1
SELECT MAX(`results`.`fastestLapSpeed`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Spanish Grand Prix'
SELECT DISTINCT `races`.`year` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `results`.`positionOrder` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Chinese Grand Prix' AND `races`.`year` = 2008
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 1989 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`grid` = 4
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008 AND `results`.`time` IS NOT NULL
SELECT `results`.`fastestLap`, `results`.`fastestLapTime` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008
SELECT `results`.`time` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Chinese Grand Prix' AND `results`.`position` = 2
SELECT `drivers`.`forename`, `drivers`.`surname`, `drivers`.`url` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`year` = 2008 AND `races`.`name` = 'Australian Grand Prix' AND `results`.`position` = 1
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`nationality` = 'British' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Chinese Grand Prix' AND `races`.`year` = 2008 AND `results`.`time` IS NOT NULL
SELECT SUM(`results`.`points`) AS total_points FROM `results` JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT AVG((SUBSTR(`results`.`fastestLapTime`, 1, 2) * 60) + SUBSTR(`results`.`fastestLapTime`, 4, 2) + (SUBSTR(`results`.`fastestLapTime`, 7, 3) / 1000)) AS avg_fastest_lap_time_seconds FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT CAST(SUM(CASE WHEN `results`.`time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`results`.`raceId`) AS completion_rate FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2008
SELECT (CAST((julianday(T2.`time`) - julianday(T1.`time`)) AS REAL) / julianday(T2.`time`)) * 100 AS percentage_faster FROM `results` AS T1 INNER JOIN `races` AS T3 ON T1.`raceId` = T3.`raceId` INNER JOIN `results` AS T2 ON T1.`raceId` = T2.`raceId` WHERE T3.`name` = 'Australian Grand Prix' AND T3.`year` = 2008 AND T1.`position` = 1 AND T2.`position` = (SELECT MAX(`position`) FROM `results` WHERE `raceId` = T3.`raceId` AND `time` IS NOT NULL)
SELECT COUNT(`circuitId`) FROM `circuits` WHERE `country` = 'Australia' AND `location` = 'Adelaide'
SELECT `lat`, `lng` FROM `circuits` WHERE `country` = 'USA'
SELECT COUNT(`driverId`) FROM `drivers` WHERE `nationality` = 'British' AND STRFTIME('%Y', `dob`) > '1980'
SELECT MAX(`constructorResults`.`points`) FROM `constructors` INNER JOIN `constructorResults` ON `constructors`.`constructorId` = `constructorResults`.`constructorId` WHERE `constructors`.`nationality` = 'British'
SELECT `name` FROM `constructors` WHERE `constructorId` = (SELECT `constructorId` FROM `constructorStandings` ORDER BY `points` DESC LIMIT 1)
SELECT `constructors`.`name` FROM `constructors` INNER JOIN `constructorResults` ON `constructors`.`constructorId` = `constructorResults`.`constructorId` WHERE `constructorResults`.`raceId` = 291 AND `constructorResults`.`points` = 0
SELECT COUNT(DISTINCT `constructors`.`constructorId`) FROM `constructors` INNER JOIN `constructorResults` ON `constructors`.`constructorId` = `constructorResults`.`constructorId` WHERE `constructors`.`nationality` = 'Japanese' AND `constructorResults`.`points` = 0 GROUP BY `constructorResults`.`constructorId` HAVING COUNT(`constructorResults`.`raceId`) = 2
SELECT DISTINCT `constructors`.`name` FROM `constructors` INNER JOIN `constructorStandings` ON `constructors`.`constructorId` = `constructorStandings`.`constructorId` WHERE `constructorStandings`.`position` = 1
SELECT COUNT(*) FROM `constructors` AS c INNER JOIN `results` AS r ON c.`constructorId` = r.`constructorId` INNER JOIN `races` AS ra ON r.`raceId` = ra.`raceId` WHERE c.`nationality` = 'French' AND r.`laps` > 50
SELECT CAST(SUM(CASE WHEN `drivers`.`nationality` = 'Japanese' AND `results`.`time` IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` BETWEEN 2007 AND 2009
SELECT `races`.`year`, AVG(CAST(SUBSTR(`results`.`time`, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(`results`.`time`, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(`results`.`time`, 7) AS REAL)) AS avg_time_seconds FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `results`.`position` = 1 AND `results`.`time` IS NOT NULL AND `races`.`year` < 1975 GROUP BY `races`.`year`
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` WHERE STRFTIME('%Y', `drivers`.`dob`) > '1975' AND `driverStandings`.`position` = 2
SELECT COUNT(`drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `drivers`.`nationality` = 'Italian' AND `results`.`time` IS NULL
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `results` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` ORDER BY `results`.`fastestLapTime` ASC LIMIT 1
SELECT `results`.`fastestLap` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` = 2009 AND `results`.`position` = 1
SELECT AVG(`results`.`fastestLapSpeed`) FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `races`.`name` = 'Spanish Grand Prix' AND `races`.`year` = 2009
SELECT `races`.`name`, `races`.`year` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `results`.`milliseconds` IS NOT NULL ORDER BY `results`.`milliseconds` ASC LIMIT 1
SELECT CAST(COUNT(CASE WHEN strftime('%Y', `drivers`.`dob`) < '1985' AND `results`.`laps` > 50 THEN `drivers`.`driverId` ELSE NULL END) AS REAL) * 100 / COUNT(`drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`year` BETWEEN 2000 AND 2005
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`nationality` = 'French' AND `lapTimes`.`milliseconds` < 120000
SELECT `code` FROM `drivers` WHERE `nationality` = 'American'
SELECT `raceId` FROM `races` WHERE `year` = 2009
SELECT COUNT(DISTINCT `driverId`) FROM `results` WHERE `raceId` = 18
SELECT `drivers`.`code` FROM `drivers` ORDER BY `drivers`.`dob` DESC LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `forename` = 'Robert' AND `surname` = 'Kubica'
SELECT COUNT(*) FROM `drivers` WHERE `nationality` = 'British' AND SUBSTR(`dob`, 1, 4) = '1980'
SELECT `drivers`.`forename`, `drivers`.`surname`, MIN(`lapTimes`.`time`) AS `earliest_lap_time` FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`dob` BETWEEN '1980-01-01' AND '1990-12-31' AND `drivers`.`nationality` = 'German' GROUP BY `drivers`.`driverId` ORDER BY `earliest_lap_time` ASC LIMIT 3
SELECT `driverRef` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1
SELECT `drivers`.`driverId`, `drivers`.`code` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` WHERE `drivers`.`dob` LIKE '1971%' AND `results`.`fastestLapTime` IS NOT NULL
SELECT `drivers`.`forename`, `drivers`.`surname`, MAX(`lapTimes`.`time`) AS `latest_lap_time` FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`dob` < '1982-01-01' AND `drivers`.`nationality` = 'Spanish' GROUP BY `drivers`.`driverId` ORDER BY `latest_lap_time` DESC LIMIT 10
SELECT `races`.`year` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` ORDER BY `results`.`fastestLapTime` ASC LIMIT 1
SELECT `races`.`year` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` ORDER BY `lapTimes`.`time` DESC LIMIT 1
SELECT `lapTimes`.`driverId` FROM `lapTimes` WHERE `lapTimes`.`lap` = 1 ORDER BY `lapTimes`.`time` ASC LIMIT 5
SELECT COUNT(`results`.`resultId`) FROM `results` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `results`.`raceId` > 50 AND `results`.`raceId` < 100 AND `status`.`status` = 'Disqualified' AND `results`.`time` IS NOT NULL
SELECT COUNT(`races`.`raceId`) AS `count`, `circuits`.`location`, `circuits`.`lat`, `circuits`.`lng` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Austria' GROUP BY `circuits`.`location`, `circuits`.`lat`, `circuits`.`lng`
SELECT `races`.`raceId` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` WHERE `results`.`time` IS NOT NULL GROUP BY `races`.`raceId` ORDER BY COUNT(`results`.`driverId`) DESC LIMIT 1
SELECT `drivers`.`driverRef`, `drivers`.`nationality`, `drivers`.`dob` FROM `drivers` INNER JOIN `qualifying` ON `drivers`.`driverId` = `qualifying`.`driverId` WHERE `qualifying`.`raceId` = 23 AND `qualifying`.`q2` IS NOT NULL
SELECT `races`.`year`, `races`.`name`, `races`.`date`, `races`.`time` FROM `drivers` INNER JOIN `qualifying` ON `drivers`.`driverId` = `qualifying`.`driverId` INNER JOIN `races` ON `qualifying`.`raceId` = `races`.`raceId` WHERE `races`.`date` = (SELECT MIN(`races`.`date`) FROM `races` INNER JOIN `qualifying` ON `races`.`raceId` = `qualifying`.`raceId` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` ORDER BY `drivers`.`dob` DESC LIMIT 1)
SELECT COUNT(DISTINCT `drivers`.`driverId`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `drivers`.`nationality` = 'American' AND `status`.`status` = 'Puncture'
SELECT T1.`name`, T1.`url` FROM `constructors` AS T1 INNER JOIN `constructorResults` AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'Italian' ORDER BY T2.`points` DESC LIMIT 1
SELECT constructors.`url` FROM `constructors` INNER JOIN `constructorStandings` ON constructors.`constructorId` = constructorStandings.`constructorId` ORDER BY constructorStandings.`wins` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'French Grand Prix' AND `lapTimes`.`lap` = 3 ORDER BY `lapTimes`.`time` DESC LIMIT 1
SELECT `races`.`name`, `lapTimes`.`milliseconds` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` WHERE `lapTimes`.`lap` = 1 ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT AVG(CAST(SUBSTR(`results`.`fastestLapTime`, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(`results`.`fastestLapTime`, 4, 2) AS INTEGER) + CAST(SUBSTR(`results`.`fastestLapTime`, 7, 3) AS REAL) / 1000) AS avg_fastest_lap_time FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'United States Grand Prix' AND `races`.`year` = 2006 AND `results`.`position` < 11
SELECT `drivers`.`forename`, `drivers`.`surname`, AVG(`pitStops`.`duration`) AS avg_duration FROM `drivers` INNER JOIN `pitStops` ON `drivers`.`driverId` = `pitStops`.`driverId` WHERE `drivers`.`nationality` = 'German' AND `drivers`.`dob` > '1980-01-01' AND `drivers`.`dob` < '1985-12-31' GROUP BY `drivers`.`driverId` ORDER BY avg_duration ASC LIMIT 3
SELECT `drivers`.`forename`, `drivers`.`surname`, `results`.`time` FROM `races` INNER JOIN `results` ON `races`.`raceId` = `results`.`raceId` INNER JOIN `drivers` ON `results`.`driverId` = `drivers`.`driverId` WHERE `races`.`name` = 'Canadian Grand Prix' AND `races`.`year` = 2008 AND `results`.`position` = 1
SELECT `constructors`.`constructorRef`, `constructors`.`url` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `constructors` ON `results`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`year` = 2009 AND `races`.`name` = 'Singapore Grand Prix' AND `results`.`position` = 1
SELECT `forename`, `surname`, `dob` FROM `drivers` WHERE `nationality` = 'Austrian' AND strftime('%Y', `dob`) BETWEEN '1981' AND '1991'
SELECT `forename` || ' ' || `surname` AS `full_name`, `url`, `dob` FROM `drivers` WHERE `nationality` = 'German' AND strftime('%Y', `dob`) BETWEEN '1971' AND '1985' ORDER BY `dob` DESC
SELECT `location`, `country`, `lat`, `lng` FROM `circuits` WHERE `name` = 'Hungaroring'
SELECT SUM(`constructorResults`.`points`) AS `total_points`, `constructors`.`name`, `constructors`.`nationality` FROM `races` INNER JOIN `constructorResults` ON `races`.`raceId` = `constructorResults`.`raceId` INNER JOIN `constructors` ON `constructorResults`.`constructorId` = `constructors`.`constructorId` WHERE `races`.`name` = 'Monaco Grand Prix' AND `races`.`year` BETWEEN 1980 AND 2010 GROUP BY `constructors`.`name`, `constructors`.`nationality` ORDER BY `total_points` DESC LIMIT 1
SELECT AVG(`results`.`points`) FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Turkish Grand Prix'
SELECT AVG(race_count) FROM (SELECT COUNT(`raceId`) AS race_count FROM `races` WHERE `date` BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY `year`)
SELECT `nationality` FROM `drivers` GROUP BY `nationality` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `wins` FROM `driverStandings` WHERE `position` = 91
SELECT `races`.`name` FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` ORDER BY `results`.`fastestLapTime` ASC LIMIT 1
SELECT `circuits`.`location`, `circuits`.`country` FROM `races` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` ORDER BY `races`.`date` DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `qualifying` INNER JOIN `races` ON `qualifying`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` INNER JOIN `drivers` ON `qualifying`.`driverId` = `drivers`.`driverId` WHERE `qualifying`.`position` = 1 AND `qualifying`.`q3` = (SELECT MIN(`q3`) FROM `qualifying` WHERE `position` = 1) AND `races`.`year` = 2008 AND `circuits`.`name` = 'Marina Bay Street Circuit'
SELECT `drivers`.`forename` || ' ' || `drivers`.`surname` AS `full_name`, `drivers`.`nationality`, `races`.`name` AS `race_name` FROM `drivers` INNER JOIN `results` ON `drivers`.`driverId` = `results`.`driverId` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` WHERE `drivers`.`dob` = (SELECT MAX(`dob`) FROM `drivers`) ORDER BY `races`.`date` ASC LIMIT 1
SELECT COUNT(`results`.`statusId`) FROM `results` INNER JOIN `races` ON `results`.`raceId` = `races`.`raceId` INNER JOIN `status` ON `results`.`statusId` = `status`.`statusId` WHERE `races`.`name` = 'Canadian Grand Prix' AND `status`.`status` = 'Accident' GROUP BY `results`.`driverId` ORDER BY COUNT(`results`.`statusId`) DESC LIMIT 1
SELECT `drivers`.`forename`, `drivers`.`surname`, `driverStandings`.`wins` FROM `drivers` INNER JOIN `driverStandings` ON `drivers`.`driverId` = `driverStandings`.`driverId` ORDER BY `drivers`.`dob` ASC LIMIT 1
SELECT MAX(`duration`) FROM `pitStops`
SELECT MIN(`milliseconds`) FROM `lapTimes`
SELECT MAX(`pitStops`.`duration`) FROM `drivers` INNER JOIN `pitStops` ON `drivers`.`driverId` = `pitStops`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `pitStops`.`lap` FROM `drivers` INNER JOIN `pitStops` ON `drivers`.`driverId` = `pitStops`.`driverId` INNER JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' AND `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2011
SELECT `drivers`.`forename`, `drivers`.`surname`, `pitStops`.`duration` FROM `drivers` INNER JOIN `pitStops` ON `drivers`.`driverId` = `pitStops`.`driverId` INNER JOIN `races` ON `pitStops`.`raceId` = `races`.`raceId` WHERE `races`.`name` = 'Australian Grand Prix' AND `races`.`year` = 2011
SELECT MIN(`lapTimes`.`time`) AS `lap_record` FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT `drivers`.`forename`, `drivers`.`surname` FROM `drivers` INNER JOIN `lapTimes` ON `drivers`.`driverId` = `lapTimes`.`driverId` ORDER BY `lapTimes`.`time` ASC LIMIT 20
SELECT `circuits`.`name`, `lapTimes`.`position` FROM `lapTimes` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton' ORDER BY `lapTimes`.`milliseconds` ASC LIMIT 1
SELECT MIN(`lapTimes`.`time`) AS `lap_record` FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit'
SELECT `circuits`.`name`, `drivers`.`forename`, `drivers`.`surname`, MIN(`lapTimes`.`time`) AS `lap_record` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` INNER JOIN `drivers` ON `lapTimes`.`driverId` = `drivers`.`driverId` WHERE `circuits`.`country` = 'Italy' GROUP BY `circuits`.`name`, `drivers`.`forename`, `drivers`.`surname`
SELECT `races`.`name` FROM `races` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `lapTimes`.`time` ASC LIMIT 1
SELECT `pitStops`.`duration` FROM `pitStops` INNER JOIN `lapTimes` ON `pitStops`.`raceId` = `lapTimes`.`raceId` AND `pitStops`.`driverId` = `lapTimes`.`driverId` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`name` = 'Austrian Grand Prix Circuit' ORDER BY `lapTimes`.`time` ASC LIMIT 1
SELECT `circuits`.`lat`, `circuits`.`lng` FROM `circuits` INNER JOIN `races` ON `circuits`.`circuitId` = `races`.`circuitId` INNER JOIN `lapTimes` ON `races`.`raceId` = `lapTimes`.`raceId` WHERE `lapTimes`.`time` = '1:29.488'
SELECT AVG(`pitStops`.`milliseconds`) FROM `pitStops` INNER JOIN `drivers` ON `pitStops`.`driverId` = `drivers`.`driverId` WHERE `drivers`.`forename` = 'Lewis' AND `drivers`.`surname` = 'Hamilton'
SELECT AVG(`lapTimes`.`milliseconds`) FROM `lapTimes` INNER JOIN `races` ON `lapTimes`.`raceId` = `races`.`raceId` INNER JOIN `circuits` ON `races`.`circuitId` = `circuits`.`circuitId` WHERE `circuits`.`country` = 'Italy'
SELECT `player_api_id` FROM `Player_Attributes` ORDER BY `overall_rating` DESC LIMIT 1
SELECT `player_name`, `height` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT `preferred_foot` FROM `Player_Attributes` ORDER BY `potential` ASC LIMIT 1
SELECT COUNT(`Player_Attributes`.`id`) FROM `Player_Attributes` WHERE `Player_Attributes`.`overall_rating` >= 60 AND `Player_Attributes`.`overall_rating` < 65 AND `Player_Attributes`.`defensive_work_rate` = 'low'
SELECT `Player`.`player_api_id` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`crossing` DESC LIMIT 5
SELECT `League`.`name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' GROUP BY `League`.`name` ORDER BY SUM(`Match`.`home_team_goal` + `Match`.`away_team_goal`) DESC LIMIT 1
SELECT `T2`.`team_long_name` FROM `Match` AS `T1` INNER JOIN `Team` AS `T2` ON `T1`.`home_team_api_id` = `T2`.`team_api_id` WHERE `T1`.`season` = '2015/2016' AND `T1`.`home_team_goal` < `T1`.`away_team_goal` GROUP BY `T2`.`team_long_name` ORDER BY COUNT(`T1`.`id`) ASC LIMIT 1
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` ORDER BY `Player_Attributes`.`penalties` DESC LIMIT 10
SELECT `Team`.`team_long_name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` INNER JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Scotland Premier League' AND `Match`.`season` = '2009/2010' AND `Match`.`away_team_goal` > `Match`.`home_team_goal` GROUP BY `Team`.`team_long_name` ORDER BY COUNT(*) DESC LIMIT 1
SELECT `Team`.`team_long_name`, `Team_Attributes`.`buildUpPlaySpeed` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` ORDER BY `Team_Attributes`.`buildUpPlaySpeed` DESC LIMIT 4
SELECT `League`.`name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' GROUP BY `League`.`name` ORDER BY SUM(`Match`.`home_team_goal` = `Match`.`away_team_goal`) DESC LIMIT 1
SELECT `Player`.`player_name`, (STRFTIME('%Y', 'now') - STRFTIME('%Y', `Player`.`birthday`)) AS `age` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`sprint_speed` >= 97 AND STRFTIME('%Y', `Player_Attributes`.`date`) BETWEEN '2013' AND '2015'
SELECT L.`name`, COUNT(M.`id`) AS match_count FROM `Match` M INNER JOIN `League` L ON M.`league_id` = L.`id` GROUP BY L.`name` ORDER BY match_count DESC LIMIT 1
SELECT AVG(`height`) FROM `Player` WHERE `birthday` >= '1990-01-01 00:00:00' AND `birthday` < '1996-01-01 00:00:00'
SELECT `Player_Attributes`.`player_api_id` FROM `Player_Attributes` WHERE substr(`Player_Attributes`.`date`, 1, 4) = '2010' AND `Player_Attributes`.`overall_rating` = (SELECT MAX(`overall_rating`) FROM `Player_Attributes` WHERE substr(`date`, 1, 4) = '2010')
SELECT `team_fifa_api_id` FROM `Team_Attributes` WHERE `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE strftime('%Y', `Team_Attributes`.`date`) = '2012' AND `Team_Attributes`.`buildUpPlayPassing` > (SELECT AVG(`buildUpPlayPassing`) FROM `Team_Attributes` WHERE strftime('%Y', `date`) = '2012' AND `buildUpPlayPassing` IS NOT NULL)
SELECT CAST(SUM(CASE WHEN `preferred_foot` = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`player_fifa_api_id`) FROM `Player` WHERE SUBSTR(`birthday`, 1, 4) BETWEEN '1987' AND '1992'
SELECT `League`.`name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` GROUP BY `League`.`name` ORDER BY SUM(`Match`.`home_team_goal` + `Match`.`away_team_goal`) ASC LIMIT 5
SELECT CAST(SUM(`Player_Attributes`.`long_shots`) AS REAL) / COUNT(`Player_Attributes`.`player_fifa_api_id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_fifa_api_id` = `Player_Attributes`.`player_fifa_api_id` WHERE `Player`.`player_name` = 'Ahmed Samir Farag'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_fifa_api_id` = `Player_Attributes`.`player_fifa_api_id` WHERE `Player`.`height` > 180 GROUP BY `Player`.`player_name` ORDER BY AVG(`Player_Attributes`.`heading_accuracy`) DESC LIMIT 10
SELECT `Team`.`team_long_name` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayDribblingClass` = 'Normal' AND `Team_Attributes`.`date` >= '2014-01-01 00:00:00' AND `Team_Attributes`.`date` <= '2014-01-31 00:00:00' AND `Team_Attributes`.`chanceCreationPassing` < (SELECT AVG(`chanceCreationPassing`) FROM `Team_Attributes` WHERE `buildUpPlayDribblingClass` = 'Normal' AND `date` >= '2014-01-01 00:00:00' AND `date` <= '2014-01-31 00:00:00') ORDER BY `Team_Attributes`.`chanceCreationPassing` DESC
SELECT `League`.`name` FROM `League` INNER JOIN `Match` ON `League`.`id` = `Match`.`league_id` WHERE `Match`.`season` = '2009/2010' GROUP BY `League`.`name` HAVING AVG(`Match`.`home_team_goal`) > AVG(`Match`.`away_team_goal`)
SELECT `team_short_name` FROM `Team` WHERE `team_long_name` = 'Queens Park Rangers'
SELECT `player_name` FROM `Player` WHERE `birthday` LIKE '1970-10%'
SELECT `Player_Attributes`.`attacking_work_rate` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Franco Zennaro'
SELECT `Team_Attributes`.`buildUpPlayPositioningClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'ADO Den Haag'
SELECT `Player_Attributes`.`heading_accuracy` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Francois Affolter' AND `Player_Attributes`.`date` = '2014-09-18 00:00:00'
SELECT `Player_Attributes`.`overall_rating` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Gabriel Tamas' AND strftime('%Y', `Player_Attributes`.`date`) = '2011'
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Scotland Premier League' AND `Match`.`season` = '2015/2016'
SELECT `Player_Attributes`.`preferred_foot` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player`.`birthday` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT COUNT(`Player`.`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`weight` < 130 AND `Player_Attributes`.`preferred_foot` = 'left'
SELECT `team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Risky'
SELECT `Player_Attributes`.`defensive_work_rate` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'David Wilson'
SELECT `Player`.`birthday` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands'
SELECT AVG(`home_team_goal`) FROM `Match` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Poland' AND `Match`.`season` = '2010/2011'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`height` = (SELECT MAX(`height`) FROM `Player`) OR `Player`.`height` = (SELECT MIN(`height`) FROM `Player`) GROUP BY `Player`.`player_name` ORDER BY AVG(`Player_Attributes`.`finishing`) DESC LIMIT 1
SELECT `player_name` FROM `Player` WHERE `height` > 180
SELECT COUNT(`id`) FROM `Player` WHERE strftime('%Y', `birthday`) > '1990'
SELECT COUNT(`Player`.`id`) FROM `Player` WHERE `Player`.`player_name` LIKE 'Adam%' AND `Player`.`weight` > 170
SELECT DISTINCT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` > 80 AND strftime('%Y', `Player_Attributes`.`date`) BETWEEN '2008' AND '2010'
SELECT `Player_Attributes`.`potential` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`preferred_foot` = 'left'
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeedClass` = 'Fast'
SELECT `Team_Attributes`.`buildUpPlayPassingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_short_name` = 'CLB'
SELECT `Team`.`team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlayPassing` > 70
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE strftime('%Y', `Player_Attributes`.`date`) BETWEEN '2010' AND '2015' AND `Player`.`height` > 170
SELECT `player_name` FROM `Player` ORDER BY `height` ASC LIMIT 1
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Italy Serie A'
SELECT `Team`.`team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeed` = 31 AND `Team_Attributes`.`buildUpPlayDribbling` = 53 AND `Team_Attributes`.`buildUpPlayPassing` = 32
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Doran'
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Germany 1. Bundesliga' AND strftime('%Y-%m', `Match`.`date`) BETWEEN '2008-08' AND '2008-10'
SELECT `Team`.`team_short_name` FROM `Match` INNER JOIN `Team` ON `Match`.`home_team_api_id` = `Team`.`team_api_id` WHERE `Match`.`home_team_goal` = 10
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`balance` = (SELECT MAX(`balance`) FROM `Player_Attributes`) AND `Player_Attributes`.`potential` = 61
SELECT (SUM(CASE WHEN P.`player_name` = 'Abdou Diallo' THEN PA.`ball_control` ELSE 0 END) / COUNT(CASE WHEN P.`player_name` = 'Abdou Diallo' THEN PA.`id` ELSE NULL END)) - (SUM(CASE WHEN P.`player_name` = 'Aaron Appindangoye' THEN PA.`ball_control` ELSE 0 END) / COUNT(CASE WHEN P.`player_name` = 'Aaron Appindangoye' THEN PA.`id` ELSE NULL END)) AS ball_control_difference FROM `Player` AS P INNER JOIN `Player_Attributes` AS PA ON P.`player_api_id` = PA.`player_api_id`
SELECT `team_long_name` FROM `Team` WHERE `team_short_name` = 'GEN'
SELECT `player_name` FROM `Player` WHERE `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY `birthday` ASC LIMIT 1
SELECT `player_name` FROM `Player` ORDER BY `height` DESC LIMIT 1
SELECT COUNT(`Player_Attributes`.`player_api_id`) FROM `Player_Attributes` WHERE `Player_Attributes`.`preferred_foot` = 'left' AND `Player_Attributes`.`attacking_work_rate` = 'low'
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Belgium Jupiler League'
SELECT `League`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Germany'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986' AND `Player_Attributes`.`defensive_work_rate` = 'high'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY `Player_Attributes`.`crossing` DESC LIMIT 1
SELECT `Player_Attributes`.`heading_accuracy` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Ariel Borysiuk'
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`height` > 180 AND `Player_Attributes`.`volleys` > 70
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`volleys` > 70 AND `Player_Attributes`.`dribbling` > 70
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium' AND `Match`.`season` = '2008/2009'
SELECT `Player_Attributes`.`long_passing` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player`.`birthday` ASC LIMIT 1
SELECT COUNT(`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `League`.`name` = 'Belgium Jupiler League' AND SUBSTR(`Match`.`date`, 1, 7) = '2009-04'
SELECT `League`.`name` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2008/2009' GROUP BY `League`.`name` ORDER BY COUNT(`Match`.`id`) DESC LIMIT 1
SELECT AVG(`Player_Attributes`.`overall_rating`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE strftime('%Y', `Player`.`birthday`) < '1986'
SELECT ( ( SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Ariel Borysiuk' ORDER BY PA.`date` DESC LIMIT 1 ) - ( SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Paulin Puel' ORDER BY PA.`date` DESC LIMIT 1 ) ) * 100.0 / ( SELECT `overall_rating` FROM `Player_Attributes` AS PA INNER JOIN `Player` AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Paulin Puel' ORDER BY PA.`date` DESC LIMIT 1 ) AS percentage_difference
SELECT AVG(`Team_Attributes`.`buildUpPlaySpeed`) FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Heart of Midlothian'
SELECT AVG(T1.`overall_rating`) FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Pietro Marino'
SELECT SUM(`Player_Attributes`.`crossing`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Lennox'
SELECT MAX(`Team_Attributes`.`chanceCreationPassing`), `Team_Attributes`.`chanceCreationPassingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Ajax'
SELECT `Player_Attributes`.`preferred_foot` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Abdou Diallo'
SELECT MAX(`T2`.`overall_rating`) FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`player_name` = 'Dorlan Pabon'
SELECT AVG(`Match`.`away_team_goal`) FROM `Match` INNER JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Team`.`team_long_name` = 'Parma' AND `Country`.`name` = 'Italy'
SELECT `Player`.`player_name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`overall_rating` = 77 AND `Player_Attributes`.`date` LIKE '2016-06-23%' ORDER BY `Player`.`birthday` ASC LIMIT 1
SELECT `Player_Attributes`.`overall_rating` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Mooy' AND `Player_Attributes`.`date` LIKE '2016-02-04%'
SELECT `Player_Attributes`.`potential` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Francesco Parravicini' AND `Player_Attributes`.`date` = '2010-08-30 00:00:00'
SELECT `Player_Attributes`.`attacking_work_rate` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Francesco Migliore' AND `Player_Attributes`.`date` LIKE '2015-05-01%'
SELECT `Player_Attributes`.`defensive_work_rate` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Berigaud' AND `Player_Attributes`.`date` = '2013-02-22 00:00:00'
SELECT MIN(`Player_Attributes`.`date`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Constant' AND `Player_Attributes`.`crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Kevin Constant')
SELECT `Team_Attributes`.`buildUpPlaySpeedClass` FROM `Team_Attributes` INNER JOIN `Team` ON `Team_Attributes`.`team_api_id` = `Team`.`team_api_id` WHERE `Team`.`team_long_name` = 'Willem II' AND `Team_Attributes`.`date` = '2012-02-22'
SELECT `Team_Attributes`.`buildUpPlayDribblingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_short_name` = 'LEI' AND `Team_Attributes`.`date` = '2015-09-10 00:00:00'
SELECT `Team_Attributes`.`buildUpPlayPassingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'FC Lorient' AND `Team_Attributes`.`date` LIKE '2010-02-22%'
SELECT `Team_Attributes`.`chanceCreationPassingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'PEC Zwolle' AND `Team_Attributes`.`date` = '2013-09-20 00:00:00'
SELECT `Team_Attributes`.`chanceCreationCrossingClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hull City' AND `Team_Attributes`.`date` = '2010-02-22 00:00:00'
SELECT `Team_Attributes`.`defenceAggressionClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'Hannover 96' AND `Team_Attributes`.`date` LIKE '2015-09-10%'
SELECT AVG(`Player_Attributes`.`overall_rating`) AS avg_overall_rating FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Marko Arnautovic' AND SUBSTR(`Player_Attributes`.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'
SELECT (L.`overall_rating` - J.`overall_rating`) * 100.0 / L.`overall_rating` AS percentage FROM (SELECT `overall_rating` FROM `Player_Attributes` PA INNER JOIN `Player` P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Landon Donovan' AND PA.`date` = '2013-07-12') L, (SELECT `overall_rating` FROM `Player_Attributes` PA INNER JOIN `Player` P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Jordan Bowery' AND PA.`date` = '2013-07-12') J
SELECT `player_name` FROM `Player` WHERE `height` = (SELECT MAX(`height`) FROM `Player`)
SELECT `player_api_id` FROM `Player` ORDER BY `weight` DESC LIMIT 10
SELECT `player_name` FROM `Player` WHERE (strftime('%Y', 'now') - strftime('%Y', `birthday`)) > 34
SELECT COUNT(`Match`.`home_team_goal`) FROM `Match` INNER JOIN `Player` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` WHERE `Player`.`player_name` = 'Aaron Lennon'
SELECT SUM(`Match`.`away_team_goal`) FROM `Match` INNER JOIN `Player` AS P1 ON `Match`.`away_player_1` = P1.`player_api_id` OR `Match`.`away_player_2` = P1.`player_api_id` OR `Match`.`away_player_3` = P1.`player_api_id` OR `Match`.`away_player_4` = P1.`player_api_id` OR `Match`.`away_player_5` = P1.`player_api_id` OR `Match`.`away_player_6` = P1.`player_api_id` OR `Match`.`away_player_7` = P1.`player_api_id` OR `Match`.`away_player_8` = P1.`player_api_id` OR `Match`.`away_player_9` = P1.`player_api_id` OR `Match`.`away_player_10` = P1.`player_api_id` OR `Match`.`away_player_11` = P1.`player_api_id` INNER JOIN `Player` AS P2 ON `Match`.`away_player_1` = P2.`player_api_id` OR `Match`.`away_player_2` = P2.`player_api_id` OR `Match`.`away_player_3` = P2.`player_api_id` OR `Match`.`away_player_4` = P2.`player_api_id` OR `Match`.`away_player_5` = P2.`player_api_id` OR `Match`.`away_player_6` = P2.`player_api_id` OR `Match`.`away_player_7` = P2.`player_api_id` OR `Match`.`away_player_8` = P2.`player_api_id` OR `Match`.`away_player_9` = P2.`player_api_id` OR `Match`.`away_player_10` = P2.`player_api_id` OR `Match`.`away_player_11` = P2.`player_api_id` WHERE P1.`player_name` = 'Daan Smith' AND P2.`player_name` = 'Filipe Ferreira`
SELECT SUM(`Match`.`home_team_goal`) FROM `Match` INNER JOIN `Player` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` WHERE (julianday('now') - julianday(`Player`.`birthday`)) / 365.25 < 31
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`potential` = (SELECT MAX(`potential`) FROM `Player_Attributes`)
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`attacking_work_rate` = 'high'
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player_Attributes`.`finishing` = 1 ORDER BY `Player`.`birthday` LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Match` ON `Player`.`player_api_id` = `Match`.`home_player_1` OR `Player`.`player_api_id` = `Match`.`home_player_2` OR `Player`.`player_api_id` = `Match`.`home_player_3` OR `Player`.`player_api_id` = `Match`.`home_player_4` OR `Player`.`player_api_id` = `Match`.`home_player_5` OR `Player`.`player_api_id` = `Match`.`home_player_6` OR `Player`.`player_api_id` = `Match`.`home_player_7` OR `Player`.`player_api_id` = `Match`.`home_player_8` OR `Player`.`player_api_id` = `Match`.`home_player_9` OR `Player`.`player_api_id` = `Match`.`home_player_10` OR `Player`.`player_api_id` = `Match`.`home_player_11` OR `Player`.`player_api_id` = `Match`.`away_player_1` OR `Player`.`player_api_id` = `Match`.`away_player_2` OR `Player`.`player_api_id` = `Match`.`away_player_3` OR `Player`.`player_api_id` = `Match`.`away_player_4` OR `Player`.`player_api_id` = `Match`.`away_player_5` OR `Player`.`player_api_id` = `Match`.`away_player_6` OR `Player`.`player_api_id` = `Match`.`away_player_7` OR `Player`.`player_api_id` = `Match`.`away_player_8` OR `Player`.`player_api_id` = `Match`.`away_player_9` OR `Player`.`player_api_id` = `Match`.`away_player_10` OR `Player`.`player_api_id` = `Match`.`away_player_11` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Belgium'
SELECT `Player`.`player_name`, `Country`.`name` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` INNER JOIN `Match` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` OR `Match`.`away_player_1` = `Player`.`player_api_id` OR `Match`.`away_player_2` = `Player`.`player_api_id` OR `Match`.`away_player_3` = `Player`.`player_api_id` OR `Match`.`away_player_4` = `Player`.`player_api_id` OR `Match`.`away_player_5` = `Player`.`player_api_id` OR `Match`.`away_player_6` = `Player`.`player_api_id` OR `Match`.`away_player_7` = `Player`.`player_api_id` OR `Match`.`away_player_8` = `Player`.`player_api_id` OR `Match`.`away_player_9` = `Player`.`player_api_id` OR `Match`.`away_player_10` = `Player`.`player_api_id` OR `Match`.`away_player_11` = `Player`.`player_api_id` INNER JOIN `Country` ON `Match`.`country_id` = `Country`.`id` WHERE `Player_Attributes`.`vision` > 89
SELECT `Country`.`name` FROM `Country` INNER JOIN `Match` ON `Country`.`id` = `Match`.`country_id` INNER JOIN `Player` ON `Match`.`home_player_1` = `Player`.`player_api_id` OR `Match`.`home_player_2` = `Player`.`player_api_id` OR `Match`.`home_player_3` = `Player`.`player_api_id` OR `Match`.`home_player_4` = `Player`.`player_api_id` OR `Match`.`home_player_5` = `Player`.`player_api_id` OR `Match`.`home_player_6` = `Player`.`player_api_id` OR `Match`.`home_player_7` = `Player`.`player_api_id` OR `Match`.`home_player_8` = `Player`.`player_api_id` OR `Match`.`home_player_9` = `Player`.`player_api_id` OR `Match`.`home_player_10` = `Player`.`player_api_id` OR `Match`.`home_player_11` = `Player`.`player_api_id` OR `Match`.`away_player_1` = `Player`.`player_api_id` OR `Match`.`away_player_2` = `Player`.`player_api_id` OR `Match`.`away_player_3` = `Player`.`player_api_id` OR `Match`.`away_player_4` = `Player`.`player_api_id` OR `Match`.`away_player_5` = `Player`.`player_api_id` OR `Match`.`away_player_6` = `Player`.`player_api_id` OR `Match`.`away_player_7` = `Player`.`player_api_id` OR `Match`.`away_player_8` = `Player`.`player_api_id` OR `Match`.`away_player_9` = `Player`.`player_api_id` OR `Match`.`away_player_10` = `Player`.`player_api_id` OR `Match`.`away_player_11` = `Player`.`player_api_id` GROUP BY `Country`.`name` ORDER BY AVG(`Player`.`weight`) DESC LIMIT 1
SELECT `Team`.`team_long_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`buildUpPlaySpeedClass` = 'Slow'
SELECT `Team`.`team_short_name` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team_Attributes`.`chanceCreationPassingClass` = 'Safe'
SELECT AVG(`Player`.`height`) FROM `Player` INNER JOIN `Country` ON `Player`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Italy'
SELECT `player_name` FROM `Player` WHERE `height` > 180 ORDER BY `player_name` ASC LIMIT 3
SELECT COUNT(`player_name`) FROM `Player` WHERE `player_name` LIKE 'Aaron%' AND `birthday` > '1990-01-01'
SELECT (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 6) - (SELECT `jumping` FROM `Player_Attributes` WHERE `id` = 23) AS `jumping_difference`
SELECT `Player_Attributes`.`player_api_id` FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`preferred_foot` = 'right' ORDER BY `Player_Attributes`.`potential` ASC LIMIT 5
SELECT COUNT(DISTINCT `Player`.`player_api_id`) FROM `Player_Attributes` INNER JOIN `Player` ON `Player_Attributes`.`player_api_id` = `Player`.`player_api_id` WHERE `Player_Attributes`.`crossing` = (SELECT MAX(`crossing`) FROM `Player_Attributes`) AND `Player_Attributes`.`preferred_foot` = 'left'
SELECT CAST(SUM(CASE WHEN `stamina` > 80 AND `strength` > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`player_api_id`) FROM `Player_Attributes`
SELECT `Country`.`name` FROM `League` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `League`.`name` = 'Poland Ekstraklasa'
SELECT `home_team_goal`, `away_team_goal` FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`date` LIKE '2008-09-24%' AND `League`.`name` = 'Belgium Jupiler League'
SELECT `Player_Attributes`.`sprint_speed`, `Player_Attributes`.`agility`, `Player_Attributes`.`acceleration` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` WHERE `Player`.`player_name` = 'Alexis Blin'
SELECT `Team_Attributes`.`buildUpPlaySpeedClass` FROM `Team` INNER JOIN `Team_Attributes` ON `Team`.`team_api_id` = `Team_Attributes`.`team_api_id` WHERE `Team`.`team_long_name` = 'KSV Cercle Brugge'
SELECT COUNT(`Match`.`id`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' AND `League`.`name` = 'Italian Serie A'
SELECT MAX(`home_team_goal`) FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` INNER JOIN `Country` ON `League`.`country_id` = `Country`.`id` WHERE `Country`.`name` = 'Netherlands' AND `League`.`name` = 'Eredivisie'
SELECT `Player_Attributes`.`finishing`, `Player_Attributes`.`curve` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player`.`weight` DESC LIMIT 1
SELECT `League`.`name`, COUNT(`Match`.`id`) AS game_count FROM `Match` INNER JOIN `League` ON `Match`.`league_id` = `League`.`id` WHERE `Match`.`season` = '2015/2016' GROUP BY `League`.`name` ORDER BY game_count DESC LIMIT 4
SELECT `Team`.`team_long_name` FROM `Match` INNER JOIN `Team` ON `Match`.`away_team_api_id` = `Team`.`team_api_id` ORDER BY `Match`.`away_team_goal` DESC LIMIT 1
SELECT `Player`.`player_name` FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id` ORDER BY `Player_Attributes`.`overall_rating` DESC LIMIT 1
SELECT CAST(COUNT(CASE WHEN `Player`.`height` < 180 AND `Player_Attributes`.`overall_rating` > 70 THEN `Player`.`id` ELSE NULL END) AS REAL) * 100 / COUNT(`Player`.`id`) FROM `Player` INNER JOIN `Player_Attributes` ON `Player`.`player_api_id` = `Player_Attributes`.`player_api_id`
SELECT (CAST(SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`)) - (CAST(SUM(CASE WHEN `Admission` = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`)) AS deviation FROM `Patient` WHERE `SEX` = 'M'
SELECT CAST(SUM(CASE WHEN strftime('%Y', `Birthday`) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) AS percentage FROM `Patient` WHERE `SEX` = 'F'
SELECT CAST(SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) FROM `Patient` WHERE `Birthday` BETWEEN '1930-01-01' AND '1940-12-31';
SELECT CAST(COUNT(CASE WHEN `Admission` = '-' THEN 1 END) AS REAL) / COUNT(CASE WHEN `Admission` = '+' THEN 1 END) FROM `Patient` WHERE `Diagnosis` = 'SLE'
SELECT `Patient`.`Diagnosis`, `Laboratory`.`Date` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = '30609'
SELECT `Patient`.`SEX`, `Patient`.`Birthday`, `Examination`.`Examination Date`, `Examination`.`Symptoms` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`ID` = '163109'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` > 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`RVVT` = '+'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = 2
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1937' AND `Laboratory`.`T-CHO` >= 250
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` < 3.5
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'F' AND (`Laboratory`.`TP` < 6.0 OR `Laboratory`.`TP` > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID`
SELECT AVG(`Examination`.`aCL IgG`) AS `average_aCL_IgG` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Admission` = '+' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50
SELECT COUNT(*) FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Description`) = '1997' AND `Admission` = '-'
SELECT MIN(strftime('%Y', `First Date`) - strftime('%Y', `Birthday`)) AS age FROM `Patient`
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = '1' AND `Examination`.`Examination Date` LIKE '1997%' AND `Patient`.`SEX` = 'F'
SELECT MAX(strftime('%Y', `Patient`.`Birthday`)) - MIN(strftime('%Y', `Patient`.`Birthday`)) AS age_gap FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200
SELECT `Examination`.`Symptoms`, `Examination`.`Diagnosis` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Symptoms` IS NOT NULL ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT COUNT(DISTINCT `Laboratory`.`ID`) / 12 FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`Date` BETWEEN '1998-01-01' AND '1998-12-31'
SELECT `Laboratory`.`Date`, strftime('%Y', `Patient`.`First Date`) - strftime('%Y', `Patient`.`Birthday`) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' ORDER BY `Patient`.`Birthday` ASC LIMIT 1
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'M' AND `Laboratory`.`UA` <= 8.0 THEN 1 ELSE 0 END) AS REAL) / CAST(SUM(CASE WHEN `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` <= 6.5 THEN 1 ELSE 0 END) AS REAL) AS ratio FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID`
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE strftime('%Y', `Examination`.`Examination Date`) - strftime('%Y', `Patient`.`First Date`) >= 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) > strftime('%Y', `Examination`.`Examination Date`) - 18 AND strftime('%Y', `Examination`.`Examination Date`) BETWEEN '1990' AND '1993'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-BIL` >= 2.0
SELECT `Diagnosis` FROM `Examination` WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY `Diagnosis` ORDER BY COUNT(`Diagnosis`) DESC LIMIT 1
SELECT AVG(1999 - strftime('%Y', `Patient`.`Birthday`)) AS average_age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1991-10-01' AND '1991-10-30'
SELECT strftime('%Y', `Examination`.`Examination Date`) - strftime('%Y', `Patient`.`Birthday`) AS age, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`HGB` = (SELECT MAX(`HGB`) FROM `Laboratory`) LIMIT 1
SELECT `Examination`.`ANA` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 3605340 AND `Examination`.`Examination Date` = '1996-12-02'
SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'High' END AS `Total Cholesterol Status` FROM `Laboratory` WHERE `ID` = 2927464 AND `Date` = '1995-09-04'
SELECT `SEX` FROM `Patient` WHERE `Diagnosis` = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1
SELECT DISTINCT T2.`aCL IgM` FROM `Patient` AS T1 INNER JOIN `Examination` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'SLE' AND T1.`Description` = '1994-02-19' AND T2.`Examination Date` = '1993-11-12'
SELECT `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` = 9 AND `Laboratory`.`Date` = '1992-06-12'
SELECT strftime('%Y', `Laboratory`.`Date`) - strftime('%Y', `Patient`.`Birthday`) AS age FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`UA` = '8.4' AND `Laboratory`.`Date` = '1991-10-21'
SELECT COUNT(`Laboratory`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` = '1991-06-13' AND `Patient`.`Diagnosis` = 'SJS' AND strftime('%Y', `Laboratory`.`Date`) = '1995'
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Examination`.`Diagnosis` = 'SLE' AND `Examination`.`Examination Date` = '1997-01-27'
SELECT T2.`Symptoms` FROM `Patient` AS T1 INNER JOIN `Examination` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = '1959-03-01' AND T2.`Examination Date` = '1993-09-27'
SELECT (SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-11-%' THEN `Laboratory`.`T-CHO` ELSE 0 END) - SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-12-%' THEN `Laboratory`.`T-CHO` ELSE 0 END)) / SUM(CASE WHEN `Laboratory`.`Date` LIKE '1981-11-%' THEN `Laboratory`.`T-CHO` ELSE 0 END) * 100 AS decrease_rate FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1959-02-18'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`Diagnosis` = 'Behcet' AND `Examination`.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `Laboratory`.`GPT` > 30 AND `Laboratory`.`ALB` < 4
SELECT `ID` FROM `Patient` WHERE `SEX` = 'F' AND strftime('%Y', `Birthday`) = '1964' AND `Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`Thrombosis` = 2 AND `Examination`.`ANA` = 'S' AND `Examination`.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM `Examination`)
SELECT CAST(SUM(CASE WHEN `Laboratory`.`UA` <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Laboratory`.`ID`) AS percentage FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30
SELECT (SUM(CASE WHEN `Diagnosis` = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM `Patient` WHERE `SEX` = 'M' AND strftime('%Y', `First Date`) = '1981'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`Date` LIKE '1991-10%' AND `Laboratory`.`T-BIL` < 2.0
SELECT COUNT(*) FROM `Examination` AS E INNER JOIN `Patient` AS P ON E.`ID` = P.`ID` WHERE E.`ANA Pattern` != 'P' AND P.`SEX` = 'F' AND P.`Birthday` BETWEEN '1980-01-01' AND '1989-12-31'
SELECT `Patient`.`SEX` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Diagnosis` = 'PSS' AND `Laboratory`.`CRP` > 2 AND `Laboratory`.`CRE` = 1 AND `Laboratory`.`LDH` = 123
SELECT AVG(`Laboratory`.`ALB`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`PLT` > 400 AND `Patient`.`Diagnosis` = 'SLE'
SELECT `Examination`.`Symptoms` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' GROUP BY `Examination`.`Symptoms` ORDER BY COUNT(`Examination`.`Symptoms`) DESC LIMIT 1
SELECT `Patient`.`Description`, `Examination`.`Diagnosis` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`ID` = 48473
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` WHERE `Patient`.`SEX` = 'F' AND `Patient`.`Diagnosis` = 'APS'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1997' AND (`Laboratory`.`TP` <= 6 OR `Laboratory`.`TP` >= 8.5)
SELECT (SUM(CASE WHEN `Patient`.`Diagnosis` LIKE '%SLE%' THEN 1 ELSE 0 END) * 100.0 / SUM(CASE WHEN `Examination`.`Symptoms` LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END)) AS proportion FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID`
SELECT CAST(SUM(CASE WHEN `SEX` = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`ID`) AS percentage FROM `Patient` WHERE strftime('%Y', `Birthday`) = '1980' AND `Diagnosis` = 'RA'
SELECT COUNT(DISTINCT `Patient`.`ID`) AS Male_Patients FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Examination`.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND `Examination`.`Diagnosis` = 'Behcet' AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`WBC` < 3.5
SELECT DATEDIFF(`Examination`.`Examination Date`, `Patient`.`First Date`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 821298
SELECT CASE WHEN `Patient`.`SEX` = 'M' AND `Laboratory`.`UA` > 8.0 THEN 'Yes' WHEN `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` > 6.5 THEN 'Yes' ELSE 'No' END AS `Uric Acid Normal Range` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`ID` = 57266
SELECT `Laboratory`.`Date` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Patient`.`ID` = 48473 AND `Laboratory`.`GOT` >= 60
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND strftime('%Y', `Laboratory`.`Date`) = '1994'
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GPT` >= 60
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` > 60 ORDER BY `Patient`.`Birthday` ASC
SELECT AVG(`LDH`) FROM `Laboratory` WHERE `LDH` < 500
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`LDH` BETWEEN 600 AND 800
SELECT DISTINCT `Patient`.`ID`, `Patient`.`Admission` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALP` < 300
SELECT `Patient`.`ID`, CASE WHEN `Laboratory`.`ALP` < 300 THEN 'Yes' ELSE 'No' END AS `ALP_within_normal_range` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = '1982-04-01'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Laboratory`.`ID`, (`Laboratory`.`TP` - 8.5) AS `Deviation` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`TP` > 8.5
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND (`Laboratory`.`ALB` <= 3.5 OR `Laboratory`.`ALB` >= 5.5) ORDER BY `Patient`.`Birthday` DESC
SELECT `Patient`.`ID`, `Patient`.`Birthday`, CASE WHEN `Laboratory`.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Abnormal' END AS `Albumin_Status` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`Birthday`) = '1982'
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F'
SELECT AVG(`Laboratory`.`UA`) AS `average_UA_index` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE (`Patient`.`SEX` = 'M' AND `Laboratory`.`UA` < 8.0) OR (`Patient`.`SEX` = 'F' AND `Laboratory`.`UA` < 6.5) AND `Laboratory`.`Date` = (SELECT MAX(`Date`) FROM `Laboratory` WHERE `Laboratory`.`ID` = `Patient`.`ID`)
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`UN` = 29
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'RA' AND `Laboratory`.`UN` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CRE` >= 1.5
SELECT CASE WHEN SUM(CASE WHEN `Patient`.`SEX` = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN `Patient`.`SEX` = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END AS result FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` >= 1.5
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`T-BIL` = (SELECT MAX(`T-BIL`) FROM `Laboratory`)
SELECT `Patient`.`SEX`, GROUP_CONCAT(DISTINCT `Patient`.`ID`) AS `Patient_Ids` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 GROUP BY `Patient`.`SEX`
SELECT `Patient`.`ID`, `Laboratory`.`T-CHO` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` = (SELECT MIN(`Birthday`) FROM `Patient`) ORDER BY `Laboratory`.`T-CHO` DESC LIMIT 1
SELECT SUM(strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) / COUNT(`Patient`.`ID`) AS average_age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`T-CHO` >= 250
SELECT `Patient`.`ID`, `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` > 300
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` >= 200 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 50
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Patient`.`ID`) AS Male_Patients FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND strftime('%Y', `Patient`.`Birthday`) BETWEEN '1936' AND '1956' AND `Laboratory`.`CPK` >= 250
SELECT `Patient`.`ID`, `Patient`.`SEX`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` >= 180 AND `Laboratory`.`T-CHO` < 250
SELECT `Patient`.`ID`, `Laboratory`.`GLU` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` < 180 AND strftime('%Y', `Patient`.`Description`) = '1991'
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`WBC` <= 3.5 OR `Laboratory`.`WBC` >= 9.0 GROUP BY `Patient`.`SEX` ORDER BY `Patient`.`Birthday` ASC
SELECT `Patient`.`ID`, `Patient`.`Diagnosis`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RBC` < 3.5
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Admission`, `Laboratory`.`RBC` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) >= 50 AND (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0)
SELECT DISTINCT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`HGB` < 10
SELECT `Patient`.`ID`, `Patient`.`SEX` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`HGB` > 10 AND `Laboratory`.`HGB` < 17 ORDER BY `Patient`.`Birthday` LIMIT 1
SELECT `Patient`.`ID`, (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) AS age FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` >= 52 GROUP BY `Patient`.`ID` HAVING COUNT(`Laboratory`.`ID`) > 2
SELECT AVG(`HCT`) FROM `Laboratory` WHERE `Date` LIKE '1991%' AND `HCT` < 29
SELECT (SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` < 100) AS lower_than_normal, (SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`PLT` > 400) AS higher_than_normal
SELECT `Patient`.`ID`, `Patient`.`SEX`, `Patient`.`Birthday`, `Patient`.`Description`, `Patient`.`First Date`, `Patient`.`Admission`, `Patient`.`Diagnosis` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE strftime('%Y', `Laboratory`.`Date`) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) < 50 AND `Laboratory`.`PLT` BETWEEN 100 AND 400
SELECT CAST(SUM(CASE WHEN `Patient`.`SEX` = 'F' AND `Laboratory`.`PT` >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`Laboratory`.`ID`) AS percentage FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 55 AND `Laboratory`.`PT` >= 14
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE strftime('%Y', `Patient`.`First Date`) > '1992' AND `Laboratory`.`PT` < 14
SELECT COUNT(T1.`ID`) FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` > '1997-01-01' AND T2.`APTT` < 45
SELECT COUNT(DISTINCT T1.`ID`) FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`APTT` > 45 AND T1.`Thrombosis` = 0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`WBC` > 3.5 AND `Laboratory`.`WBC` < 9.0 AND (`Laboratory`.`FG` <= 150 OR `Laboratory`.`FG` >= 450)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` > '1980-01-01' AND (`Laboratory`.`FG` < 150 OR `Laboratory`.`FG` > 450)
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`U-PRO` >= 30
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`U-PRO` > 0 AND `Laboratory`.`U-PRO` < 30
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` >= 2000
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Examination`.`Symptoms` IS NOT NULL
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` BETWEEN 80 AND 500 ORDER BY `Laboratory`.`IGA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGA` > 80 AND `Laboratory`.`IGA` < 500 AND strftime('%Y', `Patient`.`First Date`) >= '1990'
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGM` <= 40 OR `Laboratory`.`IGM` >= 400 GROUP BY `Patient`.`Diagnosis` ORDER BY COUNT(`Patient`.`Diagnosis`) DESC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRP` = '+' AND `Patient`.`Description` IS NULL
SELECT COUNT(*) FROM `Patient` AS P INNER JOIN `Laboratory` AS L ON P.`ID` = L.`ID` WHERE L.`CRE` >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', P.`Birthday`)) < 70
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` WHERE `Examination`.`KCT` = '+' AND `Patient`.`Diagnosis` = 'RA' AND `Examination`.`Diagnosis` IN ('-', '+-')
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Birthday` >= '1985-01-01' AND `Laboratory`.`RA` IN ('-', '+-')
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', `Patient`.`Birthday`)) > 60
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`RF` < 20 AND `Examination`.`Thrombosis` = '0'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`C3` > 35 AND `Examination`.`ANA Pattern` = 'P'
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`HCT` <= 29 OR `Laboratory`.`HCT` >= 52 ORDER BY `Examination`.`aCL IgA` DESC LIMIT 1
SELECT COUNT(DISTINCT T1.`ID`) FROM `Examination` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` = 1 AND T2.`C4` > 10
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND (`Laboratory`.`RNP` = '-' OR `Laboratory`.`RNP` = '+-')
SELECT `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`RNP` NOT IN ('-', '+-') ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` WHERE `Examination`.`SM` IN ('-', '0') AND `Examination`.`Thrombosis` = 0
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SM` NOT IN ('negative', '0') ORDER BY `Patient`.`Birthday` DESC LIMIT 3
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Examination Date` > '1997-01-01' AND `Laboratory`.`SC170` IN ('negative', '0')
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` LEFT JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Patient`.`SEX` = 'F' AND (`Laboratory`.`SC170` IN ('negative', '0')) AND `Examination`.`Symptoms` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSA` IN ('-', '+-') AND strftime('%Y', `Patient`.`First Date`) < '2000'
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSA` NOT IN ('negative', '0') ORDER BY `Patient`.`First Date` ASC LIMIT 1
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('-', '0') AND `Examination`.`Diagnosis` = 'SLE'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`SSB` IN ('negative', '0') AND `Examination`.`Symptoms` IS NOT NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) AS Male_Count FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`CENTROMEA` IN ('-', '+-') AND `Laboratory`.`SSB` IN ('-', '+-')
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` >= 8
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`DNA` < 8 AND `Patient`.`Description` IS NULL
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`IGG` > 900 AND `Laboratory`.`IGG` < 2000 AND `Patient`.`Admission` = '+'
SELECT CAST(COUNT(CASE WHEN `Patient`.`Diagnosis` = 'SLE' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`GOT` >= 60
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`GOT` < 60
SELECT `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` >= 60 ORDER BY `Patient`.`Birthday` DESC LIMIT 1
SELECT `Patient`.`Birthday` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GPT` < 60 ORDER BY `Laboratory`.`GPT` DESC LIMIT 3
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GOT` < 60 AND `Patient`.`SEX` = 'M'
SELECT T2.`First Date` FROM `Laboratory` AS T1 INNER JOIN `Patient` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`LDH` < 500 ORDER BY T1.`LDH` DESC LIMIT 1
SELECT MAX(`Laboratory`.`Date`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`First Date` = (SELECT MAX(`First Date`) FROM `Patient`) AND `Laboratory`.`LDH` >= 500
SELECT COUNT(DISTINCT `Laboratory`.`ID`) FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`ALP` >= 300 AND `Patient`.`Admission` = '+'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '-' AND `Laboratory`.`ALP` < 300
SELECT DISTINCT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TP` < 6.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SJS' AND `Laboratory`.`TP` > 6.0 AND `Laboratory`.`TP` < 8.5
SELECT `Examination`.`Examination Date` FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`ALB` = (SELECT MAX(`ALB`) FROM `Laboratory` WHERE `ALB` > 3.5 AND `ALB` < 5.5)
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'M' AND `Laboratory`.`ALB` > 3.5 AND `Laboratory`.`ALB` < 5.5 AND `Laboratory`.`TP` BETWEEN 6.0 AND 8.5
SELECT `Examination`.`aCL IgG`, `Examination`.`aCL IgM`, `Examination`.`aCL IgA` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`UA` <= 6.50 ORDER BY `Laboratory`.`UA` DESC LIMIT 1
SELECT MAX(`Examination`.`ANA`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CRE` < 1.5
SELECT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`CRE` < 1.5 ORDER BY `Examination`.`aCL IgA` DESC LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-BIL` >= 2.0 AND `Examination`.`ANA Pattern` LIKE '%P%'
SELECT DISTINCT `Examination`.`ANA` FROM `Examination` INNER JOIN `Patient` ON `Examination`.`ID` = `Patient`.`ID` INNER JOIN `Laboratory` ON `Laboratory`.`ID` = `Patient`.`ID` WHERE `Laboratory`.`T-BIL` < 2.0 ORDER BY `Laboratory`.`T-BIL` DESC LIMIT 1
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` >= 250 AND `Examination`.`KCT` = '-'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`T-CHO` < 250 AND `Examination`.`ANA Pattern` = 'P'
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 AND `Examination`.`Symptoms` IS NOT NULL
SELECT `Patient`.`Diagnosis` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`TG` < 200 ORDER BY `Laboratory`.`TG` DESC LIMIT 1
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` = 0 AND `Laboratory`.`CPK` < 250
SELECT COUNT(DISTINCT `Examination`.`ID`) FROM `Examination` INNER JOIN `Laboratory` ON `Examination`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`CPK` < 250 AND (`Examination`.`KCT` = '+' OR `Examination`.`RVVT` = '+' OR `Examination`.`LAC` = '+')
SELECT MIN(`Patient`.`Birthday`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Laboratory`.`GLU` > 180
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`GLU` < 180 AND `Examination`.`Thrombosis` = 0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Admission` = '+' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`Diagnosis` = 'SLE' AND `Laboratory`.`WBC` BETWEEN 3.5 AND 9.0
SELECT DISTINCT `Patient`.`ID` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE (`Laboratory`.`RBC` <= 3.5 OR `Laboratory`.`RBC` >= 6.0) AND `Patient`.`Admission` = '-'
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Examination`.`Diagnosis` IS NOT NULL
SELECT `Laboratory`.`PLT` FROM `Laboratory` INNER JOIN `Patient` ON `Laboratory`.`ID` = `Patient`.`ID` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` WHERE `Laboratory`.`PLT` > 100 AND `Laboratory`.`PLT` < 400 AND `Examination`.`Diagnosis` = 'MCTD'
SELECT AVG(T2.`PT`) FROM `Patient` AS T1 INNER JOIN `Laboratory` AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`PT` < 14
SELECT COUNT(DISTINCT `Patient`.`ID`) FROM `Patient` INNER JOIN `Examination` ON `Patient`.`ID` = `Examination`.`ID` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Examination`.`Thrombosis` IN (1, 2) AND `Laboratory`.`PT` < 14
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Angela' AND `member`.`last_name` = 'Sanders'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`college` = 'College of Engineering'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'Art and Design Department'
SELECT COUNT(*) FROM `attendance` AS A INNER JOIN `event` AS E ON A.`link_to_event` = E.`event_id` INNER JOIN `member` AS M ON A.`link_to_member` = M.`member_id` WHERE E.`event_name` = 'Women's Soccer'
SELECT `member`.`phone` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Women's Soccer'
SELECT COUNT(`member`.`member_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `event`.`event_name` = 'Women's Soccer' AND `member`.`t_shirt_size` = 'Medium'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` GROUP BY `event`.`event_id` ORDER BY COUNT(`attendance`.`link_to_event`) DESC LIMIT 1
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Maya' AND `member`.`last_name` = 'Mclean'
SELECT COUNT(`event`.`event_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison' AND strftime('%Y', `event`.`event_date`) = '2019'
SELECT COUNT(DISTINCT `event`.`event_id`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` = 'Meeting' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 10
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`type` <> 'Fundraiser' GROUP BY `event`.`event_id` HAVING COUNT(`attendance`.`link_to_event`) > 20
SELECT CAST(COUNT(`attendance`.`link_to_member`) AS REAL) / COUNT(DISTINCT `event`.`event_name`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`type` = 'Meeting' AND strftime('%Y', `event`.`event_date`) = '2020'
SELECT `expense_description` FROM `expense` WHERE `cost` = (SELECT MAX(`cost`) FROM `expense`)
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Laugh Out Loud'
SELECT `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Law and Constitutional Studies'
SELECT `zip_code`.`county` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Sherri' AND `member`.`last_name` = 'Ramsey'
SELECT `major`.`college` FROM `major` INNER JOIN `member` ON `major`.`major_id` = `member`.`link_to_major` WHERE `member`.`first_name` = 'Tyler' AND `member`.`last_name` = 'Hewitt'
SELECT SUM(`income`.`amount`) AS `total_funds_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT SUM(`budget`.`spent`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Food'
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`position` = 'President'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Illinois'
SELECT SUM(`budget`.`spent`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'September Meeting' AND `budget`.`category` = 'Advertisement'
SELECT DISTINCT `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`last_name` IN ('Pierce', 'Guidi')
SELECT SUM(`budget`.`amount`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'October Speaker'
SELECT expense.`expense_description`, expense.`approved` FROM expense INNER JOIN budget ON expense.`link_to_budget` = budget.`budget_id` INNER JOIN event ON budget.`link_to_event` = event.`event_id` WHERE event.`event_name` = 'October Meeting' AND event.`event_date` = '2019-10-08'
SELECT AVG(`expense`.`cost`) FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Elijah' AND `member`.`last_name` = 'Allen' AND (SUBSTR(`expense`.`expense_date`, 6, 2) = '09' OR SUBSTR(`expense`.`expense_date`, 6, 2) = '10')
SELECT (SELECT SUM(`spent`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_date` LIKE '2019%') - (SELECT SUM(`spent`) FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_date` LIKE '2020%')
SELECT `location` FROM `event` WHERE `event_name` = 'Spring Budget Review'
SELECT `expense`.`cost` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `expense`.`expense_description` = 'Posters' AND `event`.`event_date` = '2019-09-04'
SELECT `remaining` FROM `budget` WHERE `category` = 'Food' ORDER BY `amount` DESC LIMIT 1
SELECT `notes` FROM `income` WHERE `source` = 'Fundraising' AND `date_received` = '2019-09-14'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `phone` FROM `member` WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'
SELECT `zip_code`.`county` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Adela' AND `member`.`last_name` = 'O''Gallagher'
SELECT COUNT(`budget`.`budget_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'November Meeting' AND `budget`.`remaining` < 0
SELECT SUM(`budget`.`amount`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'September Speaker'
SELECT `budget`.`event_status` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `expense`.`expense_description` = 'Post Cards, Posters' AND `expense`.`expense_date` = '2019-08-20'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Brent' AND `member`.`last_name` = 'Thomason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `zip_code`.`type` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Christof' AND `member`.`last_name` = 'Nielson'
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'President'
SELECT `income`.`date_received` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `member`.`first_name` = 'Connor' AND `member`.`last_name` = 'Hilton' AND `income`.`source` = 'Dues'
SELECT `member`.`first_name`, `member`.`last_name` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`source` = 'Dues' ORDER BY `income`.`date_received` ASC LIMIT 1
SELECT (SUM(CASE WHEN `event`.`event_name` = 'Yearly Kickoff' THEN `budget`.`amount` ELSE 0 END) / SUM(CASE WHEN `event`.`event_name` = 'October Meeting' THEN `budget`.`amount` ELSE 0 END)) AS `ratio` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Advertisement'
SELECT (SUM(`budget`.`amount`) / (SELECT COUNT(*) FROM `event` WHERE `event`.`event_name` = 'November Speaker')) * 100 AS percentage FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Parking' AND `event`.`event_name` = 'November Speaker'
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Pizza'
SELECT COUNT(DISTINCT `city`) FROM `zip_code` WHERE `county` = 'Orange County' AND `state` = 'Virginia'
SELECT DISTINCT `department` FROM `major` WHERE `college` = 'College of Humanities and Social Sciences'
SELECT `zip_code`.`city`, `zip_code`.`county`, `zip_code`.`state` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Amy' AND `member`.`last_name` = 'Firth'
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `budget`.`remaining` = (SELECT MIN(`remaining`) FROM `budget`)
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` GROUP BY `major`.`college` ORDER BY COUNT(`member`.`member_id`) DESC LIMIT 1
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`phone` = '809-555-3360'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` ORDER BY `budget`.`amount` DESC LIMIT 1
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` = 'Vice President'
SELECT COUNT(`attendance`.`link_to_member`) FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` WHERE `event`.`event_name` = 'Women''s Soccer'
SELECT `income`.`date_received` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Casey' AND `member`.`last_name` = 'Mason'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`state` = 'Maryland'
SELECT COUNT(`attendance`.`link_to_event`) FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` WHERE `member`.`phone` = '954-555-6240'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`department` = 'School of Applied Sciences, Technology and Education'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' ORDER BY (`budget`.`spent` / `budget`.`amount`) DESC LIMIT 1
SELECT COUNT(`member_id`) FROM `member` WHERE `position` = 'President'
SELECT MAX(`spent`) FROM `budget`
SELECT COUNT(`event_id`) FROM `event` WHERE `type` = 'Meeting' AND SUBSTR(`event_date`, 1, 4) = '2020'
SELECT SUM(`spent`) FROM `budget` WHERE `category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` GROUP BY `member`.`member_id` HAVING COUNT(`attendance`.`link_to_event`) > 7
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `major`.`major_name` = 'Interior Design' AND `event`.`event_name` = 'Community Theater'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Georgetown' AND `zip_code`.`state` = 'South Carolina'
SELECT COUNT(`income`.`amount`) FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Grant' AND `member`.`last_name` = 'Gilmour'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`amount` > 40
SELECT SUM(`expense`.`cost`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `member`.`first_name`, `member`.`last_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Yearly Kickoff'
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`source` FROM `income` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` WHERE `income`.`amount` = (SELECT MAX(`amount`) FROM `income`)
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` ORDER BY `expense`.`cost` ASC LIMIT 1
SELECT (SUM(`expense`.`cost`) FILTER (WHERE `event`.`event_name` = 'Yearly Kickoff') * 100.0 / SUM(`expense`.`cost`)) AS percentage FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id`
SELECT CAST(SUM(CASE WHEN `major`.`major_name` = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN `major`.`major_name` = 'Physics' THEN 1 ELSE 0 END) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT `source` FROM `income` WHERE `date_received` BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY `source` ORDER BY SUM(`amount`) DESC LIMIT 1
SELECT `first_name`, `last_name`, `email` FROM `member` WHERE `position` = 'Secretary'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Physics Teaching'
SELECT COUNT(`attendance`.`link_to_member`) FROM `attendance` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'Community Theater' AND strftime('%Y', `event`.`event_date`) = '2019'
SELECT COUNT(`attendance`.`link_to_event`) AS `number_of_events`, `major`.`major_name` AS `major` FROM `attendance` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Luisa' AND `member`.`last_name` = 'Guidi'
SELECT SUM(`spent`) / COUNT(`spent`) FROM `budget` WHERE `category` = 'Food' AND `event_status` = 'Closed'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Advertisement' ORDER BY `budget`.`spent` DESC LIMIT 1
SELECT COUNT(*) > 0 FROM `member` AS M INNER JOIN `attendance` AS A ON M.`member_id` = A.`link_to_member` INNER JOIN `event` AS E ON A.`link_to_event` = E.`event_id` WHERE M.`first_name` = 'Maya' AND M.`last_name` = 'Mclean' AND E.`event_name` = 'Women''s Soccer'
SELECT CAST(SUM(CASE WHEN `type` = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event_id`) FROM `event` WHERE `event_date` BETWEEN '2019-01-01' AND '2019-12-31'
SELECT `expense`.`cost` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `expense`.`expense_description` = 'Posters' AND `event`.`event_name` = 'September Speaker'
SELECT `t_shirt_size` FROM `member` GROUP BY `t_shirt_size` ORDER BY COUNT(`t_shirt_size`) DESC LIMIT 1
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`status` = 'Closed' AND `budget`.`remaining` < 0 ORDER BY `budget`.`remaining` ASC LIMIT 1
SELECT `expense`.`expense_description`, SUM(`expense`.`cost`) AS `total_value` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`event_name` = 'October Meeting' AND `expense`.`approved` = 'true' GROUP BY `expense`.`expense_description`
SELECT `budget`.`category`, SUM(`budget`.`amount`) AS `amount_budgeted` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'April Speaker' GROUP BY `budget`.`category` ORDER BY `amount_budgeted` ASC
SELECT MAX(`amount`) FROM `budget` WHERE `category` = 'Food'
SELECT `budget_id` FROM `budget` WHERE `category` = 'Advertisement' ORDER BY `amount` DESC LIMIT 3
SELECT SUM(`cost`) FROM `expense` WHERE `expense_description` = 'Parking'
SELECT SUM(`cost`) FROM `expense` WHERE date(`expense_date`) = '2019-08-20'
SELECT `member`.`first_name`, `member`.`last_name`, SUM(`expense`.`cost`) AS `total_cost` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `member`.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY `member`.`first_name`, `member`.`last_name`
SELECT DISTINCT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`first_name` = 'Sacha' AND `member`.`last_name` = 'Harrison'
SELECT `expense`.`expense_description` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`t_shirt_size` = 'X-Large'
SELECT DISTINCT `zip_code`.`zip_code` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `expense`.`cost` < 50
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Phillip' AND `member`.`last_name` = 'Cullen'
SELECT `member`.`position` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business'
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `member`.`t_shirt_size` = 'Medium'
SELECT `event`.`type` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 30
SELECT DISTINCT `budget`.`category` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`location` = 'MU 215'
SELECT `category` FROM `budget` WHERE `link_to_event` = (SELECT `event_id` FROM `event` WHERE `event_date` = '2020-03-24T12:00:00')
SELECT `major`.`major_name` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Vice President'
SELECT CAST(SUM(CASE WHEN `member`.`position` = 'Member' AND `major`.`major_name` = 'Business' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id`
SELECT DISTINCT `category` FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `event`.`location` = 'MU 215'
SELECT COUNT(`income_id`) FROM `income` WHERE `amount` = 50
SELECT COUNT(`member`.`member_id`) FROM `member` WHERE `member`.`position` = 'Member' AND `member`.`t_shirt_size` = 'X-Large'
SELECT COUNT(*) FROM `major` WHERE `college` = 'College of Agriculture and Applied Sciences' AND `department` = 'School of Applied Sciences, Technology and Education'
SELECT `member`.`last_name`, `major`.`department`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Environmental Engineering'
SELECT `budget`.`category` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`location` = 'MU 215' AND `event`.`type` = 'Guest Speaker' AND `budget`.`spent` = 0
SELECT `zip_code`.`city`, `zip_code`.`state` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `major`.`department` = 'Electrical and Computer Engineering Department' AND `member`.`position` = 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `attendance` ON `event`.`event_id` = `attendance`.`link_to_event` INNER JOIN `member` ON `attendance`.`link_to_member` = `member`.`member_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `event`.`type` = 'Social' AND `member`.`position` = 'Vice President' AND `zip_code`.`city` = 'Washington' AND `zip_code`.`state` = 'E'
SELECT `member`.`last_name`, `member`.`position` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`expense_date` = '2019-09-10'
SELECT `member`.`last_name` FROM `member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` INNER JOIN `event` ON `attendance`.`link_to_event` = `event`.`event_id` WHERE `member`.`position` = 'Member' AND `event`.`event_name` = 'Women''s Soccer'
SELECT CAST(COUNT(IIF(`income`.`amount` = 50, 1, NULL)) AS REAL) * 100 / COUNT(`member`.`member_id`) AS percentage FROM `member` JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `member`.`t_shirt_size` = 'Medium' AND `member`.`position` = 'Member'
SELECT DISTINCT `county` FROM `zip_code` WHERE `type` = 'PO Box'
SELECT `zip_code` FROM `zip_code` WHERE `type` = 'PO Box' AND `county` = 'San Juan Municipio' AND `state` = 'Puerto Rico'
SELECT `event_name` FROM `event` WHERE `type` = 'Game' AND `status` = 'Closed' AND `event_date` BETWEEN '2019-03-15' AND '2020-03-20'
SELECT DISTINCT `attendance`.`link_to_event` FROM `attendance` INNER JOIN `expense` ON `attendance`.`link_to_member` = `expense`.`link_to_member` WHERE `expense`.`cost` > 50
SELECT DISTINCT `member`.`first_name`, `member`.`last_name`, `attendance`.`link_to_event` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `attendance` ON `member`.`member_id` = `attendance`.`link_to_member` WHERE `expense`.`approved` = 'true' AND `expense`.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19'
SELECT `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Katy' AND `member`.`link_to_major` = 'rec1N0upiVLy5esTO'
SELECT `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Business' AND `major`.`college` = 'College of Agriculture and Applied Sciences'
SELECT `member`.`email` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `expense`.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND `expense`.`cost` > 20
SELECT COUNT(`member`.`member_id`) FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'education' AND `major`.`college` = 'College of Education & Human Services' AND `member`.`position` = 'Member'
SELECT CAST(SUM(CASE WHEN `budget`.`remaining` < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`event`.`event_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event`
SELECT `event_id`, `location`, `status` FROM `event` WHERE `event_date` BETWEEN '2019-11-01' AND '2020-03-31'
SELECT `expense_description` FROM `expense` GROUP BY `expense_description` HAVING AVG(`cost`) > 50
SELECT `first_name`, `last_name` FROM `member` WHERE `t_shirt_size` = 'X-Large'
SELECT CAST(SUM(CASE WHEN `type` = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`zip_code`) FROM `zip_code`
SELECT `event`.`event_name`, `event`.`location` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`remaining` > 0
SELECT `event`.`event_name`, `event`.`event_date` FROM `event` INNER JOIN `expense` ON `event`.`event_id` = `expense`.`link_to_event` WHERE `expense`.`expense_description` = 'Pizza' AND `expense`.`cost` > 50 AND `expense`.`cost` < 100
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`major_name` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `expense`.`cost` > 100
SELECT `zip_code`.`city`, `zip_code`.`county` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `income` ON `budget`.`budget_id` = `income`.`link_to_member` INNER JOIN `member` ON `income`.`link_to_member` = `member`.`member_id` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` GROUP BY `event`.`event_id` HAVING COUNT(`income`.`income_id`) > 40
SELECT `member`.`first_name`, `member`.`last_name` FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` GROUP BY `member`.`member_id` HAVING COUNT(DISTINCT `budget`.`link_to_event`) > 1 ORDER BY SUM(`expense`.`cost`) DESC LIMIT 1
SELECT AVG(`expense`.`cost`) AS avg_amount_paid FROM `expense` INNER JOIN `member` ON `expense`.`link_to_member` = `member`.`member_id` WHERE `member`.`position` != 'Member'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `budget`.`category` = 'Parking' AND `expense`.`cost` < (SELECT AVG(`expense`.`cost`) FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `budget`.`category` = 'Parking')
SELECT CAST(SUM(`expense`.`cost`) AS REAL) * 100 / COUNT(`event`.`event_id`) FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `event`.`type` = 'Meeting'
SELECT `budget`.`budget_id`, `budget`.`category`, `budget`.`spent`, `budget`.`remaining`, `budget`.`amount`, `budget`.`event_status`, `budget`.`link_to_event` FROM `budget` INNER JOIN `expense` ON `budget`.`budget_id` = `expense`.`link_to_budget` WHERE `expense`.`expense_description` = 'Water, chips, cookies' ORDER BY `expense`.`cost` DESC LIMIT 1
SELECT `member`.`first_name`, `member`.`last_name`, SUM(`expense`.`cost`) AS `total_spent` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` GROUP BY `member`.`member_id` ORDER BY `total_spent` DESC LIMIT 5
SELECT `member`.`first_name`, `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`cost` > (SELECT AVG(`cost`) FROM `expense`)
SELECT (CAST(SUM(CASE WHEN `zip_code`.`state` = 'New Jersey' THEN 1 ELSE 0 END) AS REAL) / COUNT(`member`.`position` = 'Member')) - (CAST(SUM(CASE WHEN `zip_code`.`state` = 'Vermont' THEN 1 ELSE 0 END) AS REAL) / COUNT(`member`.`position` = 'Member')) AS difference FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code`
SELECT `major`.`major_name`, `major`.`department` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT `member`.`first_name`, `member`.`last_name`, `expense`.`cost` FROM `member` INNER JOIN `expense` ON `member`.`member_id` = `expense`.`link_to_member` WHERE `expense`.`expense_description` = 'Water, Veggie tray, supplies'
SELECT `member`.`last_name`, `member`.`phone` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `major`.`major_name` = 'Elementary Education'
SELECT `budget`.`category`, `budget`.`amount` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `event`.`event_name` = 'January Speaker'
SELECT `event`.`event_name` FROM `event` INNER JOIN `budget` ON `event`.`event_id` = `budget`.`link_to_event` WHERE `budget`.`category` = 'Food'
SELECT `member`.`first_name`, `member`.`last_name`, `income`.`amount` FROM `member` INNER JOIN `income` ON `member`.`member_id` = `income`.`link_to_member` WHERE `income`.`date_received` = '2019-09-09'
SELECT `budget`.`category` FROM `expense` INNER JOIN `budget` ON `expense`.`link_to_budget` = `budget`.`budget_id` WHERE `expense`.`expense_description` = 'Posters'
SELECT `member`.`first_name`, `member`.`last_name`, `major`.`college` FROM `member` INNER JOIN `major` ON `member`.`link_to_major` = `major`.`major_id` WHERE `member`.`position` = 'Secretary'
SELECT `event`.`event_name`, SUM(`budget`.`spent`) AS total_spent FROM `budget` INNER JOIN `event` ON `budget`.`link_to_event` = `event`.`event_id` WHERE `budget`.`category` = 'Speaker Gifts' GROUP BY `event`.`event_name`
SELECT `zip_code`.`city` FROM `member` JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `member`.`first_name` = 'Garrett' AND `member`.`last_name` = 'Gerke'
SELECT `member`.`first_name`, `member`.`last_name`, `member`.`position` FROM `member` INNER JOIN `zip_code` ON `member`.`zip` = `zip_code`.`zip_code` WHERE `zip_code`.`city` = 'Lincolnton' AND `zip_code`.`state` = 'North Carolina' AND `zip_code`.`zip_code` = 28092
SELECT COUNT(DISTINCT `gasstations`.`GasStationID`) FROM `gasstations` INNER JOIN `transactions_1k` ON `gasstations`.`GasStationID` = `transactions_1k`.`GasStationID` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `gasstations`.`Country` = 'CZE' AND `products`.`Description` = 'Premium'
SELECT CAST(SUM(IIF(`Currency` = 'EUR', 1, 0)) AS REAL) / SUM(IIF(`Currency` = 'CZK', 1, 0)) FROM `customers`
SELECT `customers`.`CustomerID` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'LAM' AND `yearmonth`.`Date` BETWEEN 201201 AND 201212 ORDER BY `yearmonth`.`Consumption` ASC LIMIT 1
SELECT AVG(`yearmonth`.`Consumption`) / 12 AS `Average_Monthly_Consumption` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND SUBSTR(`yearmonth`.`Date`, 1, 4) = '2013'
SELECT `customers`.`CustomerID` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' AND `yearmonth`.`Date` BETWEEN 201101 AND 201112 ORDER BY `yearmonth`.`Consumption` DESC LIMIT 1
SELECT COUNT(DISTINCT `customers`.`CustomerID`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' AND `yearmonth`.`Date` BETWEEN 201201 AND 201212 AND `yearmonth`.`Consumption` < 30000
SELECT (SELECT SUM(`Consumption`) FROM `yearmonth` AS ym INNER JOIN `customers` AS c ON ym.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'CZK' AND ym.`Date` BETWEEN 201201 AND 201212) - (SELECT SUM(`Consumption`) FROM `yearmonth` AS ym INNER JOIN `customers` AS c ON ym.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'EUR' AND ym.`Date` BETWEEN 201201 AND 201212) AS `Difference`
SELECT `Date` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' ORDER BY `yearmonth`.`Consumption` DESC LIMIT 1
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `yearmonth` GROUP BY `CustomerID` ORDER BY SUM(`Consumption`) ASC LIMIT 1)
SELECT SUBSTR(`Date`, 1, 4) AS `Year` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Currency` = 'CZK' GROUP BY `Year` ORDER BY SUM(`yearmonth`.`Consumption`) DESC LIMIT 1
SELECT SUBSTR(`Date`, 5, 2) AS `Month`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND `yearmonth`.`Date` BETWEEN '201301' AND '201312' GROUP BY `Month` ORDER BY `TotalConsumption` DESC LIMIT 1
WITH SME AS (SELECT `CustomerID`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2013' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'SME') GROUP BY `CustomerID` ORDER BY `TotalConsumption` ASC LIMIT 1), LAM AS (SELECT `CustomerID`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2013' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'LAM') GROUP BY `CustomerID` ORDER BY `TotalConsumption` ASC LIMIT 1), KAM AS (SELECT `CustomerID`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2013' AND `CustomerID` IN (SELECT `CustomerID` FROM `customers` WHERE `Segment` = 'KAM') GROUP BY `CustomerID` ORDER BY `TotalConsumption` ASC LIMIT 1) SELECT (SELECT `TotalConsumption` FROM SME) - (SELECT `TotalConsumption` FROM LAM) AS `Difference_SME_LAM`, (SELECT `TotalConsumption` FROM LAM) - (SELECT `TotalConsumption` FROM KAM) AS `Difference_LAM_KAM`, (SELECT `TotalConsumption` FROM KAM) - (SELECT `TotalConsumption` FROM SME) AS `Difference_KAM_SME`
SELECT `customers`.`Segment`, (SUM(CASE WHEN SUBSTR(`yearmonth`.`Date`, 1, 4) = '2013' THEN `yearmonth`.`Consumption` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`yearmonth`.`Date`, 1, 4) = '2012' THEN `yearmonth`.`Consumption` ELSE 0 END)) / SUM(CASE WHEN SUBSTR(`yearmonth`.`Date`, 1, 4) = '2013' THEN `yearmonth`.`Consumption` ELSE 0 END) * 100 AS `PercentageIncrease` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND `customers`.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY `customers`.`Segment` ORDER BY `PercentageIncrease` DESC LIMIT 1 UNION ALL SELECT `customers`.`Segment`, (SUM(CASE WHEN SUBSTR(`yearmonth`.`Date`, 1, 4) = '2013' THEN `yearmonth`.`Consumption` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`yearmonth`.`Date`, 1, 4) = '2012' THEN `yearmonth`.`Consumption` ELSE 0 END)) / SUM(CASE WHEN SUBSTR(`yearmonth`.`Date`, 1, 4) = '2013' THEN `yearmonth`.`Consumption` ELSE 0 END) * 100 AS `PercentageIncrease` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND `customers`.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY `customers`.`Segment` ORDER BY `PercentageIncrease` ASC LIMIT 1
SELECT SUM(`Consumption`) FROM `yearmonth` WHERE `CustomerID` = 6 AND `Date` BETWEEN '201308' AND '201311'
SELECT (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'CZE' AND `Segment` = 'Value for money') - (SELECT COUNT(*) FROM `gasstations` WHERE `Country` = 'SVK' AND `Segment` = 'Value for money') AS `DiscountGasStationsDifference`
SELECT (SELECT `Consumption` FROM `yearmonth` WHERE `CustomerID` = 7 AND `Date` = '201304') - (SELECT `Consumption` FROM `yearmonth` WHERE `CustomerID` = 5 AND `Date` = '201304') AS `ConsumptionDifference`
SELECT (SELECT SUM(T1.`Amount`) FROM `transactions_1k` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'SME' AND T2.`Currency` = 'CZK') - (SELECT SUM(T1.`Amount`) FROM `transactions_1k` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'SME' AND T2.`Currency` = 'EUR') AS `Amount_of_more_SMEs`
SELECT `customers`.`CustomerID` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'LAM' AND `customers`.`Currency` = 'EUR' AND `yearmonth`.`Date` = 201310 ORDER BY `yearmonth`.`Consumption` DESC LIMIT 1
SELECT T1.`CustomerID`, MAX(T2.`Consumption`) FROM `customers` AS T1 INNER JOIN `yearmonth` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'KAM' GROUP BY T1.`CustomerID` ORDER BY MAX(T2.`Consumption`) DESC LIMIT 1
SELECT SUM(`yearmonth`.`Consumption`) FROM `yearmonth` INNER JOIN `customers` ON `yearmonth`.`CustomerID` = `customers`.`CustomerID` WHERE `customers`.`Segment` = 'KAM' AND `yearmonth`.`Date` = 201305
SELECT (COUNT(DISTINCT T1.`CustomerID`) * 100.0 / (SELECT COUNT(DISTINCT `CustomerID`) FROM `customers` WHERE `Segment` = 'LAM')) AS percentage FROM `yearmonth` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'LAM' AND T1.`Consumption` > 46.73
SELECT `Country`, COUNT(*) AS `TotalValueForMoneyStations` FROM `gasstations` WHERE `Segment` = 'Value for money' GROUP BY `Country`
SELECT CAST(SUM(IIF(`Segment` = 'KAM' AND `Currency` = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(`CustomerID`) FROM `customers` WHERE `Segment` = 'KAM'
SELECT CAST(SUM(IIF(`Consumption` > 528.3, 1, 0)) AS REAL) * 100 / COUNT(`CustomerID`) FROM `yearmonth` WHERE `Date` = '201202'
SELECT CAST(SUM(CASE WHEN `Segment` = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`GasStationID`) FROM `gasstations` WHERE `Country` = 'SVK'
SELECT `CustomerID` FROM `yearmonth` WHERE `Date` = '201309' ORDER BY `Consumption` DESC LIMIT 1
SELECT `customers`.`Segment` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `yearmonth`.`Date` = '201309' GROUP BY `customers`.`Segment` ORDER BY SUM(`yearmonth`.`Consumption`) ASC LIMIT 1
SELECT `customers`.`CustomerID` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Segment` = 'SME' AND `yearmonth`.`Date` = '201206' ORDER BY `yearmonth`.`Consumption` ASC LIMIT 1
SELECT MAX(`Consumption`) FROM `yearmonth` WHERE SUBSTR(`Date`, 1, 4) = '2012'
SELECT MAX(SUM(`yearmonth`.`Consumption`) / 12) AS `MonthlyConsumption` FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' GROUP BY `customers`.`CustomerID`
SELECT DISTINCT `products`.`Description` FROM `products` INNER JOIN `transactions_1k` ON `products`.`ProductID` = `transactions_1k`.`ProductID` INNER JOIN `yearmonth` ON `transactions_1k`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `yearmonth`.`Date` = '201309'
SELECT DISTINCT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` LIKE '2013-06%'
SELECT DISTINCT `gasstations`.`ChainID` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `customers`.`Currency` = 'EUR'
SELECT DISTINCT `products`.`Description` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `customers`.`Currency` = 'EUR'
SELECT AVG(`Price`) FROM `transactions_1k` WHERE `Date` LIKE '2012-01%'
SELECT COUNT(DISTINCT `customers`.`CustomerID`) FROM `customers` INNER JOIN `yearmonth` ON `customers`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `customers`.`Currency` = 'EUR' AND `yearmonth`.`Consumption` > 1000
SELECT DISTINCT `products`.`Description` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` INNER JOIN `products` ON `transactions_1k`.`ProductID` = `products`.`ProductID` WHERE `gasstations`.`Country` = 'CZE'
SELECT DISTINCT `transactions_1k`.`Time` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`ChainID` = 11
SELECT COUNT(`transactions_1k`.`TransactionID`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE' AND `transactions_1k`.`Price` > 1000
SELECT COUNT(T1.`TransactionID`) FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE' AND T1.`Date` > '2012-01-01'
SELECT AVG(`transactions_1k`.`Price`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `gasstations`.`Country` = 'CZE'
SELECT AVG(`transactions_1k`.`Price`) FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` WHERE `customers`.`Currency` = 'EUR'
SELECT `customers`.`CustomerID` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-25' GROUP BY `customers`.`CustomerID` ORDER BY SUM(`transactions_1k`.`Amount` * `transactions_1k`.`Price`) DESC LIMIT 1
SELECT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-25' ORDER BY `transactions_1k`.`Time` ASC LIMIT 1
SELECT `customers`.`Currency` FROM `customers` INNER JOIN `transactions_1k` ON `customers`.`CustomerID` = `transactions_1k`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Time` = '16:25:00'
SELECT `customers`.`Segment` FROM `transactions_1k` INNER JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-23' AND `transactions_1k`.`Time` = '21:20:00' LIMIT 1
SELECT COUNT(`TransactionID`) FROM `transactions_1k` JOIN `customers` ON `transactions_1k`.`CustomerID` = `customers`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-26' AND `transactions_1k`.`Time` < '13:00:00' AND `customers`.`Currency` = 'CZK'
SELECT `Segment` FROM `customers` WHERE `CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` ORDER BY `Date` ASC, `Time` ASC LIMIT 1)
SELECT T2.`Country` FROM `transactions_1k` AS T1 INNER JOIN `gasstations` AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`Date` = '2012-08-24' AND T1.`Time` = '12:42:00'
SELECT `ProductID` FROM `transactions_1k` WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00'
SELECT `yearmonth`.`Date`, `yearmonth`.`Consumption` FROM `transactions_1k` INNER JOIN `yearmonth` ON `transactions_1k`.`CustomerID` = `yearmonth`.`CustomerID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Price` = 124.05 AND `yearmonth`.`Date` = '201201'
SELECT COUNT(`transactions_1k`.`TransactionID`) FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-26' AND `transactions_1k`.`Time` BETWEEN '08:00:00' AND '09:00:00' AND `gasstations`.`Country` = 'CZE'
SELECT c.`Currency` FROM `customers` c INNER JOIN `yearmonth` y ON c.`CustomerID` = y.`CustomerID` WHERE y.`Date` = '201306' AND y.`Consumption` = 214582.17
SELECT DISTINCT T3.`Country` FROM `transactions_1k` AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN `gasstations` AS T3 ON T1.`GasStationID` = T3.`GasStationID` WHERE T1.`CardID` = 667467
SELECT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`Date` = '2012-08-24' AND `transactions_1k`.`Amount` = 548.4
SELECT CAST(COUNT(DISTINCT T1.`CustomerID`) AS REAL) * 100 / (SELECT COUNT(DISTINCT `CustomerID`) FROM `customers`) FROM `customers` AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Currency` = 'EUR' AND T2.`Date` = '2012-08-25'
SELECT (y2012.`Consumption` - y2013.`Consumption`) / y2012.`Consumption` AS consumption_decrease_rate FROM (SELECT `CustomerID`, `Consumption` FROM `yearmonth` WHERE `Date` = '201207') AS y2012 INNER JOIN (SELECT `CustomerID`, `Consumption` FROM `yearmonth` WHERE `Date` = '201303') AS y2013 ON y2012.`CustomerID` = y2013.`CustomerID` WHERE y2012.`CustomerID` = (SELECT `CustomerID` FROM `transactions_1k` WHERE `Date` = '2012-08-25' AND `Price` = 634.8 LIMIT 1)
SELECT T1.`GasStationID` FROM `transactions_1k` AS T1 GROUP BY T1.`GasStationID` ORDER BY SUM(T1.`Amount` * T1.`Price`) DESC LIMIT 1
SELECT CAST(SUM(IIF(`gasstations`.`Segment` = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(`gasstations`.`GasStationID`) FROM `gasstations` WHERE `gasstations`.`Country` = 'SVK'
SELECT SUM(T1.`Amount`) AS total_spent_at_gas_stations, (SELECT SUM(T3.`Consumption`) FROM `yearmonth` AS T3 WHERE T3.`CustomerID` = 38508 AND T3.`Date` = '201201') AS spent_in_january_2012 FROM `transactions_1k` AS T1 WHERE T1.`CustomerID` = 38508
SELECT `products`.`Description` FROM `products` INNER JOIN `transactions_1k` ON `products`.`ProductID` = `transactions_1k`.`ProductID` GROUP BY `products`.`Description` ORDER BY SUM(`transactions_1k`.`Amount`) DESC LIMIT 5
SELECT T1.`CustomerID`, SUM(T2.`Price`) / SUM(T2.`Amount`) AS `AveragePricePerItem`, T1.`Currency` FROM `customers` AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.`CustomerID` = T2.`CustomerID` GROUP BY T1.`CustomerID` ORDER BY SUM(T2.`Price`) DESC LIMIT 1
SELECT `gasstations`.`Country` FROM `transactions_1k` INNER JOIN `gasstations` ON `transactions_1k`.`GasStationID` = `gasstations`.`GasStationID` WHERE `transactions_1k`.`ProductID` = 2 ORDER BY `transactions_1k`.`Price` DESC LIMIT 1
SELECT T2.`Consumption` FROM `transactions_1k` AS T1 INNER JOIN `yearmonth` AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`ProductID` = 5 AND (T1.`Price` / T1.`Amount`) > 29.00 AND T2.`Date` = '201208'
