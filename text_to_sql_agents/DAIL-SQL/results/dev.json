{
    "26": "SELECT To answer the question about high schools in Monterey with more than 800 free or reduced-price meals for ages 5-17, we need to query the `schools` and `frpm` tables. We will join these tables on the `CDSCode` field, filter for schools in Monterey County, and ensure the `FRPM Count (Ages 5-17)` is greater than 800. We will also filter for high schools, which typically have a \"High Grade\" of 12. Here's the SQL query: ```sql SELECT S.School AS SchoolName, S.Street, S.City, S.State, S.Zip FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.County = 'Monterey' AND F.`FRPM Count (Ages 5-17)` > 800 AND F.`\t----- bird -----\tcalifornia_schools",
    "35": "SELECT S.AdmEmail1 FROM frpm AS F INNER JOIN schools AS S ON F.CDSCode = S.CDSCode WHERE F.`Charter School (Y/N)` = 1 ORDER BY F.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "42": "SELECT s.EdOpsName FROM satscores AS ss INNER JOIN schools AS s ON ss.cds = s.CDSCode ORDER BY ss.AvgScrMath DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District FROM schools WHERE Magnet = 0 AND City = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "111": "SELECT COUNT(a.account_id) AS num_accounts_opened FROM account AS a INNER JOIN district AS d ON a.district_id = d.district_id WHERE d.A2 = 'Litomerice' AND strftime('%Y', a.date) = '1996';\t----- bird -----\tfinancial",
    "119": "SELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region FROM account a JOIN trans t ON a.account_id = t.account_id JOIN district d ON a.district_id = d.district_id WHERE STRFTIME('%Y', a.date) = '1993' AND t.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "139": "SELECT COUNT(*) AS high_level_owner_cards FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER';\t----- bird -----\tfinancial",
    "177": "SELECT To answer the question about the sum that client number 4's account has following transaction 851 and the gender of the account owner, we need to perform a series of joins between the tables to gather the necessary information. Here's how you can construct the SQL query: 1. Identify the account associated with transaction 851. 2. Find the client associated with that account. 3. Retrieve the balance after transaction 851. 4. Determine the gender of the client. Here's the SQL query to achieve this: ```sql SELECT T3.balance AS balance_after_transaction, T5.gender AS account_owner_gender FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T5 ON T3.client_id = T5.client_id WHERE T1.trans_id = 851\t----- bird -----\tfinancial",
    "180": "SELECT c.client_id, a.account_id FROM client AS c INNER JOIN disp AS d ON c.client_id = d.client_id INNER JOIN account AS a ON d.account_id = a.account_id INNER JOIN district AS dist ON a.district_id = dist.district_id WHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND dist.A2 = 'East Bohemia';\t----- bird -----\tfinancial",
    "226": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percent FROM bond WHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "240": "SELECT a.element FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "251": "SELECT a.element FROM atom AS a INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+' GROUP BY a.element ORDER BY COUNT(a.element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "255": "SELECT CAST(SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(B.bond_id) AS percentage FROM bond AS B INNER JOIN molecule AS M ON B.molecule_id = M.molecule_id WHERE B.bond_type = '-' AND M.label IN ('+', '-')\t----- bird -----\ttoxicology",
    "268": "SELECT DISTINCT a.element FROM connected c INNER JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE c.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE m.label = '-' AND a.element = 'c' AND b.bond_type = '#'\t----- bird -----\ttoxicology",
    "303": "SELECT COUNT(b.bond_id) AS double_bond_count, CASE WHEN m.label = '+' THEN 'Carcinogenic' WHEN m.label = '-' THEN 'Non-carcinogenic' ELSE 'Unknown' END AS carcinogenic_status FROM molecule AS m INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE m.molecule_id = 'TR006' AND b.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "305": "SELECT C.bond_id, C.atom_id AS atom_id_1, C.atom_id2 AS atom_id_2 FROM connected AS C INNER JOIN bond AS B ON C.bond_id = B.bond_id WHERE B.bond_type = '-' AND C.atom_id < C.atom_id2;\t----- bird -----\ttoxicology",
    "310": "SELECT COUNT(DISTINCT M.molecule_id) AS total_molecules_with_double_bond, SUM(CASE WHEN M.label = '+' THEN 1 ELSE 0 END) AS carcinogenic_molecules FROM molecule AS M INNER JOIN bond AS B ON M.molecule_id = B.molecule_id WHERE B.bond_type = ' = ';\t----- bird -----\ttoxicology",
    "327": "SELECT m.molecule_id FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label = '-' GROUP BY m.molecule_id HAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "353": "SELECT S.name AS setName, S.totalSetSize FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.language = 'Italian';\t----- bird -----\tcard_games",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "394": "SELECT COUNT(DISTINCT id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "406": "SELECT c.id FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE c.types LIKE '%Creature%' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "416": "SELECT CAST(SUM(CASE WHEN fd.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL OR c.power = '*';\t----- bird -----\tcard_games",
    "428": "SELECT S.name, ST.translation FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.id = 5;\t----- bird -----\tcard_games",
    "442": "SELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage');\t----- bird -----\tcard_games",
    "445": "SELECT c.name AS card_name, fd.type AS card_type, fd.language, fd.flavorText FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.watermark = 'Color Pie';\t----- bird -----\tcard_games",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "484": "SELECT fd.name AS ItalianName FROM cards AS c INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid INNER JOIN sets AS s ON c.setCode = s.code WHERE s.name = 'Coldsnap' AND fd.language = 'Italian' AND c.convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards AS c2 INNER JOIN sets AS s2 ON c2.setCode = s2.code WHERE s2.name = 'Coldsnap' );\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';\t----- bird -----\tcard_games",
    "503": "SELECT S.type FROM cards C INNER JOIN sets S ON C.setCode = S.code WHERE C.name = 'Samite Pilgrim';\t----- bird -----\tcard_games",
    "522": "SELECT C.name, L.format FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid WHERE C.edhrecRank = 1 AND L.status = 'Banned';\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT c.name, l.format FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "543": "SELECT MAX(AnswerCount) AS MaxAnswerCount FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' );\t----- bird -----\tcodebase_community",
    "546": "SELECT DISTINCT U.DisplayName FROM users U INNER JOIN posts P ON U.Id = P.OwnerUserId WHERE P.ClosedDate IS NOT NULL;\t----- bird -----\tcodebase_community",
    "562": "SELECT COUNT(C.Id) AS CommentCount FROM posts AS P INNER JOIN comments AS C ON P.Id = C.PostId WHERE P.ViewCount = 1910;\t----- bird -----\tcodebase_community",
    "569": "SELECT COUNT(V.Id) AS TotalVotes FROM posts AS P INNER JOIN votes AS V ON P.Id = V.PostId WHERE P.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "590": "SELECT Id FROM users WHERE Views = (SELECT MIN(Views) FROM users);\t----- bird -----\tcodebase_community",
    "598": "SELECT (CAST(SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) - (CAST(SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100) AS percentage_difference FROM badges WHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "602": "SELECT P.Id AS PostId, P.OwnerUserId AS UserId FROM posts AS P WHERE P.Score > 60 AND P.OwnerUserId IS NOT NULL;\t----- bird -----\tcodebase_community",
    "605": "SELECT COUNT(DISTINCT UserId) AS NumberOfUsers FROM badges WHERE Name = 'Announcer';\t----- bird -----\tcodebase_community",
    "607": "SELECT COUNT(Id) AS PositiveCommentCount FROM comments WHERE Score > 60;\t----- bird -----\tcodebase_community",
    "610": "SELECT b.Name FROM badges b INNER JOIN users u ON b.UserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "620": "SELECT DISTINCT u.Id, u.Views FROM badges AS b INNER JOIN users AS u ON b.UserId = u.Id WHERE b.Date = '2010-07-19 19:39:08.0';\t----- bird -----\tcodebase_community",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014';\t----- bird -----\tcodebase_community",
    "646": "SELECT DISTINCT p.Title, c.UserDisplayName FROM comments AS c INNER JOIN posts AS p ON c.PostId = p.Id WHERE c.Score > 60;\t----- bird -----\tcodebase_community",
    "648": "SELECT U.DisplayName, U.WebsiteUrl FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.FavoriteCount > 150 AND U.WebsiteUrl IS NOT NULL;\t----- bird -----\tcodebase_community",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\t----- bird -----\tcodebase_community",
    "717": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "740": "SELECT COUNT(DISTINCT s.id) AS female_superheroes_with_strength_100 FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN hero_attribute AS ha ON s.id = ha.hero_id JOIN attribute AS a ON ha.attribute_id = a.id WHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "772": "SELECT eye_colour.colour AS eye_colour, hair_colour.colour AS hair_colour, skin_colour.colour AS skin_colour FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN publisher ON superhero.publisher_id = publisher.id LEFT JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id LEFT JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id LEFT JOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "781": "SELECT S.height_cm FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE C.colour = 'Amber';\t----- bird -----\tsuperhero",
    "801": "SELECT CAST(SUM(CASE WHEN g.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) AS ratio FROM superhero s JOIN gender g ON s.gender_id = g.id;\t----- bird -----\tsuperhero",
    "824": "SELECT S.superhero_name FROM superhero AS S INNER JOIN hero_power AS HP ON S.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id WHERE SP.power_name = 'Wind Control' ORDER BY S.superhero_name ASC;\t----- bird -----\tsuperhero",
    "829": "SELECT ABS( (SELECT COUNT(*) FROM superhero AS s INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero AS s INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') ) AS difference;\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero",
    "840": "SELECT ha.attribute_value FROM superhero AS s INNER JOIN hero_attribute AS ha ON s.id = ha.hero_id WHERE s.superhero_name = 'Aquababy';\t----- bird -----\tsuperhero",
    "846": "SELECT d.driverRef FROM qualifying q INNER JOIN drivers d ON q.driverId = d.driverId WHERE q.raceId = 20 AND q.q1 IS NOT NULL AND q.q2 IS NULL;\t----- bird -----\tformula_1",
    "855": "SELECT R.url FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE C.name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
    "864": "SELECT COUNT(DISTINCT R.driverId) AS finished_drivers FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN status AS S ON R.statusId = S.statusId WHERE RA.date = '2015-11-29' AND (S.status = 'Finished' OR S.status LIKE '+%Lap%');\t----- bird -----\tformula_1",
    "888": "SELECT C.country, C.name AS circuit_name, C.location FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.name = 'European Grand Prix' ORDER BY R.year ASC LIMIT 1;\t----- bird -----\tformula_1",
    "898": "SELECT forename || ' ' || surname AS full_name, STRFTIME('%Y', 'now') - STRFTIME('%Y', dob) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "899": "SELECT C.name, C.location, C.country FROM circuits AS C JOIN races AS R ON C.circuitId = R.circuitId WHERE R.year BETWEEN 1990 AND 2000 GROUP BY C.circuitId HAVING COUNT(R.raceId) = 4;\t----- bird -----\tformula_1",
    "922": "SELECT R.time FROM races AS R INNER JOIN circuits AS C ON R.circuitId = C.circuitId WHERE R.year = 2010 AND C.name = 'Abu Dhabi Circuit';\t----- bird -----\tformula_1",
    "928": "SELECT d.driverRef FROM races r INNER JOIN results res ON r.raceId = res.raceId INNER JOIN drivers d ON res.driverId = d.driverId WHERE r.name = 'Canadian Grand Prix' AND r.year = 2007 AND res.positionOrder = 1;\t----- bird -----\tformula_1",
    "935": "SELECT COUNT(DISTINCT R.driverId) AS finished_drivers_count FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId INNER JOIN status AS S ON R.statusId = S.statusId WHERE RA.year = 2008 AND RA.name = 'Australian Grand Prix' AND (S.status = 'finished' OR S.status LIKE '+%Lap%');\t----- bird -----\tformula_1",
    "938": "SELECT D.forename, D.surname, D.url FROM results R INNER JOIN races RA ON R.raceId = RA.raceId INNER JOIN drivers D ON R.driverId = D.driverId WHERE RA.year = 2008 AND RA.name = 'Australian Grand Prix' AND R.positionOrder = 1;\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';\t----- bird -----\tformula_1",
    "970": "SELECT lt.driverId FROM drivers d JOIN lapTimes lt ON d.driverId = lt.driverId WHERE d.nationality = 'German' AND STRFTIME('%Y', d.dob) BETWEEN '1980' AND '1990' ORDER BY lt.milliseconds ASC LIMIT 3;\t----- bird -----\tformula_1",
    "985": "SELECT lt.driverId FROM lapTimes lt JOIN races r ON lt.raceId = r.raceId WHERE r.name LIKE '%French Grand Prix%' AND lt.lap = 3 ORDER BY lt.milliseconds DESC LIMIT 1;\t----- bird -----\tformula_1",
    "987": "SELECT AVG(R.milliseconds) AS average_fastest_lap_time FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.year = 2006 AND RA.name = 'United States Grand Prix' AND R.position <= 5;\t----- bird -----\tformula_1",
    "1004": "SELECT d.forename, d.surname, COUNT(r.resultId) AS wins FROM drivers d JOIN results r ON d.driverId = r.driverId WHERE d.dob = (SELECT MIN(dob) FROM drivers) AND r.positionOrder = 1 GROUP BY d.forename, d.surname;\t----- bird -----\tformula_1",
    "1039": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "1042": "SELECT L.name FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2009/2010' GROUP BY L.name HAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "1048": "SELECT PA.overall_rating FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE P.player_name = 'Gabriel Tamas' AND strftime('%Y', PA.date) = '2011';\t----- bird -----\teuropean_football_2",
    "1056": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands';\t----- bird -----\teuropean_football_2",
    "1082": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany';\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE (STRFTIME('%Y', 'now') - STRFTIME('%Y', birthday)) - (CAST(STRFTIME('%m-%d', 'now') < STRFTIME('%m-%d', birthday) AS INTEGER)) >= 35;\t----- bird -----\teuropean_football_2",
    "1145": "SELECT L.name, COUNT(M.id) AS game_count FROM `Match` AS M INNER JOIN `League` AS L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY game_count DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "1157": "SELECT P.ID, P.SEX, P.Diagnosis FROM Examination E INNER JOIN Patient P ON E.ID = P.ID WHERE E.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT P.Diagnosis, COUNT(*) AS Occurrences FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY P.Diagnosis ORDER BY Occurrences DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' ORDER BY `First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT CAST(SUM(CASE WHEN P.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) * 100.0 / SUM(CASE WHEN E.Symptoms LIKE '%thrombocytopenia%' THEN 1 ELSE 0 END) AS percentage FROM Examination E INNER JOIN Patient P ON E.ID = P.ID WHERE E.Symptoms LIKE '%thrombocytopenia%'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT (COUNT(CASE WHEN L.UA > 6.5 THEN 1 END) * 100.0 / COUNT(*)) AS Percentage_Above_Normal_UA FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT P.ID, P.SEX, P.Birthday, L.`T-BIL` FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory);\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT P.ID, P.Diagnosis, STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS age FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA IN ('negative', '0') AND YEAR(P.`First Date`) < 2000;\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.SSA NOT IN ('negative', '0') ORDER BY P.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT CAST(SUM(CASE WHEN T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) AS percentage FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT COUNT(DISTINCT L.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE P.SEX = 'M' AND L.GOT < 60;\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT COUNT(DISTINCT P.ID) FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID WHERE L.ALP >= 300 AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT COUNT(DISTINCT L.ID) AS NumberOfPatients FROM Laboratory AS L INNER JOIN Examination AS E ON L.ID = E.ID WHERE L.CPK < 250 AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "1313": "SELECT COUNT(DISTINCT m.member_id) FROM member AS m INNER JOIN major AS maj ON m.link_to_major = maj.major_id WHERE maj.college = 'College of Engineering';\t----- bird -----\tstudent_club",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "1368": "T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "1514": "SELECT DISTINCT c.Currency FROM transactions_1k t INNER JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT G.Country FROM transactions_1k AS T INNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID WHERE T.Date = '2012-08-24' AND T.Time = '12:42:00';\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT DISTINCT g.Country FROM transactions_1k AS t INNER JOIN gasstations AS g ON t.GasStationID = g.GasStationID WHERE t.CardID = 667467;\t----- bird -----\tdebit_card_specializing"
}