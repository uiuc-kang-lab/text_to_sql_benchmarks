{
    "26": "SELECT T2.School, T2.Street, T2.City, T2.State, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`County Name` = 'Monterey' AND T1.`School Type` = 'High Schools (Public)' AND T1.`FRPM Count (Ages 5-17)` > 800",
    "35": "SELECT T1.AdmEmail1 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Charter School (Y/N)` = 1 AND T2.`Enrollment (K-12)` IS NOT NULL ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 1",
    "42": "SELECT T2.EdOpsName FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1",
    "71": "SELECT schools.District FROM schools WHERE schools.Magnet = 0 AND schools.City = 'Fresno'",
    "111": "SELECT COUNT(A.account_id) FROM account AS A INNER JOIN district AS D ON A.district_id = D.district_id WHERE D.A2 = 'Litomerice' AND strftime('%Y', A.date) = '1996'",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE strftime('%Y', T1.date) = '1993' AND T1.frequency = 'POPLATEK PO OBRATU'",
    "139": "SELECT COUNT(*) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "177": "SELECT T1.balance, T4.gender FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.trans_id = 851 AND T4.client_id = 4",
    "180": "SELECT client.client_id, client.birth_date FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'east Bohemia' AND client.birth_date BETWEEN '1983-01-01' AND '1987-12-31'",
    "226": "SELECT CAST(SUM(CASE WHEN bond.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond.bond_id) as percent FROM bond WHERE bond.molecule_id = 'TR008'",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004'",
    "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1",
    "255": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",
    "268": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id  WHERE T2.bond_id = 'TR001_10_11'",
    "272": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.element = 'c' AND T2.bond_type = '#' AND T1.label = '-' LIMIT 2",
    "303": "SELECT COUNT(bond.bond_type), molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '=' AND bond.molecule_id = 'TR006' AND molecule.molecule_id = 'TR006'",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'",
    "310": "SELECT COUNT(DISTINCT bond.molecule_id) AS total_molecules, COUNT(DISTINCT CASE WHEN molecule.label = '+' THEN bond.molecule_id END) AS carcinogenic_molecules FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '='",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T2.molecule_id HAVING COUNT(T2.atom_id) > 5",
    "353": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'",
    "378": "SELECT cards.id FROM cards WHERE cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL",
    "394": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "406": "SELECT DISTINCT cards.id FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Creature' AND legalities.status = 'Legal'",
    "416": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.uuid) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'",
    "428": "SELECT sets.name, set_translations.translation FROM sets LEFT JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 5",
    "442": "SELECT sets.baseSetSize, sets.code FROM sets WHERE sets.block = 'Masques' OR sets.block = 'Mirage'",
    "445": "SELECT T1.language, T1.flavorText, T2.type FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.watermark = 'colorpie'",
    "450": "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "484": "SELECT T3.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Coldsnap' AND T3.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;",
    "491": "SELECT sets.mcmName FROM sets WHERE sets.releaseDate = '2017-06-09'",
    "503": "SELECT sets.type FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE cards.name = 'Samite Pilgrim';",
    "522": "SELECT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.edhrecRank = 1 AND legalities.status = 'Banned'",
    "528": "SELECT DISTINCT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal'",
    "543": "SELECT AnswerCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie' ORDER BY AnswerCount DESC LIMIT 1;",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL",
    "562": "SELECT COUNT(CommentCount) FROM posts WHERE ViewCount = 1910",
    "569": "SELECT COUNT(T2.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%data-visualization%'",
    "590": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1;",
    "598": "SELECT CAST(SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) - CAST(SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage_difference FROM badges WHERE Name = 'Student'",
    "602": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'",
    "607": "SELECT COUNT(Id) FROM comments WHERE Score > 60",
    "610": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id ORDER BY users.Reputation DESC LIMIT 1;",
    "620": "SELECT users.Views FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Date = '2010-07-19 19:39:08.0'",
    "641": "SELECT COUNT(DISTINCT UserId) FROM badges WHERE Name = 'Commentator' AND strftime('%Y', Date) = '2014';",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60",
    "648": "SELECT T2.DisplayName, T2.WebsiteUrl FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount > 150",
    "675": "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = '3-D Man'",
    "740": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100",
    "772": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'",
    "781": "SELECT S.height_cm FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE C.colour = 'Amber'",
    "801": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id",
    "824": "SELECT T2.superhero_name FROM superpower AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.power_id INNER JOIN superhero AS T2 ON T3.hero_id = T2.id WHERE T1.power_name = 'Wind Control' ORDER BY T2.superhero_name",
    "829": "SELECT (SELECT COUNT(T2.id) FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T1.publisher_name = 'DC Comics') - (SELECT COUNT(T3.id) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics') AS difference",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
    "840": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'",
    "846": "SELECT D.driverRef FROM qualifying AS Q INNER JOIN drivers AS D ON Q.driverId = D.driverId WHERE Q.raceId = 20 ORDER BY Q.q1 DESC LIMIT 5;",
    "855": "SELECT T1.url FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Sepang International Circuit'",
    "864": "SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '2015-11-29' AND T2.time IS NOT NULL",
    "888": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' AND T1.year IS NOT NULL ORDER BY T1.year ASC LIMIT 1",
    "898": "SELECT drivers.forename, drivers.surname, CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', drivers.dob) AS INTEGER) AS age FROM drivers WHERE drivers.nationality = 'Japanese' ORDER BY drivers.dob DESC LIMIT 1",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T2.circuitId HAVING COUNT(T2.circuitId) = 4",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.location = 'Abu Dhabi'",
    "928": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2007 AND T1.rank = 1",
    "935": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.time IS NOT NULL",
    "938": "SELECT T4.forename, T4.surname, T4.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.positionOrder = 1",
    "968": "SELECT drivers.driverRef FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica'",
    "970": "SELECT drivers.forename, drivers.surname, MIN(lapTimes.time) as earliest_lap_time FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German' AND strftime('%Y', drivers.dob) BETWEEN '1980' AND '1990' AND lapTimes.time IS NOT NULL GROUP BY drivers.driverId, drivers.forename, drivers.surname ORDER BY earliest_lap_time LIMIT 3;",
    "985": "SELECT T1.driverId FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 ORDER BY T1.time DESC LIMIT 1",
    "987": "SELECT AVG(CAST(results.fastestLapTime AS REAL)) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.rank < 11 AND races.name = 'United States Grand Prix' AND races.year = 2006",
    "1004": "SELECT T1.forename, T1.surname, SUM(T2.wins) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN (SELECT driverId FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1) AS T3 ON T1.driverId = T3.driverId GROUP BY T1.forename, T1.surname",
    "1039": "SELECT CAST(SUM(T1.long_shots) AS REAL) / COUNT(T1.player_fifa_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Ahmed Samir Farag'",
    "1042": "SELECT DISTINCT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2009/2010' GROUP BY T2.name HAVING CAST(SUM(T1.home_team_goal) AS REAL) / COUNT(DISTINCT T1.id) > CAST(SUM(T1.away_team_goal) AS REAL) / COUNT(DISTINCT T1.id)",
    "1048": "SELECT PA.overall_rating FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE P.player_name = 'Gabriel Tamas' AND strftime('%Y', PA.date) = '2011'",
    "1056": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'",
    "1082": "SELECT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany'",
    "1118": "SELECT Player.player_name FROM Player WHERE STRFTIME('%Y', 'now') - STRFTIME('%Y', Player.birthday) >= 35",
    "1145": "SELECT L.name FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.id ORDER BY COUNT(M.id) DESC LIMIT 4",
    "1157": "SELECT E.ID, P.SEX, P.Diagnosis FROM Examination AS E INNER JOIN Patient AS P ON E.ID = P.ID WHERE E.Thrombosis = 2",
    "1173": "SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' AND `First Date` IS NOT NULL ORDER BY `First Date` ASC LIMIT 1",
    "1200": "SELECT CAST(SUM(IIF(Diagnosis LIKE '%SLE%', 1, 0)) AS REAL) * 100 / COUNT(Diagnosis) FROM Examination WHERE Symptoms LIKE '%thrombocytopenia%'",
    "1218": "SELECT COUNT(CASE WHEN T2.UA > 6.5 THEN 1 END) * 100.0 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'",
    "1224": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1",
    "1235": "SELECT T2.Diagnosis, T1.ID, strftime('%Y', 'now') - strftime('%Y', T2.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RBC < 3.5",
    "1271": "SELECT COUNT(DISTINCT Laboratory.ID) FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.SSA IN ('-', '+-') AND strftime('%Y', Patient.`First Date`) < '2000'",
    "1272": "SELECT T2.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSA NOT IN ('negative', '0') AND T2.`First Date` IS NOT NULL ORDER BY T2.`First Date` ASC LIMIT 1",
    "1279": "SELECT CAST(SUM(CASE WHEN T1.GOT >= 60 AND T2.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'",
    "1286": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'",
    "1302": "SELECT COUNT(T3.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID WHERE T1.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')",
    "1313": "SELECT COUNT(member.member_id) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'College of Engineering')",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "1368": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.phone = '809-555-3360'",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
    "1514": "SELECT t2.Currency FROM transactions_1k AS t1 INNER JOIN customers AS t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Date = '2012-08-24' AND t1.Time = '16:25:00'",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'",
    "1523": "SELECT DISTINCT T3.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.CustomerID = T2.CustomerID WHERE T1.CardID = 667467"
}