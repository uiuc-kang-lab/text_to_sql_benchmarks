{
    "26": "SELECT frpm.`School Name`, schools.Street, schools.City, schools.State, schools.Zip FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EILName = 'High School' AND schools.County = 'Monterey' AND frpm.`Free Meal Count (Ages 5-17)` > 800 AND frpm.`Free Meal Count (Ages 5-17)` IS NOT NULL;",
    "35": "SELECT T3.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T1.`Charter School (Y/N)` = 1 AND T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1",
    "42": "SELECT frpm.`Educational Option Type` FROM satscores INNER JOIN frpm ON satscores.cds = frpm.CDSCode WHERE satscores.AvgScrMath = (SELECT MAX(satscores.AvgScrMath) FROM satscores)",
    "71": "SELECT DISTINCT District FROM schools WHERE City = 'Fresno' AND Magnet = 0",
    "111": "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE strftime('%Y', account.date) = '1996' AND district.A2 = 'Litomerice'",
    "119": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE strftime('%Y', T1.date) = '1993' AND T1.frequency = 'POPLATEK PO OBRATU';",
    "139": "SELECT COUNT(*) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE card.type = 'gold' AND disp.type = 'OWNER'",
    "177": "SELECT T1.balance, T2.gender FROM trans AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id WHERE T2.client_id = 4 AND T1.trans_id = 851",
    "180": "SELECT client.client_id, disp.account_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.A3 = 'east Bohemia'",
    "226": "SELECT CAST(SUM(CASE WHEN bond.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(bond.bond_id) AS percent FROM bond WHERE bond.molecule_id = 'TR008'",
    "240": "SELECT element FROM atom WHERE molecule_id = 'TR004';",
    "251": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1",
    "255": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) AS percentage FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",
    "268": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'",
    "272": "SELECT DISTINCT m.molecule_id FROM molecule AS m INNER JOIN atom AS a ON m.molecule_id = a.molecule_id INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE a.element = 'c' AND b.bond_type = '#' AND m.label = '-'",
    "303": "SELECT COUNT(bond.bond_type) AS double_bond_count, molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.molecule_id = 'TR006' AND bond.bond_type = '='",
    "305": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-' AND T2.atom_id < T2.atom_id2",
    "310": "SELECT COUNT(DISTINCT T1.molecule_id), COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T1.molecule_id END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",
    "327": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5",
    "353": "SELECT sets.name, sets.totalSetSize FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Italian'",
    "378": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT Null AND cardKingdomId IS NOT Null",
    "394": "SELECT COUNT(DISTINCT cards.id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "406": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types LIKE '%Creature%' AND T2.status = 'Legal'",
    "416": "SELECT (COUNT(T2.language) FILTER (WHERE T2.language = 'French') * 100.0 / COUNT(*)) AS percentage_of_cards FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'",
    "428": "SELECT sets.name, set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.id = 25",
    "442": "SELECT sets.baseSetSize, sets.code FROM sets WHERE sets.block IN ('Masques', 'Mirage')",
    "445": "SELECT T1.name, T1.type, T3.language, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T1.setCode = T3.setCode WHERE T1.watermark = 'flavor'",
    "450": "SELECT COUNT(*) FROM cards WHERE cards.artist = 'Aaron Miller' AND cards.cardKingdomFoilId is not null AND cards.cardKingdomId is not null",
    "484": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T2.setCode = T3.setCode INNER JOIN sets AS T4 ON T3.setCode = T4.code WHERE T4.name = 'Coldsnap' AND T1.language = 'Italian' ORDER BY T2.convertedManaCost DESC LIMIT 1;",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'",
    "503": "SELECT sets.type FROM sets WHERE sets.code = (SELECT cards.setCode FROM cards WHERE cards.name = 'Samite Pilgrim')",
    "522": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'",
    "528": "SELECT T2.name, T3.format FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN legalities AS T3 ON T2.uuid = T3.uuid WHERE T1.name = 'Hour of Devastation' AND T3.status = 'Legal'",
    "543": "SELECT MAX(posts.AnswerCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'",
    "546": "SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT Null",
    "562": "SELECT CommentCount FROM posts WHERE ViewCount = 1910",
    "569": "SELECT COUNT(votes.Id) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE posts.Tags LIKE '%<data-visualization>%';",
    "590": "SELECT Id FROM users WHERE Views IS NOT NULL ORDER BY Views ASC LIMIT 1;",
    "598": "WITH badge_counts AS ( SELECT strftime('%Y', Date) AS year, COUNT(*) AS count FROM badges WHERE Name = 'Student' GROUP BY year ), total_count AS ( SELECT COUNT(*) AS total FROM badges WHERE Name = 'Student' ) SELECT ((SELECT count FROM badge_counts WHERE year = '2010') * 100.0 / total.total - (SELECT count FROM badge_counts WHERE year = '2011') * 100.0 / total.total) AS percentage_difference FROM total_count AS total;",
    "602": "SELECT posts.Id, posts.OwnerUserId FROM posts WHERE posts.Score > 60 AND posts.OwnerUserId IS NOT NULL",
    "605": "SELECT COUNT(UserId) FROM badges WHERE Name = 'Announcer'",
    "607": "SELECT COUNT(*) FROM comments WHERE score > 60",
    "610": "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id ORDER BY users.Reputation DESC LIMIT 1;",
    "620": "SELECT DISTINCT T2.Views FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08.0';",
    "641": "SELECT COUNT(badges.UserId) FROM badges WHERE badges.Name = 'Commentator' AND strftime('%Y', badges.Date) = '2014'",
    "646": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60",
    "648": "SELECT users.DisplayName, users.WebsiteUrl FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.FavoriteCount > 150 AND users.WebsiteUrl IS NOT NULL",
    "675": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000",
    "717": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T2.id = T3.power_id WHERE T1.superhero_name = '3-D Man'",
    "740": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.gender = 'Female' AND T4.attribute_name = 'Strength' AND T3.attribute_value = 100",
    "772": "SELECT E.colour AS eyes, F.colour AS hair, G.colour AS skin_colour FROM superhero AS A INNER JOIN colour AS E ON A.eye_colour_id = E.id INNER JOIN colour AS F ON A.hair_colour_id = F.id INNER JOIN colour AS G ON A.skin_colour_id = G.id INNER JOIN gender AS B ON A.gender_id = B.id INNER JOIN publisher AS C ON A.publisher_id = C.id WHERE B.gender = 'Female' AND C.publisher_name = 'Dark Horse Comics'",
    "781": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'",
    "801": "SELECT CAST(SUM(T1.gender_id = 1) AS REAL) / SUM(T1.gender_id = 2) FROM superhero AS T1 WHERE T1.gender_id IN (SELECT T2.id FROM gender AS T2 WHERE T2.gender IN ('Male', 'Female'))",
    "824": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC",
    "829": "SELECT ABS(dc_count - marvel_count) AS difference FROM (SELECT (SELECT COUNT(*) FROM superhero AS s INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') AS dc_count, (SELECT COUNT(*) FROM superhero AS s INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS marvel_count)",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
    "840": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Aquababy'",
    "846": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 AND T2.q1 IS NOT NULL;",
    "855": "SELECT T2.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit'",
    "864": "SELECT COUNT(T3.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId INNER JOIN status AS T4 ON T2.statusId = T4.statusId WHERE T1.date = '2015-11-29' AND T4.status = 'Finished'",
    "888": "SELECT T1.country, T1.name, T1.location FROM circuits T1 INNER JOIN races T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'European Grand Prix' ORDER BY T2.year ASC LIMIT 1;",
    "898": "SELECT (strftime('%Y', 'now') - strftime('%Y', drivers.dob)) AS age, drivers.forename ,  drivers.surname AS name FROM drivers WHERE nationality = 'Japanese' ORDER BY drivers.dob DESC LIMIT 1;",
    "899": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%Y', T2.date) BETWEEN '1990' AND '2000' GROUP BY T1.circuitId HAVING COUNT(T2.raceId) = 4",
    "922": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.location = 'Abu Dhabi'",
    "928": "SELECT D.driverRef FROM races R INNER JOIN results RS ON R.raceId = RS.raceId INNER JOIN drivers D ON RS.driverId = D.driverId WHERE R.name = 'Canadian Grand Prix' AND R.year = 2007 AND RS.rank = 1;",
    "935": "SELECT COUNT(DISTINCT results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN status ON results.statusId = status.statusId WHERE (status.status = 'Finished' OR status.status LIKE '+%Lap%') AND races.name = 'Australian Grand Prix' AND races.year = 2008",
    "938": "SELECT drivers.forename, drivers.surname, drivers.url FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE races.name = 'Australian Grand Prix' AND races.year = 2008 AND results.positionOrder = 1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'",
    "970": "SELECT drivers.driverId FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'German' AND STRFTIME('%Y', drivers.dob) BETWEEN '1980' AND '1990' AND lapTimes.time IS NOT NULL GROUP BY drivers.driverId ORDER BY MIN(lapTimes.time) LIMIT 3;",
    "985": "SELECT lapTimes.driverId FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId WHERE races.name = 'French Grand Prix' AND lapTimes.lap = 3 ORDER BY lapTimes.time DESC LIMIT 1",
    "987": "SELECT AVG(CAST(results.fastestLapTime AS REAL)) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.position <= 5 AND races.year = 2006 AND races.name = 'United States Grand Prix'",
    "1004": "SELECT T1.forename, T1.surname, SUM(T2.wins) AS total_wins FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN ( SELECT driverId FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1 ) AS oldest_driver ON T1.driverId = oldest_driver.driverId GROUP BY T1.forename, T1.surname;",
    "1039": "SELECT CAST(SUM(T2.long_shots) AS REAL) / COUNT(T2.player_fifa_api_id) AS avg_long_shots FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag'",
    "1042": "SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal)",
    "1048": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'",
    "1056": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Netherlands'",
    "1082": "SELECT League.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany'",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', 'now') - strftime('%Y', birthday) >= 35",
    "1145": "SELECT L.name FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE M.season = '2015/2016' GROUP BY L.name ORDER BY COUNT(M.id) DESC LIMIT 4",
    "1157": "SELECT T2.ID, T2.SEX, T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 2",
    "1173": "SELECT T2.Diagnosis, COUNT(T2.Diagnosis) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS' AND `First Date` IS NOT NULL ORDER BY `First Date` LIMIT 1",
    "1200": "SELECT CAST(SUM(CASE WHEN E.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS proportion FROM Examination AS E WHERE E.Symptoms LIKE '%thrombocytopenia%'",
    "1218": "SELECT (COUNT(CASE WHEN T2.UA > 6.5 THEN 1 END) * 100.0) / COUNT(*) AS percentage FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'",
    "1224": "SELECT L.ID, P.SEX, P.Birthday FROM Laboratory AS L INNER JOIN Patient AS P ON L.ID = P.ID ORDER BY L.`T-BIL` DESC LIMIT 1;",
    "1235": "SELECT T1.Diagnosis, T1.ID, CAST(STRFTIME('%Y', 'now') AS INTEGER) - CAST(STRFTIME('%Y', T1.Birthday) AS INTEGER) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5",
    "1271": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('negative','0') AND strftime('%Y', T1.`First Date`) < '2000'",
    "1272": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SSA NOT IN ('negative', '0') AND T2.`First Date` IS NOT NULL ORDER BY T2.`First Date` LIMIT 1",
    "1279": "SELECT (COUNT(L1.ID) * 1.0 / Total_Count) * 100 AS percentage FROM Laboratory AS L1 INNER JOIN Patient AS P1 ON L1.ID = P1.ID CROSS JOIN (SELECT COUNT(L2.ID) AS Total_Count FROM Laboratory AS L2 WHERE L2.GOT >= 60) AS Subquery WHERE L1.GOT >= 60 AND P1.Diagnosis = 'SLE';",
    "1280": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60",
    "1286": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ALP >= 300 AND T2.Admission = '+'",
    "1302": "SELECT COUNT(*) FROM Laboratory INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.CPK < 250 AND (Examination.KCT = '+' OR Examination.RVVT = '+' OR Examination.LAC = '+')",
    "1313": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'",
    "1355": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "1368": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1",
    "1409": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
    "1514": "SELECT DISTINCT T2.Currency FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'",
    "1518": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'",
    "1523": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = 667467"
}