"""schema linking few-shot examples from the BIRD train set

BIRD Train data used under the CC BY-NC 4.0 license

Li, J., Hui, B., Qu, G., Yang, J., Li, B., Li, B., Wang, B., Qin, B., Geng, R., Huo, N., et al. (2024).
Can LLM already serve as a database interface? A big bench for large-scale database grounded text-to-SQLs.
Advances in Neural Information Processing Systems, 36.
"""

SCHEMA_LINKING_EXAMPLES = [
    {
        "db_id": "beer_factory",
        "question": "What is the average review given by a subscriber?",
        "evidence": "average review = AVG(StarRating); subscriber refers to SubscribedToEmailList = 'TRUE';",
        "SQL": "SELECT AVG(T2.StarRating) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.SubscribedToEmailList = 'TRUE'",
        "answer": {"customers": ["CustomerID", "SubscribedToEmailList"], "rootbeerreview": "keep_all"},
        "schema_descriptions": {
            "basic_types_relations": "table 'customers' with columns: CustomerID (INTEGER) , First (TEXT) , Last (TEXT) , StreetAddress (TEXT) , City (TEXT) , State (TEXT) , ZipCode (INTEGER) , Email (TEXT) , PhoneNumber (TEXT) , FirstPurchaseDate (DATE) , SubscribedToEmailList (TEXT) , Gender (TEXT)\ntable 'geolocation' with columns: LocationID (INTEGER) , Latitude (REAL) , Longitude (REAL)\ntable 'location' with columns: LocationID (INTEGER) , LocationName (TEXT) , StreetAddress (TEXT) , City (TEXT) , State (TEXT) , ZipCode (INTEGER)\ntable 'rootbeerbrand' with columns: BrandID (INTEGER) , BrandName (TEXT) , FirstBrewedYear (INTEGER) , BreweryName (TEXT) , City (TEXT) , State (TEXT) , Country (TEXT) , Description (TEXT) , CaneSugar (TEXT) , CornSyrup (TEXT) , Honey (TEXT) , ArtificialSweetener (TEXT) , Caffeinated (TEXT) , Alcoholic (TEXT) , AvailableInCans (TEXT) , AvailableInBottles (TEXT) , AvailableInKegs (TEXT) , Website (TEXT) , FacebookPage (TEXT) , Twitter (TEXT) , WholesaleCost (REAL) , CurrentRetailPrice (REAL)\ntable 'rootbeer' with columns: RootBeerID (INTEGER) , BrandID (INTEGER) , ContainerType (TEXT) , LocationID (INTEGER) , PurchaseDate (DATE)\ntable 'rootbeerreview' with columns: CustomerID (INTEGER) , BrandID (INTEGER) , StarRating (INTEGER) , ReviewDate (DATE) , Review (TEXT)\ntable 'transaction' with columns: TransactionID (INTEGER) , CreditCardNumber (INTEGER) , CustomerID (INTEGER) , TransactionDate (DATE) , CreditCardType (TEXT) , LocationID (INTEGER) , RootBeerID (INTEGER) , PurchasePrice (REAL)\n\nRelations:\ngeolocation.LocationID -> location.LocationID\nlocation.LocationID -> geolocation.LocationID\nrootbeer.BrandID -> rootbeerbrand.BrandID\nrootbeer.LocationID -> geolocation.LocationID\nrootbeerreview.BrandID -> rootbeerbrand.BrandID\nrootbeerreview.CustomerID -> customers.CustomerID\ntransaction.RootBeerID -> rootbeer.RootBeerID\ntransaction.LocationID -> location.LocationID\ntransaction.CustomerID -> customers.CustomerID",
            "basic_basic": "table 'customers' with columns: CustomerID , First , Last , StreetAddress , City , State , ZipCode , Email , PhoneNumber , FirstPurchaseDate , SubscribedToEmailList , Gender\ntable 'geolocation' with columns: LocationID , Latitude , Longitude\ntable 'location' with columns: LocationID , LocationName , StreetAddress , City , State , ZipCode\ntable 'rootbeerbrand' with columns: BrandID , BrandName , FirstBrewedYear , BreweryName , City , State , Country , Description , CaneSugar , CornSyrup , Honey , ArtificialSweetener , Caffeinated , Alcoholic , AvailableInCans , AvailableInBottles , AvailableInKegs , Website , FacebookPage , Twitter , WholesaleCost , CurrentRetailPrice\ntable 'rootbeer' with columns: RootBeerID , BrandID , ContainerType , LocationID , PurchaseDate\ntable 'rootbeerreview' with columns: CustomerID , BrandID , StarRating , ReviewDate , Review\ntable 'transaction' with columns: TransactionID , CreditCardNumber , CustomerID , TransactionDate , CreditCardType , LocationID , RootBeerID , PurchasePrice",
            "json_raw": '{\n  "tables": {\n    "customers": {\n      "columns": {\n        "CustomerID": "INTEGER",\n        "First": "TEXT",\n        "Last": "TEXT",\n        "StreetAddress": "TEXT",\n        "City": "TEXT",\n        "State": "TEXT",\n        "ZipCode": "INTEGER",\n        "Email": "TEXT",\n        "PhoneNumber": "TEXT",\n        "FirstPurchaseDate": "DATE",\n        "SubscribedToEmailList": "TEXT",\n        "Gender": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "CustomerID"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "geolocation": {\n      "columns": {\n        "LocationID": "INTEGER",\n        "Latitude": "REAL",\n        "Longitude": "REAL"\n      },\n      "keys": {\n        "primary_key": [\n          "LocationID"\n        ]\n      },\n      "foreign_keys": {\n        "LocationID": {\n          "referenced_table": "location",\n          "referenced_column": "LocationID"\n        }\n      }\n    },\n    "location": {\n      "columns": {\n        "LocationID": "INTEGER",\n        "LocationName": "TEXT",\n        "StreetAddress": "TEXT",\n        "City": "TEXT",\n        "State": "TEXT",\n        "ZipCode": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "LocationID"\n        ]\n      },\n      "foreign_keys": {\n        "LocationID": {\n          "referenced_table": "geolocation",\n          "referenced_column": "LocationID"\n        }\n      }\n    },\n    "rootbeerbrand": {\n      "columns": {\n        "BrandID": "INTEGER",\n        "BrandName": "TEXT",\n        "FirstBrewedYear": "INTEGER",\n        "BreweryName": "TEXT",\n        "City": "TEXT",\n        "State": "TEXT",\n        "Country": "TEXT",\n        "Description": "TEXT",\n        "CaneSugar": "TEXT",\n        "CornSyrup": "TEXT",\n        "Honey": "TEXT",\n        "ArtificialSweetener": "TEXT",\n        "Caffeinated": "TEXT",\n        "Alcoholic": "TEXT",\n        "AvailableInCans": "TEXT",\n        "AvailableInBottles": "TEXT",\n        "AvailableInKegs": "TEXT",\n        "Website": "TEXT",\n        "FacebookPage": "TEXT",\n        "Twitter": "TEXT",\n        "WholesaleCost": "REAL",\n        "CurrentRetailPrice": "REAL"\n      },\n      "keys": {\n        "primary_key": [\n          "BrandID"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "rootbeer": {\n      "columns": {\n        "RootBeerID": "INTEGER",\n        "BrandID": "INTEGER",\n        "ContainerType": "TEXT",\n        "LocationID": "INTEGER",\n        "PurchaseDate": "DATE"\n      },\n      "keys": {\n        "primary_key": [\n          "RootBeerID"\n        ]\n      },\n      "foreign_keys": {\n        "BrandID": {\n          "referenced_table": "rootbeerbrand",\n          "referenced_column": "BrandID"\n        },\n        "LocationID": {\n          "referenced_table": "geolocation",\n          "referenced_column": "LocationID"\n        }\n      }\n    },\n    "rootbeerreview": {\n      "columns": {\n        "CustomerID": "INTEGER",\n        "BrandID": "INTEGER",\n        "StarRating": "INTEGER",\n        "ReviewDate": "DATE",\n        "Review": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "BrandID"\n        ]\n      },\n      "foreign_keys": {\n        "BrandID": {\n          "referenced_table": "rootbeerbrand",\n          "referenced_column": "BrandID"\n        },\n        "CustomerID": {\n          "referenced_table": "customers",\n          "referenced_column": "CustomerID"\n        }\n      }\n    },\n    "transaction": {\n      "columns": {\n        "TransactionID": "INTEGER",\n        "CreditCardNumber": "INTEGER",\n        "CustomerID": "INTEGER",\n        "TransactionDate": "DATE",\n        "CreditCardType": "TEXT",\n        "LocationID": "INTEGER",\n        "RootBeerID": "INTEGER",\n        "PurchasePrice": "REAL"\n      },\n      "keys": {\n        "primary_key": [\n          "TransactionID"\n        ]\n      },\n      "foreign_keys": {\n        "RootBeerID": {\n          "referenced_table": "rootbeer",\n          "referenced_column": "RootBeerID"\n        },\n        "LocationID": {\n          "referenced_table": "location",\n          "referenced_column": "LocationID"\n        },\n        "CustomerID": {\n          "referenced_table": "customers",\n          "referenced_column": "CustomerID"\n        }\n      }\n    }\n  }\n}',
            "sqlalchemy_tables": "from sqlalchemy import Column, Date, ForeignKey, Integer, MetaData, REAL, Table, Text\n\nmetadata = MetaData()\n\n\nt_customers = Table(\n    'customers', metadata,\n    Column('CustomerID', Integer, primary_key=True),\n    Column('First', Text),\n    Column('Last', Text),\n    Column('StreetAddress', Text),\n    Column('City', Text),\n    Column('State', Text),\n    Column('ZipCode', Integer),\n    Column('Email', Text),\n    Column('PhoneNumber', Text),\n    Column('FirstPurchaseDate', Date),\n    Column('SubscribedToEmailList', Text),\n    Column('Gender', Text)\n)\n\nt_geolocation = Table(\n    'geolocation', metadata,\n    Column('LocationID', ForeignKey('location.LocationID'), primary_key=True),\n    Column('Latitude', REAL),\n    Column('Longitude', REAL)\n)\n\nt_location = Table(\n    'location', metadata,\n    Column('LocationID', ForeignKey('geolocation.LocationID'), primary_key=True),\n    Column('LocationName', Text),\n    Column('StreetAddress', Text),\n    Column('City', Text),\n    Column('State', Text),\n    Column('ZipCode', Integer)\n)\n\nt_rootbeerbrand = Table(\n    'rootbeerbrand', metadata,\n    Column('BrandID', Integer, primary_key=True),\n    Column('BrandName', Text),\n    Column('FirstBrewedYear', Integer),\n    Column('BreweryName', Text),\n    Column('City', Text),\n    Column('State', Text),\n    Column('Country', Text),\n    Column('Description', Text),\n    Column('CaneSugar', Text),\n    Column('CornSyrup', Text),\n    Column('Honey', Text),\n    Column('ArtificialSweetener', Text),\n    Column('Caffeinated', Text),\n    Column('Alcoholic', Text),\n    Column('AvailableInCans', Text),\n    Column('AvailableInBottles', Text),\n    Column('AvailableInKegs', Text),\n    Column('Website', Text),\n    Column('FacebookPage', Text),\n    Column('Twitter', Text),\n    Column('WholesaleCost', REAL),\n    Column('CurrentRetailPrice', REAL)\n)\n\nt_rootbeer = Table(\n    'rootbeer', metadata,\n    Column('RootBeerID', Integer, primary_key=True),\n    Column('BrandID', ForeignKey('rootbeerbrand.BrandID')),\n    Column('ContainerType', Text),\n    Column('LocationID', ForeignKey('location.LocationID'), ForeignKey('geolocation.LocationID')),\n    Column('PurchaseDate', Date)\n)\n\nt_rootbeerreview = Table(\n    'rootbeerreview', metadata,\n    Column('CustomerID', ForeignKey('customers.CustomerID'), primary_key=True),\n    Column('BrandID', ForeignKey('rootbeerbrand.BrandID'), primary_key=True),\n    Column('StarRating', Integer),\n    Column('ReviewDate', Date),\n    Column('Review', Text)\n)\n\nt_transaction = Table(\n    'transaction', metadata,\n    Column('TransactionID', Integer, primary_key=True),\n    Column('CreditCardNumber', Integer),\n    Column('CustomerID', ForeignKey('customers.CustomerID')),\n    Column('TransactionDate', Date),\n    Column('CreditCardType', Text),\n    Column('LocationID', ForeignKey('location.LocationID')),\n    Column('RootBeerID', ForeignKey('rootbeer.RootBeerID')),\n    Column('PurchasePrice', REAL)\n)\n",
            "datagrip": "beer_factory schema:\n    + tables\n        customers: table\n            + columns\n                CustomerID: INTEGER\n                First: TEXT\n                Last: TEXT\n                StreetAddress: TEXT\n                City: TEXT\n                State: TEXT\n                ZipCode: INTEGER\n                Email: TEXT\n                PhoneNumber: TEXT\n                FirstPurchaseDate: DATE\n                SubscribedToEmailList: TEXT\n                Gender: TEXT\n            + keys\n                customers_pk: PK (CustomerID)\n\n        geolocation: table\n            + columns\n                LocationID: INTEGER\n                Latitude: REAL\n                Longitude: REAL\n            + keys\n                geolocation_pk: PK (LocationID)\n            + foreign-keys\n                geolocation_LocationID_fk: foreign key (LocationID) -> location[.location_pk] (LocationID)\n\n        location: table\n            + columns\n                LocationID: INTEGER\n                LocationName: TEXT\n                StreetAddress: TEXT\n                City: TEXT\n                State: TEXT\n                ZipCode: INTEGER\n            + keys\n                location_pk: PK (LocationID)\n            + foreign-keys\n                location_LocationID_fk: foreign key (LocationID) -> geolocation[.geolocation_pk] (LocationID)\n\n        rootbeerbrand: table\n            + columns\n                BrandID: INTEGER\n                BrandName: TEXT\n                FirstBrewedYear: INTEGER\n                BreweryName: TEXT\n                City: TEXT\n                State: TEXT\n                Country: TEXT\n                Description: TEXT\n                CaneSugar: TEXT\n                CornSyrup: TEXT\n                Honey: TEXT\n                ArtificialSweetener: TEXT\n                Caffeinated: TEXT\n                Alcoholic: TEXT\n                AvailableInCans: TEXT\n                AvailableInBottles: TEXT\n                AvailableInKegs: TEXT\n                Website: TEXT\n                FacebookPage: TEXT\n                Twitter: TEXT\n                WholesaleCost: REAL\n                CurrentRetailPrice: REAL\n            + keys\n                rootbeerbrand_pk: PK (BrandID)\n\n        rootbeer: table\n            + columns\n                RootBeerID: INTEGER\n                BrandID: INTEGER\n                ContainerType: TEXT\n                LocationID: INTEGER\n                PurchaseDate: DATE\n            + keys\n                rootbeer_pk: PK (RootBeerID)\n            + foreign-keys\n                rootbeer_BrandID_fk: foreign key (BrandID) -> rootbeerbrand[.rootbeerbrand_pk] (BrandID)\n                rootbeer_LocationID_fk: foreign key (LocationID) -> geolocation[.geolocation_pk] (LocationID)\n\n        rootbeerreview: table\n            + columns\n                CustomerID: INTEGER\n                BrandID: INTEGER\n                StarRating: INTEGER\n                ReviewDate: DATE\n                Review: TEXT\n            + keys\n                rootbeerreview_pk: PK (BrandID)\n            + foreign-keys\n                rootbeerreview_BrandID_fk: foreign key (BrandID) -> rootbeerbrand[.rootbeerbrand_pk] (BrandID)\n                rootbeerreview_CustomerID_fk: foreign key (CustomerID) -> customers[.customers_pk] (CustomerID)\n\n        transaction: table\n            + columns\n                TransactionID: INTEGER\n                CreditCardNumber: INTEGER\n                CustomerID: INTEGER\n                TransactionDate: DATE\n                CreditCardType: TEXT\n                LocationID: INTEGER\n                RootBeerID: INTEGER\n                PurchasePrice: REAL\n            + keys\n                transaction_pk: PK (TransactionID)\n            + foreign-keys\n                transaction_RootBeerID_fk: foreign key (RootBeerID) -> rootbeer[.rootbeer_pk] (RootBeerID)\n                transaction_LocationID_fk: foreign key (LocationID) -> location[.location_pk] (LocationID)\n                transaction_CustomerID_fk: foreign key (CustomerID) -> customers[.customers_pk] (CustomerID)\n",
            "basic_relations": "table 'customers' with columns: CustomerID , First , Last , StreetAddress , City , State , ZipCode , Email , PhoneNumber , FirstPurchaseDate , SubscribedToEmailList , Gender\ntable 'geolocation' with columns: LocationID , Latitude , Longitude\ntable 'location' with columns: LocationID , LocationName , StreetAddress , City , State , ZipCode\ntable 'rootbeerbrand' with columns: BrandID , BrandName , FirstBrewedYear , BreweryName , City , State , Country , Description , CaneSugar , CornSyrup , Honey , ArtificialSweetener , Caffeinated , Alcoholic , AvailableInCans , AvailableInBottles , AvailableInKegs , Website , FacebookPage , Twitter , WholesaleCost , CurrentRetailPrice\ntable 'rootbeer' with columns: RootBeerID , BrandID , ContainerType , LocationID , PurchaseDate\ntable 'rootbeerreview' with columns: CustomerID , BrandID , StarRating , ReviewDate , Review\ntable 'transaction' with columns: TransactionID , CreditCardNumber , CustomerID , TransactionDate , CreditCardType , LocationID , RootBeerID , PurchasePrice\n\nRelations:\ngeolocation.LocationID -> location.LocationID\nlocation.LocationID -> geolocation.LocationID\nrootbeer.BrandID -> rootbeerbrand.BrandID\nrootbeer.LocationID -> geolocation.LocationID\nrootbeerreview.BrandID -> rootbeerbrand.BrandID\nrootbeerreview.CustomerID -> customers.CustomerID\ntransaction.RootBeerID -> rootbeer.RootBeerID\ntransaction.LocationID -> location.LocationID\ntransaction.CustomerID -> customers.CustomerID",
            "sql": "beer_factory CREATE messages:\n\nCREATE TABLE customers (\n    CustomerID INTEGER\n    First TEXT\n    Last TEXT\n    StreetAddress TEXT\n    City TEXT\n    State TEXT\n    ZipCode INTEGER\n    Email TEXT\n    PhoneNumber TEXT\n    FirstPurchaseDate DATE\n    SubscribedToEmailList TEXT\n    Gender TEXT\n,\n    PRIMARY KEY (CustomerID)\n);\n\nCREATE TABLE geolocation (\n    LocationID INTEGER\n    Latitude REAL\n    Longitude REAL\n,\n    PRIMARY KEY (LocationID)\n    FOREIGN KEY (LocationID) REFERENCES location (LocationID)\n);\n\nCREATE TABLE location (\n    LocationID INTEGER\n    LocationName TEXT\n    StreetAddress TEXT\n    City TEXT\n    State TEXT\n    ZipCode INTEGER\n,\n    PRIMARY KEY (LocationID)\n    FOREIGN KEY (LocationID) REFERENCES geolocation (LocationID)\n);\n\nCREATE TABLE rootbeerbrand (\n    BrandID INTEGER\n    BrandName TEXT\n    FirstBrewedYear INTEGER\n    BreweryName TEXT\n    City TEXT\n    State TEXT\n    Country TEXT\n    Description TEXT\n    CaneSugar TEXT\n    CornSyrup TEXT\n    Honey TEXT\n    ArtificialSweetener TEXT\n    Caffeinated TEXT\n    Alcoholic TEXT\n    AvailableInCans TEXT\n    AvailableInBottles TEXT\n    AvailableInKegs TEXT\n    Website TEXT\n    FacebookPage TEXT\n    Twitter TEXT\n    WholesaleCost REAL\n    CurrentRetailPrice REAL\n,\n    PRIMARY KEY (BrandID)\n);\n\nCREATE TABLE rootbeer (\n    RootBeerID INTEGER\n    BrandID INTEGER\n    ContainerType TEXT\n    LocationID INTEGER\n    PurchaseDate DATE\n,\n    PRIMARY KEY (RootBeerID)\n    FOREIGN KEY (BrandID) REFERENCES rootbeerbrand (BrandID)\n    FOREIGN KEY (LocationID) REFERENCES geolocation (LocationID)\n);\n\nCREATE TABLE rootbeerreview (\n    CustomerID INTEGER\n    BrandID INTEGER\n    StarRating INTEGER\n    ReviewDate DATE\n    Review TEXT\n,\n    PRIMARY KEY (BrandID)\n    FOREIGN KEY (BrandID) REFERENCES rootbeerbrand (BrandID)\n    FOREIGN KEY (CustomerID) REFERENCES customers (CustomerID)\n);\n\nCREATE TABLE transaction (\n    TransactionID INTEGER\n    CreditCardNumber INTEGER\n    CustomerID INTEGER\n    TransactionDate DATE\n    CreditCardType TEXT\n    LocationID INTEGER\n    RootBeerID INTEGER\n    PurchasePrice REAL\n,\n    PRIMARY KEY (TransactionID)\n    FOREIGN KEY (RootBeerID) REFERENCES rootbeer (RootBeerID)\n    FOREIGN KEY (LocationID) REFERENCES location (LocationID)\n    FOREIGN KEY (CustomerID) REFERENCES customers (CustomerID)\n);\n",
            "m_schema": "【DB_ID】 beer_factory\n【Schema】\n# Table: customers\n[\n(CustomerID:INTEGER, Primary Key, Examples: [101811, 103508, 104939]),\n(First:TEXT, Examples: [Kenneth, Madeleine, Damen]),\n(Last:TEXT, Examples: [Walton, Jones, Wheeler]),\n(StreetAddress:TEXT, Examples: [6715 Commonwealth Dr, 3603 Leola Way, 6740 Branwood Way]),\n(City:TEXT, Examples: [Sacramento, Orangevale, Folsom]),\n(State:TEXT, Examples: [CA]),\n(ZipCode:INTEGER, Examples: [94256, 94258, 95662]),\n(Email:TEXT),\n(PhoneNumber:TEXT, Examples: [(916) 918-1561, (916) 186-9423, (916) 164-1156]),\n(FirstPurchaseDate:DATE, Examples: [2013-05-30]),\n(SubscribedToEmailList:TEXT, Examples: [FALSE, TRUE]),\n(Gender:TEXT, Examples: [M, F])\n]\n# Table: transaction\n[\n(TransactionID:INTEGER, Primary Key, Examples: [100000, 100001, 100002]),\n(CreditCardNumber:INTEGER, Examples: [6011583832864739, 4716634257568793, 5597608517846968]),\n(CustomerID:INTEGER, Examples: [864896, 610766, 207846]),\n(TransactionDate:DATE, Examples: [2014-07-07]),\n(CreditCardType:TEXT, Examples: [Discover, Visa, MasterCard]),\n(LocationID:INTEGER, Examples: [2, 1]),\n(RootBeerID:INTEGER, Examples: [105661, 105798, 102514]),\n(PurchasePrice:REAL, Examples: [3.0, 1.0])\n]\n# Table: geolocation\n[\n(LocationID:INTEGER, Primary Key, Examples: [0, 1, 2]),\n(Latitude:REAL, Examples: [0.0, 38.566129, 38.559615]),\n(Longitude:REAL, Examples: [0.0, -121.426432, -121.42243])\n]\n# Table: rootbeerbrand\n[\n(BrandID:INTEGER, Primary Key, Examples: [10001, 10002, 10003]),\n(BrandName:TEXT, Examples: [A&W, A.J. Stephans, Abita]),\n(FirstBrewedYear:INTEGER, Examples: [1919, 1926, 1986]),\n(BreweryName:TEXT, Examples: [Dr Pepper Snapple Group]),\n(City:TEXT, Examples: [Lodi, Fall River, Covington]),\n(State:TEXT, Examples: [CA, MA, LA]),\n(Country:TEXT, Examples: [United States, Australia]),\n(Description:TEXT),\n(CaneSugar:TEXT, Examples: [FALSE, TRUE]),\n(CornSyrup:TEXT, Examples: [TRUE, FALSE]),\n(Honey:TEXT, Examples: [FALSE, TRUE]),\n(ArtificialSweetener:TEXT, Examples: [FALSE, TRUE]),\n(Caffeinated:TEXT, Examples: [FALSE, TRUE]),\n(Alcoholic:TEXT, Examples: [FALSE]),\n(AvailableInCans:TEXT, Examples: [TRUE, FALSE]),\n(AvailableInBottles:TEXT, Examples: [FALSE, TRUE]),\n(AvailableInKegs:TEXT, Examples: [FALSE, TRUE]),\n(Website:TEXT),\n(FacebookPage:TEXT),\n(Twitter:TEXT),\n(WholesaleCost:REAL, Examples: [0.42, 0.98, 1.13]),\n(CurrentRetailPrice:REAL, Examples: [1.0, 3.0, 44.0])\n]\n# Table: rootbeer\n[\n(RootBeerID:INTEGER, Primary Key, Examples: [100000, 100001, 100002]),\n(BrandID:INTEGER, Examples: [10001, 10002, 10003]),\n(ContainerType:TEXT, Examples: [Bottle, Can]),\n(LocationID:INTEGER, Examples: [1, 2]),\n(PurchaseDate:DATE, Examples: [2015-07-03])\n]\n# Table: location\n[\n(LocationID:INTEGER, Primary Key, Examples: [0, 1, 2]),\n(LocationName:TEXT, Examples: [LOST]),\n(StreetAddress:TEXT, Examples: [6000 J St]),\n(City:TEXT, Examples: [Sacramento]),\n(State:TEXT, Examples: [CA]),\n(ZipCode:INTEGER, Examples: [95819])\n]\n# Table: rootbeerreview\n[\n(CustomerID:INTEGER, Primary Key, Examples: [101811, 105549, 105771]),\n(BrandID:INTEGER, Primary Key, Examples: [10012, 10014, 10015]),\n(StarRating:INTEGER, Examples: [5, 1, 3]),\n(ReviewDate:DATE, Examples: [2013-07-15]),\n(Review:TEXT)\n]\n【Foreign keys】\ntransaction.CustomerID=customers.CustomerID\ntransaction.LocationID=location.LocationID\ntransaction.RootBeerID=rootbeer.RootBeerID\ngeolocation.LocationID=location.LocationID\nrootbeer.LocationID=geolocation.LocationID\nrootbeer.LocationID=location.LocationID\nrootbeer.BrandID=rootbeerbrand.BrandID\nlocation.LocationID=geolocation.LocationID\nrootbeerreview.CustomerID=customers.CustomerID\nrootbeerreview.BrandID=rootbeerbrand.BrandID",
            "basic_types": "table 'customers' with columns: CustomerID (INTEGER) , First (TEXT) , Last (TEXT) , StreetAddress (TEXT) , City (TEXT) , State (TEXT) , ZipCode (INTEGER) , Email (TEXT) , PhoneNumber (TEXT) , FirstPurchaseDate (DATE) , SubscribedToEmailList (TEXT) , Gender (TEXT)\ntable 'geolocation' with columns: LocationID (INTEGER) , Latitude (REAL) , Longitude (REAL)\ntable 'location' with columns: LocationID (INTEGER) , LocationName (TEXT) , StreetAddress (TEXT) , City (TEXT) , State (TEXT) , ZipCode (INTEGER)\ntable 'rootbeerbrand' with columns: BrandID (INTEGER) , BrandName (TEXT) , FirstBrewedYear (INTEGER) , BreweryName (TEXT) , City (TEXT) , State (TEXT) , Country (TEXT) , Description (TEXT) , CaneSugar (TEXT) , CornSyrup (TEXT) , Honey (TEXT) , ArtificialSweetener (TEXT) , Caffeinated (TEXT) , Alcoholic (TEXT) , AvailableInCans (TEXT) , AvailableInBottles (TEXT) , AvailableInKegs (TEXT) , Website (TEXT) , FacebookPage (TEXT) , Twitter (TEXT) , WholesaleCost (REAL) , CurrentRetailPrice (REAL)\ntable 'rootbeer' with columns: RootBeerID (INTEGER) , BrandID (INTEGER) , ContainerType (TEXT) , LocationID (INTEGER) , PurchaseDate (DATE)\ntable 'rootbeerreview' with columns: CustomerID (INTEGER) , BrandID (INTEGER) , StarRating (INTEGER) , ReviewDate (DATE) , Review (TEXT)\ntable 'transaction' with columns: TransactionID (INTEGER) , CreditCardNumber (INTEGER) , CustomerID (INTEGER) , TransactionDate (DATE) , CreditCardType (TEXT) , LocationID (INTEGER) , RootBeerID (INTEGER) , PurchasePrice (REAL)",
            "mac_schema": "# Table: customers\n[\n  (CustomerID, customer id.),\n  (First, first name. Value examples: ['Scott', 'Joyce', 'John', 'Bob', 'Mildred', 'Mike'].),\n  (Last, last name. Value examples: ['Anderson', 'Thomas', 'Smith', 'Ryan', 'Ross', 'Oliver'].),\n  (StreetAddress, street address. Value examples: ['9978 Glenleigh Ct', '9977 Twin Trails Dr', '9938 Longridge Way', '993 Lomax Ct', '9907 Dutton Way', '99 Rushden Dr'].),\n  (City, City. Value examples: ['Sacramento', 'Elk Grove', 'Folsom', 'Citrus Heights', 'Rancho Cordova', 'Carmichael'].),\n  (State, State. Value examples: ['CA'].),\n  (ZipCode, zip code.),\n  (Email, Email.),\n  (PhoneNumber, phone number. Value examples: ['(916) 996-4789', '(916) 994-3095', '(916) 992-8425', '(916) 992-5021', '(916) 992-2365', '(916) 992-1299'].),\n  (FirstPurchaseDate, first purchase date. Value examples: ['2012-07-03'].),\n  (SubscribedToEmailList, subscribed to email list. Value examples: ['TRUE', 'FALSE'].),\n  (Gender, Gender. Value examples: ['M', 'F'].)\n]\n# Table: geolocation\n[\n  (LocationID, location id.),\n  (Latitude, Latitude. Value examples: [38.566129, 38.559615, 0.0].),\n  (Longitude, Longitude. Value examples: [0.0, -121.42243, -121.426432].)\n]\n# Table: location\n[\n  (LocationID, location id.),\n  (LocationName, location name. Value examples: ['Sac State Union', 'Sac State American River Courtyard', 'LOST'].),\n  (StreetAddress, street address. Value examples: [None, '6000 J St'].),\n  (City, City. Value examples: [None, 'Sacramento'].),\n  (State, State. Value examples: [None, 'CA'].),\n  (ZipCode, zip code. Value examples: [None, 95819].)\n]\n# Table: rootbeerbrand\n[\n  (BrandID, brand id.),\n  (BrandName, brand name. Value examples: [\"Virgil's\", 'Thomas Kemper', 'Sprecher', \"Sparky's Fresh Draft\", 'River City', 'Mug'].),\n  (FirstBrewedYear, first brewed year.),\n  (BreweryName, brewery name. Value examples: ['Dr Pepper Snapple Group', 'Thomas Kemper Soda', \"The Dad's Root Beer Company \", 'Stewarts', 'Sprecher Brewery', 'Shipyard Brewing Company'].),\n  (City, City. Value examples: [None, 'Chicago', 'St. Louis', 'Portland', 'San Francisco', 'Sacramento', 'Port Angeles'].),\n  (State, State. Value examples: [None, 'CA', 'IL', 'WA', 'MO', 'LA', 'WI'].),\n  (Country, Country. Value examples: ['United States', 'Australia'].),\n  (Description, Description.),\n  (CaneSugar, cane sugar. Value examples: ['TRUE', 'FALSE'].),\n  (CornSyrup, corn syrup. Value examples: ['FALSE', 'TRUE'].),\n  (Honey, Honey. Value examples: ['FALSE', 'TRUE'].),\n  (ArtificialSweetener, artificial sweetener. Value examples: ['FALSE', 'TRUE'].),\n  (Caffeinated, Caffeinated. Value examples: ['FALSE', 'TRUE'].),\n  (Alcoholic, Alcoholic. Value examples: ['FALSE'].),\n  (AvailableInCans, available in cans. Value examples: ['FALSE', 'TRUE'].),\n  (AvailableInBottles, available in bottles. Value examples: ['TRUE', 'FALSE'].),\n  (AvailableInKegs, available in kegs. Value examples: ['FALSE', 'TRUE'].),\n  (Website, Website.),\n  (FacebookPage, facebook page.),\n  (Twitter, Twitter.),\n  (WholesaleCost, wholesale cost.),\n  (CurrentRetailPrice, current retail price. Value examples: [3.0, 1.0, 44.0].)\n]\n# Table: rootbeer\n[\n  (RootBeerID, root beer id.),\n  (BrandID, brandid.),\n  (ContainerType, container type. Value examples: ['Bottle', 'Can'].),\n  (LocationID, location id.),\n  (PurchaseDate, purchase date. Value examples: ['2015-08-05'].)\n]\n# Table: rootbeerreview\n[\n  (CustomerID, customer id.),\n  (BrandID, brand id.),\n  (StarRating, star rating. Value examples: [4, 2, 3, 5, 1].),\n  (ReviewDate, review date. Value examples: ['2013-09-18'].),\n  (Review, Review.)\n]\n# Table: transaction\n[\n  (TransactionID, transaction id.),\n  (CreditCardNumber, credit card number.),\n  (CustomerID, customer id.),\n  (TransactionDate, transaction date. Value examples: ['2015-10-01'].),\n  (CreditCardType, credit card type. Value examples: ['Visa', 'MasterCard', 'Discover', 'American Express'].),\n  (LocationID, location id.),\n  (RootBeerID, root beer id.),\n  (PurchasePrice, purchase price. Value examples: [3.0, 1.0].)\n]",
        },
    },
    {
        "db_id": "chicago_crime",
        "question": "Provide at least 5 ward office addresses associated with the crimes that happened in the community of Montclare.",
        "evidence": '"Montclare" is the community_area_name',
        "SQL": "SELECT T3.ward_office_address FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Ward AS T3 ON T2.ward_no = T3.ward_no WHERE T1.community_area_name = 'Montclare' GROUP BY T3.ward_office_address LIMIT 5",
        "answer": {
            "Crime": ["community_area_no", "ward_no"],
            "Community_Area": "keep_all",
            "Ward": ["ward_office_address", "ward_no"],
        },
        "schema_descriptions": {
            "basic_types_relations": "table 'Community_Area' with columns: community_area_no (INTEGER) , community_area_name (TEXT) , side (TEXT) , population (TEXT)\ntable 'District' with columns: district_no (INTEGER) , district_name (TEXT) , address (TEXT) , zip_code (INTEGER) , commander (TEXT) , email (TEXT) , phone (TEXT) , fax (TEXT) , tty (TEXT) , twitter (TEXT)\ntable 'FBI_Code' with columns: fbi_code_no (TEXT) , title (TEXT) , description (TEXT) , crime_against (TEXT)\ntable 'IUCR' with columns: iucr_no (TEXT) , primary_description (TEXT) , secondary_description (TEXT) , index_code (TEXT)\ntable 'Neighborhood' with columns: neighborhood_name (TEXT) , community_area_no (INTEGER)\ntable 'Ward' with columns: ward_no (INTEGER) , alderman_first_name (TEXT) , alderman_last_name (TEXT) , alderman_name_suffix (TEXT) , ward_office_address (TEXT) , ward_office_zip (TEXT) , ward_email (TEXT) , ward_office_phone (TEXT) , ward_office_fax (TEXT) , city_hall_office_room (INTEGER) , city_hall_office_phone (TEXT) , city_hall_office_fax (TEXT) , Population (INTEGER)\ntable 'Crime' with columns: report_no (INTEGER) , case_number (TEXT) , date (TEXT) , block (TEXT) , iucr_no (TEXT) , location_description (TEXT) , arrest (TEXT) , domestic (TEXT) , beat (INTEGER) , district_no (INTEGER) , ward_no (INTEGER) , community_area_no (INTEGER) , fbi_code_no (TEXT) , latitude (TEXT) , longitude (TEXT)\n\nRelations:\nNeighborhood.community_area_no -> Community_Area.community_area_no\nCrime.fbi_code_no -> FBI_Code.fbi_code_no\nCrime.community_area_no -> Community_Area.community_area_no\nCrime.district_no -> District.district_no\nCrime.iucr_no -> IUCR.iucr_no\nCrime.ward_no -> Ward.ward_no",
            "basic_basic": "table 'Community_Area' with columns: community_area_no , community_area_name , side , population\ntable 'District' with columns: district_no , district_name , address , zip_code , commander , email , phone , fax , tty , twitter\ntable 'FBI_Code' with columns: fbi_code_no , title , description , crime_against\ntable 'IUCR' with columns: iucr_no , primary_description , secondary_description , index_code\ntable 'Neighborhood' with columns: neighborhood_name , community_area_no\ntable 'Ward' with columns: ward_no , alderman_first_name , alderman_last_name , alderman_name_suffix , ward_office_address , ward_office_zip , ward_email , ward_office_phone , ward_office_fax , city_hall_office_room , city_hall_office_phone , city_hall_office_fax , Population\ntable 'Crime' with columns: report_no , case_number , date , block , iucr_no , location_description , arrest , domestic , beat , district_no , ward_no , community_area_no , fbi_code_no , latitude , longitude",
            "json_raw": '{\n  "tables": {\n    "Community_Area": {\n      "columns": {\n        "community_area_no": "INTEGER",\n        "community_area_name": "TEXT",\n        "side": "TEXT",\n        "population": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "community_area_no"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "District": {\n      "columns": {\n        "district_no": "INTEGER",\n        "district_name": "TEXT",\n        "address": "TEXT",\n        "zip_code": "INTEGER",\n        "commander": "TEXT",\n        "email": "TEXT",\n        "phone": "TEXT",\n        "fax": "TEXT",\n        "tty": "TEXT",\n        "twitter": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "district_no"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "FBI_Code": {\n      "columns": {\n        "fbi_code_no": "TEXT",\n        "title": "TEXT",\n        "description": "TEXT",\n        "crime_against": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "fbi_code_no"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "IUCR": {\n      "columns": {\n        "iucr_no": "TEXT",\n        "primary_description": "TEXT",\n        "secondary_description": "TEXT",\n        "index_code": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "iucr_no"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "Neighborhood": {\n      "columns": {\n        "neighborhood_name": "TEXT",\n        "community_area_no": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "neighborhood_name"\n        ]\n      },\n      "foreign_keys": {\n        "community_area_no": {\n          "referenced_table": "Community_Area",\n          "referenced_column": "community_area_no"\n        }\n      }\n    },\n    "Ward": {\n      "columns": {\n        "ward_no": "INTEGER",\n        "alderman_first_name": "TEXT",\n        "alderman_last_name": "TEXT",\n        "alderman_name_suffix": "TEXT",\n        "ward_office_address": "TEXT",\n        "ward_office_zip": "TEXT",\n        "ward_email": "TEXT",\n        "ward_office_phone": "TEXT",\n        "ward_office_fax": "TEXT",\n        "city_hall_office_room": "INTEGER",\n        "city_hall_office_phone": "TEXT",\n        "city_hall_office_fax": "TEXT",\n        "Population": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "ward_no"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "Crime": {\n      "columns": {\n        "report_no": "INTEGER",\n        "case_number": "TEXT",\n        "date": "TEXT",\n        "block": "TEXT",\n        "iucr_no": "TEXT",\n        "location_description": "TEXT",\n        "arrest": "TEXT",\n        "domestic": "TEXT",\n        "beat": "INTEGER",\n        "district_no": "INTEGER",\n        "ward_no": "INTEGER",\n        "community_area_no": "INTEGER",\n        "fbi_code_no": "TEXT",\n        "latitude": "TEXT",\n        "longitude": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "report_no"\n        ]\n      },\n      "foreign_keys": {\n        "fbi_code_no": {\n          "referenced_table": "FBI_Code",\n          "referenced_column": "fbi_code_no"\n        },\n        "community_area_no": {\n          "referenced_table": "Community_Area",\n          "referenced_column": "community_area_no"\n        },\n        "district_no": {\n          "referenced_table": "District",\n          "referenced_column": "district_no"\n        },\n        "iucr_no": {\n          "referenced_table": "IUCR",\n          "referenced_column": "iucr_no"\n        },\n        "ward_no": {\n          "referenced_table": "Ward",\n          "referenced_column": "ward_no"\n        }\n      }\n    }\n  }\n}',
            "sqlalchemy_tables": "from sqlalchemy import Column, ForeignKey, Integer, MetaData, Table, Text\n\nmetadata = MetaData()\n\n\nt_Community_Area = Table(\n    'Community_Area', metadata,\n    Column('community_area_no', Integer, primary_key=True),\n    Column('community_area_name', Text),\n    Column('side', Text),\n    Column('population', Text)\n)\n\nt_District = Table(\n    'District', metadata,\n    Column('district_no', Integer, primary_key=True),\n    Column('district_name', Text),\n    Column('address', Text),\n    Column('zip_code', Integer),\n    Column('commander', Text),\n    Column('email', Text),\n    Column('phone', Text),\n    Column('fax', Text),\n    Column('tty', Text),\n    Column('twitter', Text)\n)\n\nt_FBI_Code = Table(\n    'FBI_Code', metadata,\n    Column('fbi_code_no', Text, primary_key=True),\n    Column('title', Text),\n    Column('description', Text),\n    Column('crime_against', Text)\n)\n\nt_IUCR = Table(\n    'IUCR', metadata,\n    Column('iucr_no', Text, primary_key=True),\n    Column('primary_description', Text),\n    Column('secondary_description', Text),\n    Column('index_code', Text)\n)\n\nt_Ward = Table(\n    'Ward', metadata,\n    Column('ward_no', Integer, primary_key=True),\n    Column('alderman_first_name', Text),\n    Column('alderman_last_name', Text),\n    Column('alderman_name_suffix', Text),\n    Column('ward_office_address', Text),\n    Column('ward_office_zip', Text),\n    Column('ward_email', Text),\n    Column('ward_office_phone', Text),\n    Column('ward_office_fax', Text),\n    Column('city_hall_office_room', Integer),\n    Column('city_hall_office_phone', Text),\n    Column('city_hall_office_fax', Text),\n    Column('Population', Integer)\n)\n\nt_Crime = Table(\n    'Crime', metadata,\n    Column('report_no', Integer, primary_key=True),\n    Column('case_number', Text),\n    Column('date', Text),\n    Column('block', Text),\n    Column('iucr_no', ForeignKey('IUCR.iucr_no')),\n    Column('location_description', Text),\n    Column('arrest', Text),\n    Column('domestic', Text),\n    Column('beat', Integer),\n    Column('district_no', ForeignKey('District.district_no')),\n    Column('ward_no', ForeignKey('Ward.ward_no')),\n    Column('community_area_no', ForeignKey('Community_Area.community_area_no')),\n    Column('fbi_code_no', ForeignKey('FBI_Code.fbi_code_no')),\n    Column('latitude', Text),\n    Column('longitude', Text)\n)\n\nt_Neighborhood = Table(\n    'Neighborhood', metadata,\n    Column('neighborhood_name', Text, primary_key=True),\n    Column('community_area_no', ForeignKey('Community_Area.community_area_no'))\n)\n",
            "datagrip": "chicago_crime schema:\n    + tables\n        Community_Area: table\n            + columns\n                community_area_no: INTEGER\n                community_area_name: TEXT\n                side: TEXT\n                population: TEXT\n            + keys\n                Community_Area_pk: PK (community_area_no)\n\n        District: table\n            + columns\n                district_no: INTEGER\n                district_name: TEXT\n                address: TEXT\n                zip_code: INTEGER\n                commander: TEXT\n                email: TEXT\n                phone: TEXT\n                fax: TEXT\n                tty: TEXT\n                twitter: TEXT\n            + keys\n                District_pk: PK (district_no)\n\n        FBI_Code: table\n            + columns\n                fbi_code_no: TEXT\n                title: TEXT\n                description: TEXT\n                crime_against: TEXT\n            + keys\n                FBI_Code_pk: PK (fbi_code_no)\n\n        IUCR: table\n            + columns\n                iucr_no: TEXT\n                primary_description: TEXT\n                secondary_description: TEXT\n                index_code: TEXT\n            + keys\n                IUCR_pk: PK (iucr_no)\n\n        Neighborhood: table\n            + columns\n                neighborhood_name: TEXT\n                community_area_no: INTEGER\n            + keys\n                Neighborhood_pk: PK (neighborhood_name)\n            + foreign-keys\n                Neighborhood_community_area_no_fk: foreign key (community_area_no) -> Community_Area[.Community_Area_pk] (community_area_no)\n\n        Ward: table\n            + columns\n                ward_no: INTEGER\n                alderman_first_name: TEXT\n                alderman_last_name: TEXT\n                alderman_name_suffix: TEXT\n                ward_office_address: TEXT\n                ward_office_zip: TEXT\n                ward_email: TEXT\n                ward_office_phone: TEXT\n                ward_office_fax: TEXT\n                city_hall_office_room: INTEGER\n                city_hall_office_phone: TEXT\n                city_hall_office_fax: TEXT\n                Population: INTEGER\n            + keys\n                Ward_pk: PK (ward_no)\n\n        Crime: table\n            + columns\n                report_no: INTEGER\n                case_number: TEXT\n                date: TEXT\n                block: TEXT\n                iucr_no: TEXT\n                location_description: TEXT\n                arrest: TEXT\n                domestic: TEXT\n                beat: INTEGER\n                district_no: INTEGER\n                ward_no: INTEGER\n                community_area_no: INTEGER\n                fbi_code_no: TEXT\n                latitude: TEXT\n                longitude: TEXT\n            + keys\n                Crime_pk: PK (report_no)\n            + foreign-keys\n                Crime_fbi_code_no_fk: foreign key (fbi_code_no) -> FBI_Code[.FBI_Code_pk] (fbi_code_no)\n                Crime_community_area_no_fk: foreign key (community_area_no) -> Community_Area[.Community_Area_pk] (community_area_no)\n                Crime_district_no_fk: foreign key (district_no) -> District[.District_pk] (district_no)\n                Crime_iucr_no_fk: foreign key (iucr_no) -> IUCR[.IUCR_pk] (iucr_no)\n                Crime_ward_no_fk: foreign key (ward_no) -> Ward[.Ward_pk] (ward_no)\n",
            "basic_relations": "table 'Community_Area' with columns: community_area_no , community_area_name , side , population\ntable 'District' with columns: district_no , district_name , address , zip_code , commander , email , phone , fax , tty , twitter\ntable 'FBI_Code' with columns: fbi_code_no , title , description , crime_against\ntable 'IUCR' with columns: iucr_no , primary_description , secondary_description , index_code\ntable 'Neighborhood' with columns: neighborhood_name , community_area_no\ntable 'Ward' with columns: ward_no , alderman_first_name , alderman_last_name , alderman_name_suffix , ward_office_address , ward_office_zip , ward_email , ward_office_phone , ward_office_fax , city_hall_office_room , city_hall_office_phone , city_hall_office_fax , Population\ntable 'Crime' with columns: report_no , case_number , date , block , iucr_no , location_description , arrest , domestic , beat , district_no , ward_no , community_area_no , fbi_code_no , latitude , longitude\n\nRelations:\nNeighborhood.community_area_no -> Community_Area.community_area_no\nCrime.fbi_code_no -> FBI_Code.fbi_code_no\nCrime.community_area_no -> Community_Area.community_area_no\nCrime.district_no -> District.district_no\nCrime.iucr_no -> IUCR.iucr_no\nCrime.ward_no -> Ward.ward_no",
            "sql": "chicago_crime CREATE messages:\n\nCREATE TABLE Community_Area (\n    community_area_no INTEGER\n    community_area_name TEXT\n    side TEXT\n    population TEXT\n,\n    PRIMARY KEY (community_area_no)\n);\n\nCREATE TABLE District (\n    district_no INTEGER\n    district_name TEXT\n    address TEXT\n    zip_code INTEGER\n    commander TEXT\n    email TEXT\n    phone TEXT\n    fax TEXT\n    tty TEXT\n    twitter TEXT\n,\n    PRIMARY KEY (district_no)\n);\n\nCREATE TABLE FBI_Code (\n    fbi_code_no TEXT\n    title TEXT\n    description TEXT\n    crime_against TEXT\n,\n    PRIMARY KEY (fbi_code_no)\n);\n\nCREATE TABLE IUCR (\n    iucr_no TEXT\n    primary_description TEXT\n    secondary_description TEXT\n    index_code TEXT\n,\n    PRIMARY KEY (iucr_no)\n);\n\nCREATE TABLE Neighborhood (\n    neighborhood_name TEXT\n    community_area_no INTEGER\n,\n    PRIMARY KEY (neighborhood_name)\n    FOREIGN KEY (community_area_no) REFERENCES Community_Area (community_area_no)\n);\n\nCREATE TABLE Ward (\n    ward_no INTEGER\n    alderman_first_name TEXT\n    alderman_last_name TEXT\n    alderman_name_suffix TEXT\n    ward_office_address TEXT\n    ward_office_zip TEXT\n    ward_email TEXT\n    ward_office_phone TEXT\n    ward_office_fax TEXT\n    city_hall_office_room INTEGER\n    city_hall_office_phone TEXT\n    city_hall_office_fax TEXT\n    Population INTEGER\n,\n    PRIMARY KEY (ward_no)\n);\n\nCREATE TABLE Crime (\n    report_no INTEGER\n    case_number TEXT\n    date TEXT\n    block TEXT\n    iucr_no TEXT\n    location_description TEXT\n    arrest TEXT\n    domestic TEXT\n    beat INTEGER\n    district_no INTEGER\n    ward_no INTEGER\n    community_area_no INTEGER\n    fbi_code_no TEXT\n    latitude TEXT\n    longitude TEXT\n,\n    PRIMARY KEY (report_no)\n    FOREIGN KEY (fbi_code_no) REFERENCES FBI_Code (fbi_code_no)\n    FOREIGN KEY (community_area_no) REFERENCES Community_Area (community_area_no)\n    FOREIGN KEY (district_no) REFERENCES District (district_no)\n    FOREIGN KEY (iucr_no) REFERENCES IUCR (iucr_no)\n    FOREIGN KEY (ward_no) REFERENCES Ward (ward_no)\n);\n",
            "m_schema": "【DB_ID】 chicago_crime\n【Schema】\n# Table: IUCR\n[\n(iucr_no:TEXT, Primary Key, Examples: [031A, 031B, 033A]),\n(primary_description:TEXT, Examples: [HOMICIDE, CRIM SEXUAL ASSAULT, BATTERY]),\n(secondary_description:TEXT, Examples: [FIRST DEGREE MURDER]),\n(index_code:TEXT, Examples: [I, N])\n]\n# Table: Neighborhood\n[\n(neighborhood_name:TEXT, Primary Key, Examples: [Albany Park, Altgeld Gardens, Andersonville]),\n(community_area_no:INTEGER, Examples: [14, 54, 77])\n]\n# Table: Community_Area\n[\n(community_area_no:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(community_area_name:TEXT, Examples: [Rogers Park, West Ridge, Uptown]),\n(side:TEXT, Examples: [Far North , North , Central]),\n(population:TEXT, Examples: [54,991, 71,942, 56,362])\n]\n# Table: District\n[\n(district_no:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(district_name:TEXT, Examples: [Central, Wentworth, Grand Crossing]),\n(address:TEXT, Examples: [1718 South State Street]),\n(zip_code:INTEGER, Examples: [60616, 60609, 60637]),\n(commander:TEXT, Examples: [Jake M. Alderden, Joshua Wallace, Eve T. Quarterman]),\n(email:TEXT, Examples: [\xa0CAPS001District@chicagopolice.org]),\n(phone:TEXT, Examples: [312-745-4290, 312-747-8366, 312-747-8201]),\n(fax:TEXT, Examples: [312-745-3694, 312-747-5396, 312-747-5479]),\n(tty:TEXT, Examples: [312-745-3693, 312-747-6656, 312-747-9168]),\n(twitter:TEXT, Examples: [\xa0ChicagoCAPS01, \xa0ChicagoCAPS02, \xa0ChicagoCAPS03])\n]\n# Table: Crime\n[\n(report_no:INTEGER, Primary Key, Examples: [23757, 23758, 23759]),\n(case_number:TEXT, Examples: [JB100159, JB100522, JB100839]),\n(date:TEXT, Examples: [1/1/2018 2:46, 1/1/2018 11:33, 1/1/2018 18:27]),\n(block:TEXT, Examples: [039XX W CORNELIA AVE]),\n(iucr_no:TEXT, Examples: [110, 143B, 1310]),\n(location_description:TEXT, Examples: [AUTO, APARTMENT, ALLEY]),\n(arrest:TEXT, Examples: [FALSE, TRUE]),\n(domestic:TEXT, Examples: [FALSE, TRUE]),\n(beat:INTEGER, Examples: [1732, 1935, 935]),\n(district_no:INTEGER, Examples: [17, 19, 9]),\n(ward_no:INTEGER, Examples: [30, 43, 3]),\n(community_area_no:INTEGER, Examples: [21, 7, 37]),\n(fbi_code_no:TEXT, Examples: [01A, 15, 14]),\n(latitude:TEXT, Examples: [41.94456125, 41.92972657, 41.808168]),\n(longitude:TEXT, Examples: [-87.72668181, -87.64092074, -87.63333646])\n]\n# Table: Ward\n[\n(ward_no:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(alderman_first_name:TEXT, Examples: [Daniel, Brian, Pat]),\n(alderman_last_name:TEXT, Examples: [La Spata, Hopkins, Dowell]),\n(alderman_name_suffix:TEXT, Examples: [Jr.]),\n(ward_office_address:TEXT, Examples: [1958 N. Milwaukee Ave.]),\n(ward_office_zip:TEXT, Examples: [60647, 60622, 60609]),\n(ward_email:TEXT),\n(ward_office_phone:TEXT, Examples: [872.206.2685, 312.643.2299, 773.373.9273]),\n(ward_office_fax:TEXT, Examples: [312.448.8829, 773.536.7296, 773.324.1585]),\n(city_hall_office_room:INTEGER, Examples: [200, 305, 300]),\n(city_hall_office_phone:TEXT, Examples: [312.744.6836, 312.744.8734, 312.744.2690]),\n(city_hall_office_fax:TEXT, Examples: [312.744.6712, 312.744.7738, 312.744.3195]),\n(Population:INTEGER, Examples: [56149, 55805, 53039])\n]\n# Table: FBI_Code\n[\n(fbi_code_no:TEXT, Primary Key, Examples: [01A, 01B, 04A]),\n(title:TEXT, Examples: [Homicide 1st & 2nd Degree]),\n(description:TEXT),\n(crime_against:TEXT, Examples: [Persons, Property, Society])\n]\n【Foreign keys】\nNeighborhood.community_area_no=Community_Area.community_area_no\nCrime.ward_no=Ward.ward_no\nCrime.iucr_no=IUCR.iucr_no\nCrime.district_no=District.district_no\nCrime.community_area_no=Community_Area.community_area_no\nCrime.fbi_code_no=FBI_Code.fbi_code_no",
            "basic_types": "table 'Community_Area' with columns: community_area_no (INTEGER) , community_area_name (TEXT) , side (TEXT) , population (TEXT)\ntable 'District' with columns: district_no (INTEGER) , district_name (TEXT) , address (TEXT) , zip_code (INTEGER) , commander (TEXT) , email (TEXT) , phone (TEXT) , fax (TEXT) , tty (TEXT) , twitter (TEXT)\ntable 'FBI_Code' with columns: fbi_code_no (TEXT) , title (TEXT) , description (TEXT) , crime_against (TEXT)\ntable 'IUCR' with columns: iucr_no (TEXT) , primary_description (TEXT) , secondary_description (TEXT) , index_code (TEXT)\ntable 'Neighborhood' with columns: neighborhood_name (TEXT) , community_area_no (INTEGER)\ntable 'Ward' with columns: ward_no (INTEGER) , alderman_first_name (TEXT) , alderman_last_name (TEXT) , alderman_name_suffix (TEXT) , ward_office_address (TEXT) , ward_office_zip (TEXT) , ward_email (TEXT) , ward_office_phone (TEXT) , ward_office_fax (TEXT) , city_hall_office_room (INTEGER) , city_hall_office_phone (TEXT) , city_hall_office_fax (TEXT) , Population (INTEGER)\ntable 'Crime' with columns: report_no (INTEGER) , case_number (TEXT) , date (TEXT) , block (TEXT) , iucr_no (TEXT) , location_description (TEXT) , arrest (TEXT) , domestic (TEXT) , beat (INTEGER) , district_no (INTEGER) , ward_no (INTEGER) , community_area_no (INTEGER) , fbi_code_no (TEXT) , latitude (TEXT) , longitude (TEXT)",
            "mac_schema": "# Table: Community_Area\n[\n  (community_area_no, community area number.),\n  (community_area_name, community area name. Value examples: ['Woodlawn', 'West Town', 'West Ridge', 'West Pullman', 'West Lawn', 'West Garfield Park'].),\n  (side, side. Value examples: ['Southwest ', 'South ', 'Far Southeast ', 'Far North ', 'West ', 'Northwest '].),\n  (population, population. Value examples: ['98,514', '94,368', '9,426', '81,432', '80,484', '79,288'].)\n]\n# Table: District\n[\n  (district_no, district number.),\n  (district_name, district name. Value examples: ['Wentworth', 'Town Hall', 'South Chicago', 'Shakespeare', 'Rogers Park', 'Ogden'].),\n  (address, address. Value examples: ['850 West Addison St.', '7808 South Halsted Street', '727 East 111th St', '7040 South Cottage Grove Ave', '6464 North Clark St', '5701 West Madison Ave'].),\n  (zip_code, zip code.),\n  (commander, commander. Value examples: ['Yolanda Talley', 'Stephen C. Chung', 'Sean Joyce', 'Ronald A. Pontecore Jr.', 'Robert A. Rubio', 'Rahman S. Muhammad'].),\n  (email, email.),\n  (phone, phone. Value examples: ['312-747-8730', '312-747-8366', '312-747-8227', '312-747-8220', '312-747-8210', '312-747-8205'].),\n  (fax, fax. Value examples: ['312-747-8545', '312-747-7429', '312-747-6558', '312-747-5935', '312-747-5479', '312-747-5396'].),\n  (tty, tty. Value examples: [None, '312-747-9172', '312-747-9170', '312-747-9169', '312-747-9168', '312-747-8116', '312-747-7471'].),\n  (twitter, twitter. Value examples: ['\\xa0ChicagoCAPS25', '\\xa0ChicagoCAPS24', '\\xa0ChicagoCAPS22', '\\xa0ChicagoCAPS20', '\\xa0ChicagoCAPS19', '\\xa0ChicagoCAPS18'].)\n]\n# Table: FBI_Code\n[\n  (fbi_code_no, fbi code number.),\n  (title, title. Value examples: ['Weapons Violation', 'Vandalism', 'Stolen Property', 'Simple Battery', 'Simple Assault', 'Robbery'].),\n  (description, description.),\n  (crime_against, crime against. Value examples: ['Property', 'Society', 'Persons', 'Persons and Society'].)\n]\n# Table: IUCR\n[\n  (iucr_no, iucr number.),\n  (primary_description, primary description. Value examples: ['NARCOTICS', 'OTHER OFFENSE', 'DECEPTIVE PRACTICE', 'GAMBLING', 'BATTERY', 'WEAPONS VIOLATION'].),\n  (secondary_description, secondary description.),\n  (index_code, index code. Value examples: ['N', 'I'].)\n]\n# Table: Neighborhood\n[\n  (neighborhood_name, neighborhood name.),\n  (community_area_no, community area number.)\n]\n# Table: Ward\n[\n  (ward_no, ward no.),\n  (alderman_first_name, alderman first name. Value examples: ['Michael', 'Matthew', 'James', 'Anthony', 'Walter', 'Thomas'].),\n  (alderman_last_name, alderman last name. Value examples: ['Lopez', 'Waguespack', 'Villegas', 'Vasquez', 'Tunney', 'Thompson'].),\n  (alderman_name_suffix, alderman name suffix. Value examples: [None, 'Jr.'].),\n  (ward_office_address, ward office address. Value examples: [None, '9011 S. Ashland, Unit B', '8539 S. Cottage Grove Ave.', '8359 S. Pulaski \\xa0Rd.', '7442 N. Harlem Ave.', '700 E. 79th\\xa0Street\\xa0', '6934 W. Diversey Ave.'].),\n  (ward_office_zip, ward office zip. Value examples: [None, '60618', '60609', '60659', '60640', '60639', '60630'].),\n  (ward_email, ward email.),\n  (ward_office_phone, ward office phone. Value examples: [None, '\\xa0773.762.1771', '872.206.2685', '773.966.5336', '773.928.6961', '773.887.3772', '773.881.9300'].),\n  (ward_office_fax, ward office fax. Value examples: [None, '\\xa0773.762.1825', '872-206-6826', '773.881.9383', '773.794.8576', '773.672.5133', '773.582.3332'].),\n  (city_hall_office_room, city hall office room. Value examples: [300, 200, 305, 302].),\n  (city_hall_office_phone, city hall office phone. Value examples: [None, '\\xa0312.744.6858', '312.744.8805', '312.744.8734', '312.744.6868', '312.744.6857', '312.744.6856'].),\n  (city_hall_office_fax, city hall office fax. Value examples: [None, '312.744.9182', '312.744.8457', '312.744.7738', '312.744.6860', '312.744.6849', '312.744.6825'].),\n  (Population, Population.)\n]\n# Table: Crime\n[\n  (report_no, report number.),\n  (case_number, case number. Value examples: ['JB522024', 'JB458747', 'JB560410', 'JB523961', 'JB485287', 'JB483810'].),\n  (date, date. Value examples: ['1/1/2018 0:01', '1/1/2018 0:00', '1/1/2018 12:00', '5/1/2018 12:00', '6/1/2018 12:00', '7/1/2018 0:00'].),\n  (block, block. Value examples: ['001XX N STATE ST', '0000X N STATE ST', '008XX N MICHIGAN AVE', '0000X W TERMINAL ST', '0000X S STATE ST', '011XX S CANAL ST'].),\n  (iucr_no, Illinois Uniform Crime Reporting number.),\n  (location_description, location description.),\n  (arrest, arrest. Value examples: ['FALSE', 'TRUE'].),\n  (domestic, domestic. Value examples: ['FALSE', 'TRUE'].),\n  (beat, beat.),\n  (district_no, district number.),\n  (ward_no, ward number.),\n  (community_area_no, community area number.),\n  (fbi_code_no, fbi code number.),\n  (latitude, latitude. Value examples: [None, '41.88350019', '41.97629041', '41.89789513', '41.86854191', '41.88239406', '41.90966425'].),\n  (longitude, longitude. Value examples: [None, '-87.6278767', '-87.90522722', '-87.62409661', '-87.63923536', '-87.6278448', '-87.74272882'].)\n]",
        },
    },
    {
        "db_id": "books",
        "question": 'Which country does the customer with the email "rturbitt2@geocities.jp" from?',
        "evidence": '"rturbitt2@geocities.jp" is the email of customer; country refers to country_name',
        "SQL": "SELECT T4.country_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.email = 'rturbitT2@geocities.jp'",
        "answer": {
            "country": "keep_all",
            "address": "keep_all",
            "customer": "keep_all",
            "customer_address": "keep_all",
        },
        "schema_descriptions": {
            "basic_types_relations": "table 'address_status' with columns: status_id (INTEGER) , address_status (TEXT)\ntable 'author' with columns: author_id (INTEGER) , author_name (TEXT)\ntable 'book_language' with columns: language_id (INTEGER) , language_code (TEXT) , language_name (TEXT)\ntable 'country' with columns: country_id (INTEGER) , country_name (TEXT)\ntable 'address' with columns: address_id (INTEGER) , street_number (TEXT) , street_name (TEXT) , city (TEXT) , country_id (INTEGER)\ntable 'customer' with columns: customer_id (INTEGER) , first_name (TEXT) , last_name (TEXT) , email (TEXT)\ntable 'customer_address' with columns: customer_id (INTEGER) , address_id (INTEGER) , status_id (INTEGER)\ntable 'order_status' with columns: status_id (INTEGER) , status_value (TEXT)\ntable 'publisher' with columns: publisher_id (INTEGER) , publisher_name (TEXT)\ntable 'book' with columns: book_id (INTEGER) , title (TEXT) , isbn13 (TEXT) , language_id (INTEGER) , num_pages (INTEGER) , publication_date (DATE) , publisher_id (INTEGER)\ntable 'book_author' with columns: book_id (INTEGER) , author_id (INTEGER)\ntable 'shipping_method' with columns: method_id (INTEGER) , method_name (TEXT) , cost (REAL)\ntable 'cust_order' with columns: order_id (INTEGER) , order_date (DATETIME) , customer_id (INTEGER) , shipping_method_id (INTEGER) , dest_address_id (INTEGER)\ntable 'sqlite_sequence' with columns: name () , seq ()\ntable 'order_history' with columns: history_id (INTEGER) , order_id (INTEGER) , status_id (INTEGER) , status_date (DATETIME)\ntable 'order_line' with columns: line_id (INTEGER) , order_id (INTEGER) , book_id (INTEGER) , price (REAL)\n\nRelations:\naddress.country_id -> country.country_id\ncustomer_address.customer_id -> customer.customer_id\ncustomer_address.address_id -> address.address_id\nbook.publisher_id -> publisher.publisher_id\nbook.language_id -> book_language.language_id\nbook_author.book_id -> book.book_id\nbook_author.author_id -> author.author_id\ncust_order.dest_address_id -> address.None\ncust_order.shipping_method_id -> shipping_method.None\ncust_order.customer_id -> customer.None\norder_history.status_id -> order_status.None\norder_history.order_id -> cust_order.None\norder_line.book_id -> book.None\norder_line.order_id -> cust_order.None",
            "basic_basic": "table 'address_status' with columns: status_id , address_status\ntable 'author' with columns: author_id , author_name\ntable 'book_language' with columns: language_id , language_code , language_name\ntable 'country' with columns: country_id , country_name\ntable 'address' with columns: address_id , street_number , street_name , city , country_id\ntable 'customer' with columns: customer_id , first_name , last_name , email\ntable 'customer_address' with columns: customer_id , address_id , status_id\ntable 'order_status' with columns: status_id , status_value\ntable 'publisher' with columns: publisher_id , publisher_name\ntable 'book' with columns: book_id , title , isbn13 , language_id , num_pages , publication_date , publisher_id\ntable 'book_author' with columns: book_id , author_id\ntable 'shipping_method' with columns: method_id , method_name , cost\ntable 'cust_order' with columns: order_id , order_date , customer_id , shipping_method_id , dest_address_id\ntable 'sqlite_sequence' with columns: name , seq\ntable 'order_history' with columns: history_id , order_id , status_id , status_date\ntable 'order_line' with columns: line_id , order_id , book_id , price",
            "json_raw": '{\n  "tables": {\n    "address_status": {\n      "columns": {\n        "status_id": "INTEGER",\n        "address_status": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "status_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "author": {\n      "columns": {\n        "author_id": "INTEGER",\n        "author_name": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "author_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "book_language": {\n      "columns": {\n        "language_id": "INTEGER",\n        "language_code": "TEXT",\n        "language_name": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "language_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "country": {\n      "columns": {\n        "country_id": "INTEGER",\n        "country_name": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "country_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "address": {\n      "columns": {\n        "address_id": "INTEGER",\n        "street_number": "TEXT",\n        "street_name": "TEXT",\n        "city": "TEXT",\n        "country_id": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "address_id"\n        ]\n      },\n      "foreign_keys": {\n        "country_id": {\n          "referenced_table": "country",\n          "referenced_column": "country_id"\n        }\n      }\n    },\n    "customer": {\n      "columns": {\n        "customer_id": "INTEGER",\n        "first_name": "TEXT",\n        "last_name": "TEXT",\n        "email": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "customer_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "customer_address": {\n      "columns": {\n        "customer_id": "INTEGER",\n        "address_id": "INTEGER",\n        "status_id": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "address_id"\n        ]\n      },\n      "foreign_keys": {\n        "customer_id": {\n          "referenced_table": "customer",\n          "referenced_column": "customer_id"\n        },\n        "address_id": {\n          "referenced_table": "address",\n          "referenced_column": "address_id"\n        }\n      }\n    },\n    "order_status": {\n      "columns": {\n        "status_id": "INTEGER",\n        "status_value": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "status_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "publisher": {\n      "columns": {\n        "publisher_id": "INTEGER",\n        "publisher_name": "TEXT"\n      },\n      "keys": {\n        "primary_key": [\n          "publisher_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "book": {\n      "columns": {\n        "book_id": "INTEGER",\n        "title": "TEXT",\n        "isbn13": "TEXT",\n        "language_id": "INTEGER",\n        "num_pages": "INTEGER",\n        "publication_date": "DATE",\n        "publisher_id": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "book_id"\n        ]\n      },\n      "foreign_keys": {\n        "publisher_id": {\n          "referenced_table": "publisher",\n          "referenced_column": "publisher_id"\n        },\n        "language_id": {\n          "referenced_table": "book_language",\n          "referenced_column": "language_id"\n        }\n      }\n    },\n    "book_author": {\n      "columns": {\n        "book_id": "INTEGER",\n        "author_id": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "author_id"\n        ]\n      },\n      "foreign_keys": {\n        "book_id": {\n          "referenced_table": "book",\n          "referenced_column": "book_id"\n        },\n        "author_id": {\n          "referenced_table": "author",\n          "referenced_column": "author_id"\n        }\n      }\n    },\n    "shipping_method": {\n      "columns": {\n        "method_id": "INTEGER",\n        "method_name": "TEXT",\n        "cost": "REAL"\n      },\n      "keys": {\n        "primary_key": [\n          "method_id"\n        ]\n      },\n      "foreign_keys": {}\n    },\n    "cust_order": {\n      "columns": {\n        "order_id": "INTEGER",\n        "order_date": "DATETIME",\n        "customer_id": "INTEGER",\n        "shipping_method_id": "INTEGER",\n        "dest_address_id": "INTEGER"\n      },\n      "keys": {\n        "primary_key": [\n          "order_id"\n        ]\n      },\n      "foreign_keys": {\n        "dest_address_id": {\n          "referenced_table": "address",\n          "referenced_column": null\n        },\n        "shipping_method_id": {\n          "referenced_table": "shipping_method",\n          "referenced_column": null\n        },\n        "customer_id": {\n          "referenced_table": "customer",\n          "referenced_column": null\n        }\n      }\n    },\n    "sqlite_sequence": {\n      "columns": {\n        "name": "",\n        "seq": ""\n      },\n      "keys": {},\n      "foreign_keys": {}\n    },\n    "order_history": {\n      "columns": {\n        "history_id": "INTEGER",\n        "order_id": "INTEGER",\n        "status_id": "INTEGER",\n        "status_date": "DATETIME"\n      },\n      "keys": {\n        "primary_key": [\n          "history_id"\n        ]\n      },\n      "foreign_keys": {\n        "status_id": {\n          "referenced_table": "order_status",\n          "referenced_column": null\n        },\n        "order_id": {\n          "referenced_table": "cust_order",\n          "referenced_column": null\n        }\n      }\n    },\n    "order_line": {\n      "columns": {\n        "line_id": "INTEGER",\n        "order_id": "INTEGER",\n        "book_id": "INTEGER",\n        "price": "REAL"\n      },\n      "keys": {\n        "primary_key": [\n          "line_id"\n        ]\n      },\n      "foreign_keys": {\n        "book_id": {\n          "referenced_table": "book",\n          "referenced_column": null\n        },\n        "order_id": {\n          "referenced_table": "cust_order",\n          "referenced_column": null\n        }\n      }\n    }\n  }\n}',
            "sqlalchemy_tables": "from sqlalchemy import Column, Date, DateTime, ForeignKey, Integer, MetaData, REAL, Table, Text\n\nmetadata = MetaData()\n\n\nt_address_status = Table(\n    'address_status', metadata,\n    Column('status_id', Integer, primary_key=True),\n    Column('address_status', Text)\n)\n\nt_author = Table(\n    'author', metadata,\n    Column('author_id', Integer, primary_key=True),\n    Column('author_name', Text)\n)\n\nt_book_language = Table(\n    'book_language', metadata,\n    Column('language_id', Integer, primary_key=True),\n    Column('language_code', Text),\n    Column('language_name', Text)\n)\n\nt_country = Table(\n    'country', metadata,\n    Column('country_id', Integer, primary_key=True),\n    Column('country_name', Text)\n)\n\nt_customer = Table(\n    'customer', metadata,\n    Column('customer_id', Integer, primary_key=True),\n    Column('first_name', Text),\n    Column('last_name', Text),\n    Column('email', Text)\n)\n\nt_order_status = Table(\n    'order_status', metadata,\n    Column('status_id', Integer, primary_key=True),\n    Column('status_value', Text)\n)\n\nt_publisher = Table(\n    'publisher', metadata,\n    Column('publisher_id', Integer, primary_key=True),\n    Column('publisher_name', Text)\n)\n\nt_shipping_method = Table(\n    'shipping_method', metadata,\n    Column('method_id', Integer, primary_key=True),\n    Column('method_name', Text),\n    Column('cost', REAL)\n)\n\nt_address = Table(\n    'address', metadata,\n    Column('address_id', Integer, primary_key=True),\n    Column('street_number', Text),\n    Column('street_name', Text),\n    Column('city', Text),\n    Column('country_id', ForeignKey('country.country_id'))\n)\n\nt_book = Table(\n    'book', metadata,\n    Column('book_id', Integer, primary_key=True),\n    Column('title', Text),\n    Column('isbn13', Text),\n    Column('language_id', ForeignKey('book_language.language_id')),\n    Column('num_pages', Integer),\n    Column('publication_date', Date),\n    Column('publisher_id', ForeignKey('publisher.publisher_id'))\n)\n\nt_book_author = Table(\n    'book_author', metadata,\n    Column('book_id', ForeignKey('book.book_id'), primary_key=True),\n    Column('author_id', ForeignKey('author.author_id'), primary_key=True)\n)\n\nt_cust_order = Table(\n    'cust_order', metadata,\n    Column('order_id', Integer, primary_key=True),\n    Column('order_date', DateTime),\n    Column('customer_id', ForeignKey('customer.customer_id')),\n    Column('shipping_method_id', ForeignKey('shipping_method.method_id')),\n    Column('dest_address_id', ForeignKey('address.address_id'))\n)\n\nt_customer_address = Table(\n    'customer_address', metadata,\n    Column('customer_id', ForeignKey('customer.customer_id'), primary_key=True),\n    Column('address_id', ForeignKey('address.address_id'), primary_key=True),\n    Column('status_id', Integer)\n)\n\nt_order_history = Table(\n    'order_history', metadata,\n    Column('history_id', Integer, primary_key=True),\n    Column('order_id', ForeignKey('cust_order.order_id')),\n    Column('status_id', ForeignKey('order_status.status_id')),\n    Column('status_date', DateTime)\n)\n\nt_order_line = Table(\n    'order_line', metadata,\n    Column('line_id', Integer, primary_key=True),\n    Column('order_id', ForeignKey('cust_order.order_id')),\n    Column('book_id', ForeignKey('book.book_id')),\n    Column('price', REAL)\n)\n",
            "datagrip": "books schema:\n    + tables\n        address_status: table\n            + columns\n                status_id: INTEGER\n                address_status: TEXT\n            + keys\n                address_status_pk: PK (status_id)\n\n        author: table\n            + columns\n                author_id: INTEGER\n                author_name: TEXT\n            + keys\n                author_pk: PK (author_id)\n\n        book_language: table\n            + columns\n                language_id: INTEGER\n                language_code: TEXT\n                language_name: TEXT\n            + keys\n                book_language_pk: PK (language_id)\n\n        country: table\n            + columns\n                country_id: INTEGER\n                country_name: TEXT\n            + keys\n                country_pk: PK (country_id)\n\n        address: table\n            + columns\n                address_id: INTEGER\n                street_number: TEXT\n                street_name: TEXT\n                city: TEXT\n                country_id: INTEGER\n            + keys\n                address_pk: PK (address_id)\n            + foreign-keys\n                address_country_id_fk: foreign key (country_id) -> country[.country_pk] (country_id)\n\n        customer: table\n            + columns\n                customer_id: INTEGER\n                first_name: TEXT\n                last_name: TEXT\n                email: TEXT\n            + keys\n                customer_pk: PK (customer_id)\n\n        customer_address: table\n            + columns\n                customer_id: INTEGER\n                address_id: INTEGER\n                status_id: INTEGER\n            + keys\n                customer_address_pk: PK (address_id)\n            + foreign-keys\n                customer_address_customer_id_fk: foreign key (customer_id) -> customer[.customer_pk] (customer_id)\n                customer_address_address_id_fk: foreign key (address_id) -> address[.address_pk] (address_id)\n\n        order_status: table\n            + columns\n                status_id: INTEGER\n                status_value: TEXT\n            + keys\n                order_status_pk: PK (status_id)\n\n        publisher: table\n            + columns\n                publisher_id: INTEGER\n                publisher_name: TEXT\n            + keys\n                publisher_pk: PK (publisher_id)\n\n        book: table\n            + columns\n                book_id: INTEGER\n                title: TEXT\n                isbn13: TEXT\n                language_id: INTEGER\n                num_pages: INTEGER\n                publication_date: DATE\n                publisher_id: INTEGER\n            + keys\n                book_pk: PK (book_id)\n            + foreign-keys\n                book_publisher_id_fk: foreign key (publisher_id) -> publisher[.publisher_pk] (publisher_id)\n                book_language_id_fk: foreign key (language_id) -> book_language[.book_language_pk] (language_id)\n\n        book_author: table\n            + columns\n                book_id: INTEGER\n                author_id: INTEGER\n            + keys\n                book_author_pk: PK (author_id)\n            + foreign-keys\n                book_author_book_id_fk: foreign key (book_id) -> book[.book_pk] (book_id)\n                book_author_author_id_fk: foreign key (author_id) -> author[.author_pk] (author_id)\n\n        shipping_method: table\n            + columns\n                method_id: INTEGER\n                method_name: TEXT\n                cost: REAL\n            + keys\n                shipping_method_pk: PK (method_id)\n\n        cust_order: table\n            + columns\n                order_id: INTEGER\n                order_date: DATETIME\n                customer_id: INTEGER\n                shipping_method_id: INTEGER\n                dest_address_id: INTEGER\n            + keys\n                cust_order_pk: PK (order_id)\n            + foreign-keys\n                cust_order_dest_address_id_fk: foreign key (dest_address_id) -> address[.address_pk] (None)\n                cust_order_shipping_method_id_fk: foreign key (shipping_method_id) -> shipping_method[.shipping_method_pk] (None)\n                cust_order_customer_id_fk: foreign key (customer_id) -> customer[.customer_pk] (None)\n\n        sqlite_sequence: table\n            + columns\n                name: \n                seq: \n\n        order_history: table\n            + columns\n                history_id: INTEGER\n                order_id: INTEGER\n                status_id: INTEGER\n                status_date: DATETIME\n            + keys\n                order_history_pk: PK (history_id)\n            + foreign-keys\n                order_history_status_id_fk: foreign key (status_id) -> order_status[.order_status_pk] (None)\n                order_history_order_id_fk: foreign key (order_id) -> cust_order[.cust_order_pk] (None)\n\n        order_line: table\n            + columns\n                line_id: INTEGER\n                order_id: INTEGER\n                book_id: INTEGER\n                price: REAL\n            + keys\n                order_line_pk: PK (line_id)\n            + foreign-keys\n                order_line_book_id_fk: foreign key (book_id) -> book[.book_pk] (None)\n                order_line_order_id_fk: foreign key (order_id) -> cust_order[.cust_order_pk] (None)\n",
            "basic_relations": "table 'address_status' with columns: status_id , address_status\ntable 'author' with columns: author_id , author_name\ntable 'book_language' with columns: language_id , language_code , language_name\ntable 'country' with columns: country_id , country_name\ntable 'address' with columns: address_id , street_number , street_name , city , country_id\ntable 'customer' with columns: customer_id , first_name , last_name , email\ntable 'customer_address' with columns: customer_id , address_id , status_id\ntable 'order_status' with columns: status_id , status_value\ntable 'publisher' with columns: publisher_id , publisher_name\ntable 'book' with columns: book_id , title , isbn13 , language_id , num_pages , publication_date , publisher_id\ntable 'book_author' with columns: book_id , author_id\ntable 'shipping_method' with columns: method_id , method_name , cost\ntable 'cust_order' with columns: order_id , order_date , customer_id , shipping_method_id , dest_address_id\ntable 'sqlite_sequence' with columns: name , seq\ntable 'order_history' with columns: history_id , order_id , status_id , status_date\ntable 'order_line' with columns: line_id , order_id , book_id , price\n\nRelations:\naddress.country_id -> country.country_id\ncustomer_address.customer_id -> customer.customer_id\ncustomer_address.address_id -> address.address_id\nbook.publisher_id -> publisher.publisher_id\nbook.language_id -> book_language.language_id\nbook_author.book_id -> book.book_id\nbook_author.author_id -> author.author_id\ncust_order.dest_address_id -> address.None\ncust_order.shipping_method_id -> shipping_method.None\ncust_order.customer_id -> customer.None\norder_history.status_id -> order_status.None\norder_history.order_id -> cust_order.None\norder_line.book_id -> book.None\norder_line.order_id -> cust_order.None",
            "sql": "books CREATE messages:\n\nCREATE TABLE address_status (\n    status_id INTEGER\n    address_status TEXT\n,\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE author (\n    author_id INTEGER\n    author_name TEXT\n,\n    PRIMARY KEY (author_id)\n);\n\nCREATE TABLE book_language (\n    language_id INTEGER\n    language_code TEXT\n    language_name TEXT\n,\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE country (\n    country_id INTEGER\n    country_name TEXT\n,\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE address (\n    address_id INTEGER\n    street_number TEXT\n    street_name TEXT\n    city TEXT\n    country_id INTEGER\n,\n    PRIMARY KEY (address_id)\n    FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE customer (\n    customer_id INTEGER\n    first_name TEXT\n    last_name TEXT\n    email TEXT\n,\n    PRIMARY KEY (customer_id)\n);\n\nCREATE TABLE customer_address (\n    customer_id INTEGER\n    address_id INTEGER\n    status_id INTEGER\n,\n    PRIMARY KEY (address_id)\n    FOREIGN KEY (customer_id) REFERENCES customer (customer_id)\n    FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE order_status (\n    status_id INTEGER\n    status_value TEXT\n,\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE publisher (\n    publisher_id INTEGER\n    publisher_name TEXT\n,\n    PRIMARY KEY (publisher_id)\n);\n\nCREATE TABLE book (\n    book_id INTEGER\n    title TEXT\n    isbn13 TEXT\n    language_id INTEGER\n    num_pages INTEGER\n    publication_date DATE\n    publisher_id INTEGER\n,\n    PRIMARY KEY (book_id)\n    FOREIGN KEY (publisher_id) REFERENCES publisher (publisher_id)\n    FOREIGN KEY (language_id) REFERENCES book_language (language_id)\n);\n\nCREATE TABLE book_author (\n    book_id INTEGER\n    author_id INTEGER\n,\n    PRIMARY KEY (author_id)\n    FOREIGN KEY (book_id) REFERENCES book (book_id)\n    FOREIGN KEY (author_id) REFERENCES author (author_id)\n);\n\nCREATE TABLE shipping_method (\n    method_id INTEGER\n    method_name TEXT\n    cost REAL\n,\n    PRIMARY KEY (method_id)\n);\n\nCREATE TABLE cust_order (\n    order_id INTEGER\n    order_date DATETIME\n    customer_id INTEGER\n    shipping_method_id INTEGER\n    dest_address_id INTEGER\n,\n    PRIMARY KEY (order_id)\n    FOREIGN KEY (dest_address_id) REFERENCES address (None)\n    FOREIGN KEY (shipping_method_id) REFERENCES shipping_method (None)\n    FOREIGN KEY (customer_id) REFERENCES customer (None)\n);\n\nCREATE TABLE sqlite_sequence (\n    name \n    seq \n);\n\nCREATE TABLE order_history (\n    history_id INTEGER\n    order_id INTEGER\n    status_id INTEGER\n    status_date DATETIME\n,\n    PRIMARY KEY (history_id)\n    FOREIGN KEY (status_id) REFERENCES order_status (None)\n    FOREIGN KEY (order_id) REFERENCES cust_order (None)\n);\n\nCREATE TABLE order_line (\n    line_id INTEGER\n    order_id INTEGER\n    book_id INTEGER\n    price REAL\n,\n    PRIMARY KEY (line_id)\n    FOREIGN KEY (book_id) REFERENCES book (None)\n    FOREIGN KEY (order_id) REFERENCES cust_order (None)\n);\n",
            "m_schema": "【DB_ID】 books\n【Schema】\n# Table: publisher\n[\n(publisher_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(publisher_name:TEXT, Examples: [10/18, 1st Book Library, 1st World Library])\n]\n# Table: customer_address\n[\n(customer_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(address_id:INTEGER, Primary Key, Examples: [606, 266, 376]),\n(status_id:INTEGER, Examples: [1, 2])\n]\n# Table: shipping_method\n[\n(method_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(method_name:TEXT, Examples: [Standard, Priority, Express]),\n(cost:REAL, Examples: [5.9, 8.9, 11.9])\n]\n# Table: book_author\n[\n(book_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(author_id:INTEGER, Primary Key, Examples: [1, 2, 3])\n]\n# Table: book_language\n[\n(language_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(language_code:TEXT, Examples: [eng, en-US, fre]),\n(language_name:TEXT, Examples: [English])\n]\n# Table: customer\n[\n(customer_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(first_name:TEXT, Examples: [Ursola, Ruthanne, Reidar]),\n(last_name:TEXT, Examples: [Purdy, Vatini, Turbitt]),\n(email:TEXT)\n]\n# Table: order_status\n[\n(status_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(status_value:TEXT, Examples: [Order Received, Pending Delivery, Delivery In Progress])\n]\n# Table: address\n[\n(address_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(street_number:TEXT, Examples: [57, 86, 292]),\n(street_name:TEXT, Examples: [Glacier Hill Avenue, Dottie Junction, Ramsey Avenue]),\n(city:TEXT, Examples: [Torbat-e Jām, Beaumont, Cayambe]),\n(country_id:INTEGER, Examples: [95, 37, 60])\n]\n# Table: address_status\n[\n(status_id:INTEGER, Primary Key, Examples: [1, 2]),\n(address_status:TEXT, Examples: [Active, Inactive])\n]\n# Table: author\n[\n(author_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(author_name:TEXT, Examples: [A. Bartlett Giamatti, A. Elizabeth Delany, A. Merritt])\n]\n# Table: order_line\n[\n(line_id:INTEGER, Primary Key, Examples: [1024, 1025, 1026]),\n(order_id:INTEGER, Examples: [2051, 899, 4994]),\n(book_id:INTEGER, Examples: [10720, 10105, 6503]),\n(price:REAL, Examples: [3.19, 1.24, 14.74])\n]\n# Table: order_history\n[\n(history_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(order_id:INTEGER, Examples: [1, 2, 3]),\n(status_id:INTEGER, Examples: [1, 2, 3]),\n(status_date:DATETIME, Examples: [2021-07-14 17:04:28])\n]\n# Table: cust_order\n[\n(order_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(order_date:DATETIME, Examples: [2021-07-14 10:47:19]),\n(customer_id:INTEGER, Examples: [387, 1256, 1335]),\n(shipping_method_id:INTEGER, Examples: [4, 2, 1]),\n(dest_address_id:INTEGER, Examples: [1, 2, 3])\n]\n# Table: country\n[\n(country_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(country_name:TEXT, Examples: [Afghanistan, Netherlands Antilles, Albania])\n]\n# Table: book\n[\n(book_id:INTEGER, Primary Key, Examples: [1, 2, 3]),\n(title:TEXT, Examples: [The World's First Love: Mary  Mother of God]),\n(isbn13:TEXT, Examples: [8987059752, 20049130001, 23755004321]),\n(language_id:INTEGER, Examples: [2, 1, 5]),\n(num_pages:INTEGER, Examples: [276, 352, 128]),\n(publication_date:DATE, Examples: [1996-09-01]),\n(publisher_id:INTEGER, Examples: [1010, 1967, 1978])\n]\n【Foreign keys】\ncustomer_address.address_id=address.address_id\ncustomer_address.customer_id=customer.customer_id\nbook_author.author_id=author.author_id\nbook_author.book_id=book.book_id\naddress.country_id=country.country_id\norder_line.book_id=book.book_id\norder_line.order_id=cust_order.order_id\norder_history.status_id=order_status.status_id\norder_history.order_id=cust_order.order_id\ncust_order.dest_address_id=address.address_id\ncust_order.shipping_method_id=shipping_method.method_id\ncust_order.customer_id=customer.customer_id\nbook.language_id=book_language.language_id\nbook.publisher_id=publisher.publisher_id",
            "basic_types": "table 'address_status' with columns: status_id (INTEGER) , address_status (TEXT)\ntable 'author' with columns: author_id (INTEGER) , author_name (TEXT)\ntable 'book_language' with columns: language_id (INTEGER) , language_code (TEXT) , language_name (TEXT)\ntable 'country' with columns: country_id (INTEGER) , country_name (TEXT)\ntable 'address' with columns: address_id (INTEGER) , street_number (TEXT) , street_name (TEXT) , city (TEXT) , country_id (INTEGER)\ntable 'customer' with columns: customer_id (INTEGER) , first_name (TEXT) , last_name (TEXT) , email (TEXT)\ntable 'customer_address' with columns: customer_id (INTEGER) , address_id (INTEGER) , status_id (INTEGER)\ntable 'order_status' with columns: status_id (INTEGER) , status_value (TEXT)\ntable 'publisher' with columns: publisher_id (INTEGER) , publisher_name (TEXT)\ntable 'book' with columns: book_id (INTEGER) , title (TEXT) , isbn13 (TEXT) , language_id (INTEGER) , num_pages (INTEGER) , publication_date (DATE) , publisher_id (INTEGER)\ntable 'book_author' with columns: book_id (INTEGER) , author_id (INTEGER)\ntable 'shipping_method' with columns: method_id (INTEGER) , method_name (TEXT) , cost (REAL)\ntable 'cust_order' with columns: order_id (INTEGER) , order_date (DATETIME) , customer_id (INTEGER) , shipping_method_id (INTEGER) , dest_address_id (INTEGER)\ntable 'sqlite_sequence' with columns: name () , seq ()\ntable 'order_history' with columns: history_id (INTEGER) , order_id (INTEGER) , status_id (INTEGER) , status_date (DATETIME)\ntable 'order_line' with columns: line_id (INTEGER) , order_id (INTEGER) , book_id (INTEGER) , price (REAL)",
            "mac_schema": "# Table: address_status\n[\n  (status_id, status id.),\n  (address_status, address status. Value examples: ['Inactive', 'Active'].)\n]\n# Table: author\n[\n  (author_id, author id.),\n  (author_name, author name.)\n]\n# Table: book_language\n[\n  (language_id, language id.),\n  (language_code, language code. Value examples: ['zho', 'wel', 'tur', 'swe', 'srp', 'spa'].),\n  (language_name, language name. Value examples: ['Welsh', 'United States English', 'Turkish', 'Swedish', 'Spanish', 'Serbian'].)\n]\n# Table: country\n[\n  (country_id, country id.),\n  (country_name, country name. Value examples: ['Singapore', 'Zimbabwe (Rhodesia)', 'Zimbabwe', 'Zambia', 'Yugoslavia', 'Yemen'].)\n]\n# Table: address\n[\n  (address_id, address id.),\n  (street_number, street number. Value examples: ['5', '1', '4', '0', '9', '2'].),\n  (street_name, street name. Value examples: ['Sauthoff Court', 'John Wall Crossing', 'Vahlen Way', 'Twin Pines Plaza', 'Trailsway Place', 'Texas Terrace'].),\n  (city, city. Value examples: ['Västerås', 'Dallas', 'Chengguan', 'Xinhua', 'Villeneuve-la-Garenne', 'Tijão'].),\n  (country_id, country id.)\n]\n# Table: customer\n[\n  (customer_id, customer id.),\n  (first_name, first name. Value examples: ['Ardeen', 'Winifield', 'Whitney', 'Robinson', 'Natka', 'Lynette'].),\n  (last_name, last name. Value examples: ['Adamec', 'Toombes', 'Theurer', 'Syers', 'Spohrmann', 'Spadari'].),\n  (email, email.)\n]\n# Table: customer_address\n[\n  (customer_id, customer id.),\n  (address_id, address id.),\n  (status_id, status id.)\n]\n# Table: order_status\n[\n  (status_id, status id.),\n  (status_value, status value. Value examples: ['Returned', 'Pending Delivery', 'Order Received', 'Delivery In Progress', 'Delivered', 'Cancelled'].)\n]\n# Table: publisher\n[\n  (publisher_id, publisher id.),\n  (publisher_name, publisher name.)\n]\n# Table: book\n[\n  (book_id, book id.),\n  (title, title.),\n  (isbn13, isbn13. Value examples: ['9790007672386', '9789998691568', '9789879397503', '9789875801448', '9789875661707', '9789872249755'].),\n  (language_id, language id.),\n  (num_pages, number pages.),\n  (publication_date, publication date. Value examples: ['2005-10-01'].),\n  (publisher_id, publisher id.)\n]\n# Table: book_author\n[\n  (book_id, book id.),\n  (author_id, author id.)\n]\n# Table: shipping_method\n[\n  (method_id, method id.),\n  (method_name, method name. Value examples: ['Standard', 'Priority', 'International', 'Express'].),\n  (cost, cost. Value examples: [24.5, 11.9, 8.9, 5.9].)\n]\n# Table: cust_order\n[\n  (order_id, order id.),\n  (order_date, order date. Value examples: ['2022-10-02 09:42:39'].),\n  (customer_id, customer id.),\n  (shipping_method_id, shipping method id.),\n  (dest_address_id, destination address id.)\n]\n# Table: order_history\n[\n  (history_id, history id.),\n  (order_id, order id.),\n  (status_id, status id.),\n  (status_date, status date. Value examples: ['2022-10-26 12:31:51'].)\n]\n# Table: order_line\n[\n  (line_id, line id.),\n  (order_id, order id.),\n  (book_id, book id.),\n  (price, price.)\n]",
        },
    },
]
